# -*- coding: utf-8 -*-
# Auto-generated code by cachemaker.py
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
apicache = {'authorize': {'securitygroupingress': {'name': 'authorizeSecurityGroupIngress', 'related': ['authorizeSecurityGroupEgress'], 'isasync': True, 'params': [{'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'an optional project of the security group'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the security group. Must be used with domainId.'}, {'name': 'endport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'end port for this ingress rule'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the cidr list associated'}, {'name': 'usersecuritygrouplist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'user to security group mapping'}, {'name': 'securitygroupid', 'required': False, 'related': ['listSecurityGroups', 'createSecurityGroup'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the security group. Mutually exclusive with securityGroupName parameter'}, {'name': 'icmptype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'type of the icmp message being sent'}, {'name': 'icmpcode', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'error code for this icmp message'}, {'name': 'startport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'start port for this ingress rule'}, {'name': 'protocol', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'TCP is default. UDP is the other supported protocol'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the security group. If the account parameter is used, domainId must also be used.'}, {'name': 'securitygroupname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The name of the security group. Mutually exclusive with securityGroupId parameter'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'description': 'Authorizes a particular ingress rule for this security group'}, 'securitygroupegress': {'name': 'authorizeSecurityGroupEgress', 'related': [], 'isasync': True, 'params': [{'name': 'icmpcode', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'error code for this icmp message'}, {'name': 'endport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'end port for this egress rule'}, {'name': 'securitygroupname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The name of the security group. Mutually exclusive with securityGroupId parameter'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the security group. If the account parameter is used, domainId must also be used.'}, {'name': 'usersecuritygrouplist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'user to security group mapping'}, {'name': 'startport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'start port for this egress rule'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'an optional project of the security group'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the security group. Must be used with domainId.'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the cidr list associated'}, {'name': 'securitygroupid', 'required': False, 'related': ['listSecurityGroups'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the security group. Mutually exclusive with securityGroupName parameter'}, {'name': 'icmptype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'type of the icmp message being sent'}, {'name': 'protocol', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'TCP is default. UDP is the other supported protocol'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'description': 'Authorizes a particular egress rule for this security group'}, 'samlsso': {'name': 'authorizeSamlSso', 'related': [], 'isasync': False, 'params': [{'name': 'userid', 'required': True, 'related': ['disableUser', 'getUser', 'lockUser', 'updateUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'User uuid'}, {'name': 'enable', 'required': True, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'If true, authorizes user to be able to use SAML for Single Sign. If False, disable user to user SAML SSO.'}, {'name': 'entityid', 'required': False, 'related': ['listIdps'], 'length': 255, 'type': 'string', 'description': 'The Identity Provider ID the user is allowed to get single signed on from'}], 'requiredparams': ['userid', 'enable'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Allow or disallow a user to use SAML SSO'}}, 'restore': {'virtualmachine': {'name': 'restoreVirtualMachine', 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'Virtual Machine ID'}, {'name': 'templateid', 'required': False, 'related': ['listIsos', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'an optional template Id to restore vm from the new template. This can be an ISO id in case of restore vm deployed using ISO'}], 'requiredparams': ['virtualmachineid'], 'response': [{'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}], 'name': 'egressrule'}], 'name': 'securitygroup'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}], 'description': 'Restore a VM to original template/ISO or new template/ISO'}}, 'suspend': {'project': {'name': 'suspendProject', 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject', 'suspendProject'], 'length': 255, 'type': 'uuid', 'description': 'id of the project to be suspended'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain id the project belongs to'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this project to acquire'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name where the project belongs to'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by project'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this project'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this project'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this project'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this project'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the project can own'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this project'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this project'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this project'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this project'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this project'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this project'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this project can acquire'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this project'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this project'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this project'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this project'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this project'}, {'description': 'the list of resource tags associated with vm', 'type': 'list', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'id', 'description': 'the id of the project'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this project'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the project can own'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this project'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by project'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by project'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the project can own'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this project'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by project'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this project'}, {'type': 'string', 'name': 'account', 'description': "the account name of the project's owner"}, {'type': 'string', 'name': 'name', 'description': 'the name of the project'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the project'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this project'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by project'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this project to acquire'}, {'type': 'string', 'name': 'state', 'description': 'the state of the project'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the project can own'}], 'description': 'Suspends a project'}}, 'revoke': {'securitygroupingress': {'name': 'revokeSecurityGroupIngress', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'The ID of the ingress rule'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a particular ingress rule from this security group'}, 'securitygroupegress': {'name': 'revokeSecurityGroupEgress', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['authorizeSecurityGroupEgress'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the egress rule'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a particular egress rule from this security group'}}, 'disassociate': {'ipaddress': {'name': 'disassociateIpAddress', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['associateIpAddress', 'associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the public IP address to disassociate'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Disassociates an IP address from the account.'}}, 'migrate': {'volume': {'name': 'migrateVolume', 'related': ['updateVolume', 'createVolume', 'attachVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': True, 'params': [{'name': 'volumeid', 'required': True, 'related': ['updateVolume', 'createVolume', 'attachVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'migrateVolume', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the volume'}, {'name': 'storageid', 'required': True, 'related': ['createStoragePool', 'updateStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'enableStorageMaintenance', 'cancelStorageMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'destination storage pool ID to migrate the volume to'}, {'name': 'livemigrate', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if the volume should be live migrated when it is attached to a running vm'}], 'requiredparams': ['volumeid', 'storageid'], 'response': [{'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}], 'description': 'Migrate volume'}, 'systemvm': {'name': 'migrateSystemVm', 'related': ['rebootSystemVm', 'listSystemVms', 'scaleSystemVm'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['rebootSystemVm', 'listSystemVms', 'scaleSystemVm', 'migrateSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine'}, {'name': 'hostid', 'required': True, 'related': ['listHosts', 'listExternalLoadBalancers'], 'length': 255, 'type': 'uuid', 'description': 'destination Host ID to migrate VM to'}], 'requiredparams': ['virtualmachineid', 'hostid'], 'response': [{'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}], 'description': 'Attempts Migration of a system virtual machine to the host specified.'}, 'virtualmachine': {'name': 'migrateVirtualMachine', 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'hostid', 'required': False, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'Destination Host ID to migrate VM to. Required for live migrating a VM from host to host'}, {'name': 'virtualmachineid', 'required': True, 'related': ['restoreVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine'}, {'name': 'storageid', 'required': False, 'related': ['findStoragePoolsForMigration'], 'length': 255, 'type': 'uuid', 'description': 'Destination storage pool ID to migrate VM volumes to. Required for migrating the root disk volume'}], 'requiredparams': ['virtualmachineid'], 'response': [{'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}], 'name': 'securitygroup'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}], 'description': 'Attempts Migration of a VM to a different host or Root volume of the vm to a different storage pool'}, 'virtualmachinewithvolume': {'name': 'migrateVirtualMachineWithVolume', 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'migrateto', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Map of pool to which each volume should be migrated (volume/pool pair)'}, {'name': 'hostid', 'required': True, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'Destination Host ID to migrate VM to.'}, {'name': 'virtualmachineid', 'required': True, 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine'}], 'requiredparams': ['hostid', 'virtualmachineid'], 'response': [{'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}], 'name': 'ingressrule'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}], 'description': 'Attempts Migration of a VM with its volumes to a different host'}}, 'lock': {'account': {'name': 'lockAccount', 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'listAccounts', 'createAccount', 'markDefaultZoneForAccount'], 'isasync': False, 'params': [{'name': 'account', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Locks the specified account.'}, {'name': 'domainid', 'required': True, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'Locks the specified account on this domain.'}], 'requiredparams': ['account', 'domainid'], 'response': [{'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}], 'name': 'user'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}, {'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}], 'description': 'Locks an account'}, 'user': {'name': 'lockUser', 'related': ['listUsers'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['lockUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'Locks user by user ID.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}], 'description': 'Locks a user account'}}, 'copy': {'iso': {'name': 'copyIso', 'related': ['listIsos', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listIsos', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'Template ID.'}, {'name': 'destzoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'ID of the zone the template is being copied to.'}, {'name': 'sourcezoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'ID of the zone the template is currently hosted on. If not specified and template is cross-zone, then we will sync this template to region wide image store.'}], 'requiredparams': ['id', 'destzoneid'], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}], 'description': 'Copies an ISO from one zone to another.'}, 'template': {'name': 'copyTemplate', 'related': ['listIsos', 'updateTemplate', 'copyIso', 'createTemplate', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'createTemplate', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'Template ID.'}, {'name': 'sourcezoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'ID of the zone the template is currently hosted on. If not specified and template is cross-zone, then we will sync this template to region wide image store.'}, {'name': 'destzoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'ID of the zone the template is being copied to.'}], 'requiredparams': ['id', 'destzoneid'], 'response': [{'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}], 'description': 'Copies a template from one zone to another.'}}, 'replace': {'networkacllist': {'name': 'replaceNetworkACLList', 'related': [], 'isasync': True, 'params': [{'name': 'aclid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network ACL'}, {'name': 'gatewayid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the private gateway'}, {'name': 'networkid', 'required': False, 'related': ['createNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network'}], 'requiredparams': ['aclid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Replaces ACL associated with a network or private gateway'}}, 'list': {'lbhealthcheckpolicies': {'name': 'listLBHealthCheckPolicies', 'related': ['updateLBHealthCheckPolicy', 'createLBHealthCheckPolicy'], 'isasync': False, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'id', 'required': False, 'related': ['updateLBHealthCheckPolicy', 'createLBHealthCheckPolicy', 'listLBHealthCheckPolicies'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the health check policy'}, {'name': 'lbruleid', 'required': False, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account of the HealthCheck policy'}, {'description': 'the list of healthcheckpolicies', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'the LB HealthCheck policy ID'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is policy for display to the regular user'}, {'type': 'int', 'name': 'healthcheckthresshold', 'description': 'Number of consecutive health check success before declaring an instance healthy'}, {'type': 'string', 'name': 'description', 'description': 'the description of the healthcheck policy'}, {'type': 'int', 'name': 'healthcheckinterval', 'description': 'Amount of time between health checks'}, {'type': 'int', 'name': 'unhealthcheckthresshold', 'description': 'Number of consecutive health check failures before declaring an instance unhealthy.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'pingpath', 'description': 'the pingpath  of the healthcheck policy'}, {'type': 'int', 'name': 'responsetime', 'description': 'Time to wait when receiving a response from the health check'}], 'name': 'healthcheckpolicy'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the HealthCheck policy'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the HealthCheck policy'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the HealthCheck policy belongs to'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the LB rule ID'}], 'description': 'Lists load balancer health check policies.'}, 'apis': {'name': 'listApis', 'related': [], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'API name'}], 'requiredparams': [], 'response': [{'description': 'the list params the api accepts', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'parameter type'}, {'type': 'string', 'name': 'related', 'description': 'comma separated related apis to get the parameter'}, {'type': 'string', 'name': 'description', 'description': 'description of the api parameter'}, {'type': 'int', 'name': 'length', 'description': 'length of the parameter'}, {'type': 'string', 'name': 'since', 'description': 'version of CloudStack the api was introduced in'}, {'type': 'boolean', 'name': 'required', 'description': 'true if this parameter is required for the api request'}, {'type': 'string', 'name': 'name', 'description': 'the name of the api parameter'}], 'name': 'params'}, {'description': 'api response fields', 'type': 'set', 'response': [{'type': 'set', 'name': 'response', 'description': 'api response fields'}, {'type': 'string', 'name': 'description', 'description': 'description of the api response field'}, {'type': 'string', 'name': 'type', 'description': 'response field type'}, {'type': 'string', 'name': 'name', 'description': 'the name of the api response field'}], 'name': 'response'}, {'type': 'string', 'name': 'related', 'description': 'comma separated related apis'}, {'type': 'string', 'name': 'since', 'description': 'version of CloudStack the api was introduced in'}, {'type': 'boolean', 'name': 'isasync', 'description': 'true if api is asynchronous'}, {'type': 'string', 'name': 'name', 'description': 'the name of the api command'}, {'type': 'string', 'name': 'description', 'description': 'description of the api'}, {'type': 'string', 'name': 'type', 'description': 'response field type'}], 'description': 'lists all available apis on the server, provided by the Api Discovery plugin'}, 'instancegroups': {'name': 'listInstanceGroups', 'related': ['createInstanceGroup', 'updateInstanceGroup'], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list instance groups by name'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['createInstanceGroup', 'updateInstanceGroup', 'listInstanceGroups'], 'length': 255, 'type': 'uuid', 'description': 'list instance groups by ID'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the instance group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the instance group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project ID of the instance group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the instance group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the instance group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the instance group'}, {'type': 'date', 'name': 'created', 'description': 'time and date the instance group was created'}], 'description': 'Lists vm groups'}, 'ucsmanagers': {'name': 'listUcsManagers', 'related': ['addUcsManager'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the zone id'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listUcsManagers', 'addUcsManager'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the ucs manager'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'url', 'description': 'the url of ucs manager'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the ucs manager'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of ucs manager'}, {'type': 'string', 'name': 'name', 'description': 'the name of ucs manager'}], 'description': 'List ucs manager'}, 'physicalnetworks': {'name': 'listPhysicalNetworks', 'related': [], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'search by name'}, {'name': 'id', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list physical network by id'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the physical network'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'networkspeed', 'description': 'the speed of the physical network'}, {'type': 'string', 'name': 'isolationmethods', 'description': 'isolation methods'}, {'type': 'string', 'name': 'id', 'description': 'the uuid of the physical network'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the physical network owner'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the physical network'}, {'type': 'string', 'name': 'vlan', 'description': 'the vlan of the physical network'}, {'type': 'string', 'name': 'tags', 'description': 'comma separated tag'}, {'type': 'string', 'name': 'name', 'description': 'name of the physical network'}, {'type': 'string', 'name': 'state', 'description': 'state of the physical network'}, {'type': 'string', 'name': 'broadcastdomainrange', 'description': 'Broadcast domain range of the physical network'}], 'description': 'Lists physical networks'}, 'vmsnapshot': {'name': 'listVMSnapshot', 'related': [], 'isasync': False, 'params': [{'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'state of the virtual machine snapshot'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists snapshot by snapshot name or display name'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'virtualmachineid', 'required': False, 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the vm'}, {'name': 'vmsnapshotid', 'required': False, 'related': ['listVMSnapshot'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the VM snapshot'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'date', 'name': 'created', 'description': 'the create date of the vm snapshot'}, {'type': 'boolean', 'name': 'current', 'description': 'indiates if this is current snapshot'}, {'type': 'state', 'name': 'state', 'description': 'the state of the vm snapshot'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the vm snapshot'}, {'type': 'string', 'name': 'name', 'description': 'the name of the vm snapshot'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the vm snapshot'}, {'type': 'string', 'name': 'parentName', 'description': 'the parent displayName of the vm snapshot'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'string', 'name': 'displayname', 'description': 'the display name of the vm snapshot'}, {'type': 'string', 'name': 'description', 'description': 'the description of the vm snapshot'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the vm ID of the vm snapshot'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'string', 'name': 'parent', 'description': 'the parent ID of the vm snapshot'}, {'type': 'string', 'name': 'type', 'description': 'VM Snapshot type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}], 'description': 'List virtual machine snapshot by conditions'}, 'ldapconfigurations': {'name': 'listLdapConfigurations', 'related': ['addLdapConfiguration', 'deleteLdapConfiguration'], 'isasync': False, 'params': [{'name': 'port', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Port'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'hostname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'int', 'name': 'port', 'description': 'port'}, {'type': 'string', 'name': 'hostname', 'description': 'hostname'}], 'description': 'Lists all LDAP configurations'}, 'capabilities': {'name': 'listCapabilities', 'related': [], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'kvmsnapshotenabled', 'description': 'true if snapshot is supported for KVM host, false otherwise'}, {'type': 'boolean', 'name': 'regionsecondaryenabled', 'description': 'true if region wide secondary is enabled, false otherwise'}, {'type': 'long', 'name': 'customdiskofferingmaxsize', 'description': 'maximum size that can be specified when create disk from disk offering with custom size'}, {'type': 'long', 'name': 'customdiskofferingminsize', 'description': 'minimum size that can be specified when create disk from disk offering with custom size'}, {'type': 'string', 'name': 'supportELB', 'description': 'true if region supports elastic load balancer on basic zones'}, {'type': 'integer', 'name': 'apilimitinterval', 'description': 'time interval (in seconds) to reset api count'}, {'type': 'boolean', 'name': 'projectinviterequired', 'description': 'If invitation confirmation is required when add account to project'}, {'type': 'string', 'name': 'cloudstackversion', 'description': 'version of the cloud stack'}, {'type': 'boolean', 'name': 'allowusercreateprojects', 'description': 'true if regular user is allowed to create projects'}, {'type': 'integer', 'name': 'apilimitmax', 'description': 'Max allowed number of api requests within the specified interval'}, {'type': 'boolean', 'name': 'securitygroupsenabled', 'description': 'true if security groups support is enabled, false otherwise'}, {'type': 'boolean', 'name': 'userpublictemplateenabled', 'description': 'true if user and domain admins can set templates to be shared, false otherwise'}], 'description': 'Lists capabilities'}, 'storagetags': {'name': 'listStorageTags', 'related': [], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'long', 'name': 'poolid', 'description': 'the pool ID of the storage tag'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the storage tag'}, {'type': 'string', 'name': 'name', 'description': 'the name of the storage tag'}], 'description': 'Lists storage tags'}, 'andswitchsamlaccount': {'name': 'listAndSwitchSamlAccount', 'related': [], 'isasync': False, 'params': [{'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'Domain uuid'}, {'name': 'userid', 'required': False, 'related': ['enableUser', 'disableUser', 'getUser', 'lockUser', 'updateUser', 'createUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'User uuid'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Lists and switches to other SAML accounts owned by the SAML user'}, 'clusters': {'name': 'listClusters', 'related': ['updateCluster'], 'isasync': False, 'params': [{'name': 'managedstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'whether this cluster is managed by cloudstack'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'podid', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'lists clusters by Pod ID'}, {'name': 'clustertype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists clusters by cluster type'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'lists clusters by Zone ID'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['listClusters', 'updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'lists clusters by the cluster ID'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists clusters by hypervisor type'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists clusters by allocation state'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists clusters by the cluster name'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'showcapacities', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'flag to display the capacity of the clusters'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'podname', 'description': 'the Pod name of the cluster'}, {'type': 'string', 'name': 'id', 'description': 'the cluster ID'}, {'type': 'string', 'name': 'managedstate', 'description': 'whether this cluster is managed by cloudstack'}, {'type': 'string', 'name': 'memoryovercommitratio', 'description': 'The memory overcommit ratio of the cluster'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the cluster'}, {'type': 'string', 'name': 'ovm3vip', 'description': 'Ovm3 VIP to use for pooling and/or clustering'}, {'type': 'string', 'name': 'cpuovercommitratio', 'description': 'The cpu overcommit ratio of the cluster'}, {'type': 'string', 'name': 'clustertype', 'description': 'the type of the cluster'}, {'type': 'string', 'name': 'name', 'description': 'the cluster name'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the cluster'}, {'type': 'string', 'name': 'hypervisortype', 'description': 'the hypervisor type of the cluster'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the cluster'}, {'description': 'the capacity of the Cluster', 'type': 'list', 'response': [{'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}], 'name': 'capacity'}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the cluster'}], 'description': 'Lists clusters.'}, 'resourcelimits': {'name': 'listResourceLimits', 'related': [], 'isasync': False, 'params': [{'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Lists resource limits by ID.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'resourcetype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Type of resource. Values are 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 and 11. 0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses an account can own. 2 - Volume. Number of disk volumes an account can own. 3 - Snapshot. Number of snapshots an account can own. 4 - Template. Number of templates an account can register/create. 5 - Project. Number of projects an account can own. 6 - Network. Number of networks an account can own. 7 - VPC. Number of VPC an account can own. 8 - CPU. Number of CPU an account can allocate for his resources. 9 - Memory. Amount of RAM an account can allocate for his resources. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. '}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the resource limit'}, {'type': 'string', 'name': 'account', 'description': 'the account of the resource limit'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the resource limit'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the resource limit'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the resource limit'}, {'type': 'long', 'name': 'max', 'description': 'the maximum number of the resource. A -1 means the resource currently has no limit.'}], 'description': 'Lists resource limits.'}, 'firewallrules': {'name': 'listFirewallRules', 'related': ['createFirewallRule', 'updateFirewallRule', 'listEgressFirewallRules'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'ipaddressid', 'required': False, 'related': ['associateIpAddress', 'associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the ID of IP address of the firewall services'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list firewall rules for certain network'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'Lists rule with the specified ID.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the firewall rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the firewall rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of firewall rule's port range"}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the firewall rule'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of firewall rule's port range"}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the firewall rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of the firewall rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}], 'description': 'Lists all firewall rules for an IP address.'}, 'dedicatedzones': {'name': 'listDedicatedZones', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account associated with the zone. Must be used with domainId.'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Zone'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the domain associated with the zone'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'affinitygroupid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list dedicated zones by affinity group'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the ID of the Zone'}, {'type': 'string', 'name': 'zonename', 'description': 'the Name of the Zone'}, {'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the zone'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID to which the Zone is dedicated'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account Id to which the Zone is dedicated'}], 'description': 'List dedicated zones.'}, 'supportednetworkservices': {'name': 'listSupportedNetworkServices', 'related': [], 'isasync': False, 'params': [{'name': 'provider', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'network service provider name'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'service', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'network service name to list providers and capabilities of'}], 'requiredparams': [], 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'description': 'Lists all network services provided by CloudStack or for the given Provider.'}, 'loadbalancerrules': {'name': 'listLoadBalancerRules', 'related': ['createLoadBalancerRule'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'virtualmachineid', 'required': False, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine of the load balancer rule'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the load balancer rule'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list by network ID the rule belongs to'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the availability zone ID'}, {'name': 'publicipid', 'required': False, 'related': ['associateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the public IP address ID of the load balancer rule'}, {'name': 'id', 'required': False, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}], 'requiredparams': [], 'response': [{'description': 'the list of resource tags associated with load balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the loadbalanacer rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'id', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'name', 'description': 'the name of the load balancer'}, {'type': 'string', 'name': 'publicport', 'description': 'the public port'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the rule belongs to'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the lb rule belongs to'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address id'}, {'type': 'string', 'name': 'privateport', 'description': 'the private port'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'description', 'description': 'the description of the load balancer'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}], 'description': 'Lists load balancer rules.'}, 'autoscalepolicies': {'name': 'listAutoScalePolicies', 'related': ['updateAutoScalePolicy', 'createAutoScalePolicy'], 'isasync': False, 'params': [{'name': 'vmgroupid', 'required': False, 'related': ['createAutoScaleVmGroup', 'disableAutoScaleVmGroup', 'enableAutoScaleVmGroup', 'updateAutoScaleVmGroup'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale vm group'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['updateAutoScalePolicy', 'listAutoScalePolicies', 'createAutoScalePolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale policy'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'conditionid', 'required': False, 'related': ['listConditions'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the condition of the policy'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'action', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the action to be executed if all the conditions evaluate to true for the specified duration.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the autoscale policy'}, {'type': 'list', 'name': 'conditions', 'description': 'the list of IDs of the conditions that are being evaluated on every interval'}, {'type': 'integer', 'name': 'quiettime', 'description': 'the cool down period for which the policy should not be evaluated after the action has been taken'}, {'type': 'integer', 'name': 'duration', 'description': 'the duration for which the conditions have to be true before action is taken'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the autoscale policy'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id autoscale policy'}, {'type': 'string', 'name': 'action', 'description': 'the action to be executed if all the conditions evaluate to true for the specified duration.'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale policy ID'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the autoscale policy'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the autoscale policy'}], 'description': 'Lists autoscale policies.'}, 'niciranvpdevices': {'name': 'listNiciraNvpDevices', 'related': ['addNiciraNvpDevice'], 'isasync': False, 'params': [{'name': 'nvpdeviceid', 'required': False, 'related': ['addNiciraNvpDevice', 'listNiciraNvpDevices'], 'length': 255, 'type': 'uuid', 'description': 'nicira nvp device ID'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'transportzoneuuid', 'description': 'the transport zone Uuid'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this Nirica Nvp belongs to'}, {'type': 'string', 'name': 'l3gatewayserviceuuid', 'description': 'this L3 gateway service Uuid'}, {'type': 'string', 'name': 'nvpdeviceid', 'description': 'device id of the Nicire Nvp'}, {'type': 'string', 'name': 'hostname', 'description': 'the controller Ip address'}, {'type': 'string', 'name': 'niciradevicename', 'description': 'device name'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}], 'description': 'Lists Nicira NVP devices'}, 'f5loadbalancernetworks': {'name': 'listF5LoadBalancerNetworks', 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'lbdeviceid', 'required': True, 'related': ['addF5LoadBalancer'], 'length': 255, 'type': 'uuid', 'description': 'f5 load balancer device ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['lbdeviceid'], 'response': [{'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}], 'description': 'lists network that are using a F5 load balancer device'}, 'templatepermissions': {'name': 'listTemplatePermissions', 'related': ['listIsoPermissions', 'listIsoPermissions', 'listTemplatePermissions'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listTemplatePermissions', 'listIsoPermissions', 'listIsoPermissions', 'listTemplatePermissions'], 'length': 255, 'type': 'uuid', 'description': 'the template ID'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'list', 'name': 'projectids', 'description': 'the list of projects the template is available for'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'list', 'name': 'account', 'description': 'the list of accounts the template is available for'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}], 'description': 'List template visibility and all accounts that have permissions to view this template.'}, 'projects': {'name': 'listProjects', 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'isasync': False, 'params': [{'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list projects by state'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list projects by display text'}, {'name': 'id', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list projects by project ID'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List projects by tags (key/value pairs)'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list projects by name'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this project'}, {'type': 'string', 'name': 'account', 'description': "the account name of the project's owner"}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the project'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the project can own'}, {'type': 'string', 'name': 'name', 'description': 'the name of the project'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this project to acquire'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this project'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this project can acquire'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the project can own'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this project'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this project'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by project'}, {'description': 'the list of resource tags associated with vm', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the project can own'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this project'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by project'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this project'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this project to acquire'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name where the project belongs to'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this project'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this project'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id the project belongs to'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this project'}, {'type': 'string', 'name': 'state', 'description': 'the state of the project'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this project'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this project'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this project'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by project'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the project can own'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this project'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this project'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this project'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this project'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the project can own'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this project'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this project'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by project'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this project'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this project'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'id', 'description': 'the id of the project'}], 'description': 'Lists projects and provides detailed information for listed projects'}, 'systemvms': {'name': 'listSystemVms', 'related': ['rebootSystemVm', 'scaleSystemVm'], 'isasync': False, 'params': [{'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the state of the system VM'}, {'name': 'storageid', 'required': False, 'related': ['findStoragePoolsForMigration'], 'length': 255, 'type': 'uuid', 'description': "the storage ID where vm's volumes belong to"}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the system VM'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'systemvmtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the system VM type. Possible types are "consoleproxy" and "secondarystoragevm".'}, {'name': 'id', 'required': False, 'related': ['rebootSystemVm', 'listSystemVms', 'scaleSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the system VM'}, {'name': 'hostid', 'required': False, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'the host ID of the system VM'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID of the system VM'}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID of the system VM'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}], 'description': 'List system virtual machines.'}, 'portforwardingrules': {'name': 'listPortForwardingRules', 'related': ['listIpForwardingRules', 'createPortForwardingRule'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list port forwarding rules for certain network'}, {'name': 'ipaddressid', 'required': False, 'related': ['associateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the ID of IP address of the port forwarding services'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'id', 'required': False, 'related': ['listIpForwardingRules', 'createPortForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'Lists rule with the specified ID.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the port forwarding rule'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the port forwarding rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the port forwarding rule belongs to'}, {'type': 'string', 'name': 'publicport', 'description': "the starting port of port forwarding rule's public port range"}, {'type': 'string', 'name': 'privateendport', 'description': "the ending port of port forwarding rule's private port range"}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'publicendport', 'description': "the ending port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the port forwarding rule'}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'the VM display name for the port forwarding rule'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is firewall for display to the regular user'}, {'type': 'string', 'name': 'privateport', 'description': "the starting port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'vmguestip', 'description': 'the vm ip address for the port forwarding rule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the port forwarding rule'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the VM ID for the port forwarding rule'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'the VM name for the port forwarding rule'}], 'description': 'Lists all port forwarding rules for an IP address.'}, 'networkacllists': {'name': 'listNetworkACLLists', 'related': ['createNetworkACLList'], 'isasync': False, 'params': [{'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'id', 'required': False, 'related': ['listNetworkACLLists', 'createNetworkACLList'], 'length': 255, 'type': 'uuid', 'description': 'Lists network ACL with the specified ID.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list network ACLs by network ID'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network ACLs by specified name'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'list network ACLs by VPC ID'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'fordisplay', 'description': 'is ACL for display to the regular user'}, {'type': 'string', 'name': 'vpcid', 'description': 'Id of the VPC this ACL is associated with'}, {'type': 'string', 'name': 'description', 'description': 'Description of the ACL'}, {'type': 'string', 'name': 'name', 'description': 'the Name of the ACL'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the ACL'}], 'description': 'Lists all network ACLs'}, 'storageproviders': {'name': 'listStorageProviders', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'type', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the type of storage provider: either primary or image'}], 'requiredparams': ['type'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the storage provider'}, {'type': 'string', 'name': 'type', 'description': 'the type of the storage provider: primary or image provider'}], 'description': 'Lists storage providers.'}, 'vpngateways': {'name': 'listVpnGateways', 'related': ['createVpnGateway', 'updateVpnGateway'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'id of vpc'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['createVpnGateway', 'listVpnGateways', 'updateVpnGateway'], 'length': 255, 'type': 'uuid', 'description': 'id of the vpn gateway'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'vpcid', 'description': 'the vpc id of this gateway'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'string', 'name': 'id', 'description': 'the vpn gateway ID'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpn gateway for display to the regular user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address'}], 'description': 'Lists site 2 site vpn gateways'}, 'events': {'name': 'listEvents', 'related': [], 'isasync': False, 'params': [{'name': 'duration', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the duration of the event'}, {'name': 'startdate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'the start date range of the list you want to retrieve (use format "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss")'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'enddate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'the end date range of the list you want to retrieve (use format "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss")'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'id', 'required': False, 'related': ['listEvents'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the event'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the event type (see event types)'}, {'name': 'level', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the event level (INFO, WARN, ERROR)'}, {'name': 'entrytime', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the time the event was entered'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'level', 'description': 'the event level (INFO, WARN, ERROR)'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the event'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'date', 'name': 'created', 'description': 'the date the event was created'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'description', 'description': 'a brief description of the event'}, {'type': 'string', 'name': 'type', 'description': 'the type of the event (see event types)'}, {'type': 'string', 'name': 'domainid', 'description': "the id of the account's domain"}, {'type': 'state', 'name': 'state', 'description': 'the state of the event'}, {'type': 'string', 'name': 'domain', 'description': "the name of the account's domain"}, {'type': 'string', 'name': 'username', 'description': "the name of the user who performed the action (can be different from the account if an admin is performing an action for a user, e.g. starting/stopping a user's virtual machine)"}, {'type': 'string', 'name': 'account', 'description': 'the account name for the account that owns the object being acted on in the event (e.g. the owner of the virtual machine, ip address, or security group)'}, {'type': 'string', 'name': 'parentid', 'description': 'whether the event is parented'}], 'description': 'A command to list events.'}, 'idps': {'name': 'listIdps', 'related': [], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'id', 'description': 'The IdP Entity ID'}, {'type': 'string', 'name': 'orgName', 'description': 'The IdP Organization Name'}, {'type': 'string', 'name': 'orgUrl', 'description': 'The IdP Organization URL'}], 'description': 'Returns list of discovered SAML Identity Providers'}, 'hosttags': {'name': 'listHostTags', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the host tag'}, {'type': 'long', 'name': 'hostid', 'description': 'the host ID of the host tag'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host tag'}], 'description': 'Lists host tags'}, 'hosts': {'name': 'listHosts', 'related': [], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the host'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the state of the host'}, {'name': 'hahost', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true, list only hosts dedicated to HA'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID for the host'}, {'name': 'resourcestate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list hosts by resource state. Resource state represents current state determined by admin of host, valule can be one of [Enabled, Disabled, Unmanaged, PrepareForMaintenance, ErrorInMaintenance, Maintenance, Error]'}, {'name': 'virtualmachineid', 'required': False, 'related': ['updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'lists hosts in the same cluster as this VM and flag hosts with enough CPU/RAm to host this VM'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'clusterid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'lists hosts existing in particular cluster'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the host'}, {'name': 'id', 'required': False, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'the id of the host'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the host type'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'hypervisor type of host: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'comma separated list of host details requested, value can be a list of [ min, all, capacity, events, stats]'}], 'requiredparams': [], 'response': [{'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}, {'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}, {'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}, {'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}, {'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}, {'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}], 'name': 'vgpu'}], 'name': 'gpugroup'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}], 'description': 'Lists hosts.'}, 'hypervisorcapabilities': {'name': 'listHypervisorCapabilities', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the hypervisor for which to restrict the search'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listHypervisorCapabilities'], 'length': 255, 'type': 'uuid', 'description': 'ID of the hypervisor capability'}], 'requiredparams': [], 'response': [{'type': 'long', 'name': 'maxguestslimit', 'description': 'the maximum number of guest vms recommended for this hypervisor'}, {'type': 'integer', 'name': 'maxdatavolumeslimit', 'description': 'the maximum number of Data Volumes that can be attached for this hypervisor'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the hypervisor type'}, {'type': 'boolean', 'name': 'storagemotionenabled', 'description': 'true if storage motion is supported'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the hypervisor capabilities row'}, {'type': 'integer', 'name': 'maxhostspercluster', 'description': 'the maximum number of Hosts per cluster for this hypervisor'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'boolean', 'name': 'securitygroupenabled', 'description': 'true if security group is supported'}], 'description': 'Lists all hypervisor capabilities.'}, 'deploymentplanners': {'name': 'listDeploymentPlanners', 'related': [], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'Deployment Planner name'}], 'description': 'Lists all DeploymentPlanners available.'}, 'configurations': {'name': 'listConfigurations', 'related': [], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists configuration by name'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Zone to update the parameter value for corresponding zone'}, {'name': 'clusterid', 'required': False, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Cluster to update the parameter value for corresponding cluster'}, {'name': 'accountid', 'required': False, 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'listAccounts', 'lockAccount', 'createAccount', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Account to update the parameter value for corresponding account'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'category', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists configurations by category'}, {'name': 'storageid', 'required': False, 'related': ['createStoragePool', 'findStoragePoolsForMigration', 'listStoragePools'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Storage pool to update the parameter value for corresponding storage pool'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'value', 'description': 'the value of the configuration'}, {'type': 'long', 'name': 'id', 'description': 'the value of the configuration'}, {'type': 'string', 'name': 'category', 'description': 'the category of the configuration'}, {'type': 'string', 'name': 'description', 'description': 'the description of the configuration'}, {'type': 'string', 'name': 'name', 'description': 'the name of the configuration'}, {'type': 'string', 'name': 'scope', 'description': 'scope(zone/cluster/pool/account) of the parameter that needs to be updated'}], 'description': 'Lists all configurations.'}, 'paloaltofirewalls': {'name': 'listPaloAltoFirewalls', 'related': ['configurePaloAltoFirewall'], 'isasync': False, 'params': [{'name': 'fwdeviceid', 'required': False, 'related': ['configurePaloAltoFirewall', 'listPaloAltoFirewalls'], 'length': 255, 'type': 'uuid', 'description': 'Palo Alto firewall device ID'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this Palo Alto firewall belongs to'}, {'type': 'string', 'name': 'fwdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'fwdeviceid', 'description': 'device id of the Palo Alto firewall'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'long', 'name': 'fwdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'fwdevicename', 'description': 'device name'}], 'description': 'lists Palo Alto firewall devices in a physical network'}, 'usagerecords': {'name': 'listUsageRecords', 'related': [], 'isasync': False, 'params': [{'name': 'usageid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List usage records for the specified usage UUID. Can be used only together with TYPE parameter.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'List usage records for the specified domain.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'List usage records for specified project'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'List usage records for the specified usage type'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List usage records for the specified user.'}, {'name': 'enddate', 'required': True, 'related': [], 'length': 255, 'type': 'date', 'description': 'End date range for usage record query (use format "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss", e.g. startDate=2015-01-01 or startdate=2015-01-01 10:30:00).'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'startdate', 'required': True, 'related': [], 'length': 255, 'type': 'date', 'description': 'Start date range for usage record query (use format "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss", e.g. startDate=2015-01-01 or startdate=2015-01-01 11:00:00).'}, {'name': 'accountid', 'required': False, 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'listAccounts', 'updateAccount', 'lockAccount', 'createAccount', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'List usage records for the specified account'}], 'requiredparams': ['enddate', 'startdate'], 'response': [{'type': 'string', 'name': 'description', 'description': 'description of the usage record'}, {'type': 'string', 'name': 'type', 'description': 'resource type'}, {'type': 'string', 'name': 'rawusage', 'description': 'raw usage in hours'}, {'type': 'string', 'name': 'accountid', 'description': 'the user account Id'}, {'type': 'boolean', 'name': 'issystem', 'description': 'True if the IPAddress is system IP - allocated during vm deploy or lb rule create'}, {'type': 'string', 'name': 'startdate', 'description': 'start date of the usage record'}, {'type': 'long', 'name': 'size', 'description': 'resource size'}, {'type': 'string', 'name': 'account', 'description': 'the user account name'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'speed of each cpu of resource'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'virtual machine ID'}, {'type': 'string', 'name': 'networkid', 'description': 'id of the network'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID'}, {'type': 'integer', 'name': 'usagetype', 'description': 'usage type ID'}, {'type': 'string', 'name': 'templateid', 'description': 'template ID'}, {'type': 'boolean', 'name': 'issourcenat', 'description': 'True if the IPAddress is source NAT'}, {'type': 'string', 'name': 'usageid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'name', 'description': 'virtual machine name'}, {'type': 'string', 'name': 'usage', 'description': 'usage in hours'}, {'type': 'long', 'name': 'virtualsize', 'description': 'virtual size of resource'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'True if the resource is default'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the resource'}, {'type': 'string', 'name': 'enddate', 'description': 'end date of the usage record'}, {'type': 'string', 'name': 'domain', 'description': 'the domain the resource is associated with'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the resource'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID'}, {'type': 'long', 'name': 'cpunumber', 'description': 'number of cpu of resource'}, {'type': 'string', 'name': 'offeringid', 'description': 'offering ID'}, {'type': 'long', 'name': 'memory', 'description': 'memory allocated for the resource'}], 'description': 'Lists usage records for accounts'}, 'storagepools': {'name': 'listStoragePools', 'related': ['findStoragePoolsForMigration'], 'isasync': False, 'params': [{'name': 'path', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the storage pool path'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID for the storage pool'}, {'name': 'id', 'required': False, 'related': ['findStoragePoolsForMigration', 'listStoragePools'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the storage pool'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the storage pool'}, {'name': 'scope', 'required': False, 'related': ['findStoragePoolsForMigration', 'listStoragePools'], 'length': 255, 'type': 'string', 'description': 'the ID of the storage pool'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'ipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the IP address for the storage pool'}, {'name': 'clusterid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list storage pools belongig to the specific cluster'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the storage pool'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the storage pool'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the storage pool'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the storage pool was created'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster for the storage pool'}, {'type': 'string', 'name': 'overprovisionfactor', 'description': 'the overprovisionfactor for the storage pool'}, {'type': 'storagepoolstatus', 'name': 'state', 'description': 'the state of the storage pool'}, {'type': 'string', 'name': 'name', 'description': 'the name of the storage pool'}, {'type': 'string', 'name': 'scope', 'description': 'the scope of the storage pool'}, {'type': 'long', 'name': 'capacityiops', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the storage pool'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the storage pool'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor type of the storage pool'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'type', 'description': 'the storage pool type'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the storage pool'}, {'type': 'string', 'name': 'path', 'description': 'the storage pool path'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the storage pool'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this pool is suitable to migrate a volume, false otherwise'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the storage pool'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the storage pool'}, {'type': 'map', 'name': 'storagecapabilities', 'description': 'the storage pool capabilities'}, {'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster for the storage pool'}, {'type': 'long', 'name': 'disksizeused', 'description': "the host's currently used disk size"}], 'description': 'Lists storage pools.'}, 'ucsblades': {'name': 'listUcsBlades', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'ucsmanagerid', 'required': True, 'related': ['addUcsManager'], 'length': 255, 'type': 'uuid', 'description': 'ucs manager id'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['ucsmanagerid'], 'response': [{'type': 'string', 'name': 'profiledn', 'description': 'associated ucs profile dn'}, {'type': 'string', 'name': 'ucsmanagerid', 'description': 'ucs manager id'}, {'type': 'string', 'name': 'bladedn', 'description': 'ucs blade dn'}, {'type': 'string', 'name': 'hostid', 'description': 'cloudstack host id this blade associates to'}, {'type': 'string', 'name': 'id', 'description': 'ucs blade id'}], 'description': 'List ucs blades'}, 'snapshots': {'name': 'listSnapshots', 'related': ['revertSnapshot', 'createSnapshot'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'volumeid', 'required': False, 'related': ['createVolume', 'createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['revertSnapshot', 'listSnapshots', 'createSnapshot'], 'length': 255, 'type': 'uuid', 'description': 'lists snapshot by snapshot ID'}, {'name': 'snapshottype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'valid values are MANUAL or RECURRING.'}, {'name': 'intervaltype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'valid values are HOURLY, DAILY, WEEKLY, and MONTHLY.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'list snapshots by zone id'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists snapshot by snapshot name'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'volumename', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'domainid', 'description': "the domain ID of the snapshot's account"}, {'type': 'string', 'name': 'zoneid', 'description': 'id of the availability zone'}, {'type': 'string', 'name': 'volumetype', 'description': 'type of the disk volume'}, {'type': 'string', 'name': 'volumeid', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the snapshot'}, {'type': 'string', 'name': 'intervaltype', 'description': 'valid types are hourly, daily, weekly, monthy, template, and none.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the snapshot'}, {'type': 'long', 'name': 'physicalsize', 'description': 'physical size of backedup snapshot on image store'}, {'type': 'date', 'name': 'created', 'description': '  the date the snapshot was created'}, {'type': 'string', 'name': 'id', 'description': 'ID of the snapshot'}, {'type': 'state', 'name': 'state', 'description': 'the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the snapshot'}, {'description': 'the list of resource tags associated with snapshot', 'type': 'list', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'domain', 'description': "the domain name of the snapshot's account"}, {'type': 'string', 'name': 'name', 'description': 'name of the snapshot'}, {'type': 'string', 'name': 'snapshottype', 'description': 'the type of the snapshot'}, {'type': 'boolean', 'name': 'revertable', 'description': 'indicates whether the underlying storage supports reverting the volume to this snapshot'}], 'description': 'Lists all available snapshots for the account.'}, 'vmwaredcs': {'name': 'listVmwareDcs', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'zoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'Id of the CloudStack zone.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['zoneid'], 'response': [{'type': 'string', 'name': 'name', 'description': 'The VMware Datacenter name'}, {'type': 'long', 'name': 'zoneid', 'description': 'the Zone ID associated with this VMware Datacenter'}, {'type': 'string', 'name': 'id', 'description': 'The VMware Datacenter ID'}, {'type': 'string', 'name': 'vcenter', 'description': 'The VMware vCenter name/ip'}], 'description': 'Retrieves VMware DC(s) associated with a zone.'}, 'dedicatedguestvlanranges': {'name': 'listDedicatedGuestVlanRanges', 'related': ['dedicateGuestVlanRange'], 'isasync': False, 'params': [{'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID with which the guest VLAN range is associated.  If used with the account parameter, returns all guest VLAN ranges for that account in the specified domain.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'project who will own the guest VLAN range'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'zone of the guest VLAN range'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'physical network id of the guest VLAN range'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account with which the guest VLAN range is associated. Must be used with the domainId parameter.'}, {'name': 'id', 'required': False, 'related': ['listDedicatedGuestVlanRanges', 'dedicateGuestVlanRange'], 'length': 255, 'type': 'uuid', 'description': 'list dedicated guest vlan ranges by id'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'guestvlanrange', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the dedicated guest vlan range'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the guest vlan range'}, {'type': 'string', 'name': 'guestvlanrange', 'description': 'the guest VLAN range'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the guest VLAN range'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the guest VLAN range'}, {'type': 'string', 'name': 'account', 'description': 'the account of the guest VLAN range'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the guest VLAN range'}, {'type': 'long', 'name': 'physicalnetworkid', 'description': 'the physical network of the guest vlan range'}, {'type': 'long', 'name': 'zoneid', 'description': 'the zone of the guest vlan range'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the guest vlan range'}], 'description': 'Lists dedicated guest vlan ranges'}, 'serviceofferings': {'name': 'listServiceOfferings', 'related': [], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the service offering'}, {'name': 'systemvmtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the system VM type. Possible types are "consoleproxy", "secondarystoragevm" or "domainrouter".'}, {'name': 'id', 'required': False, 'related': ['listServiceOfferings'], 'length': 255, 'type': 'uuid', 'description': 'ID of the service offering'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'issystem', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'is this a system vm offering'}, {'name': 'virtualmachineid', 'required': False, 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine. Pass this in if you want to see the available service offering that a virtual machine can be changed to.'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'type': 'boolean', 'name': 'limitcpuuse', 'description': 'restrict the CPU usage to committed service offering'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the service offering.'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the service offering'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'is this a the systemvm type for system vm offering'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the service offering'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the service offering'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the service offering'}, {'type': 'map', 'name': 'serviceofferingdetails', 'description': 'additional key/value details tied with this service offering'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the service offering'}, {'type': 'boolean', 'name': 'offerha', 'description': 'the ha support in the service offering'}, {'type': 'boolean', 'name': 'isvolatile', 'description': 'true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the clock rate CPU speed in Mhz'}, {'type': 'string', 'name': 'storagetype', 'description': 'the storage type for this service offering'}, {'type': 'boolean', 'name': 'defaultuse', 'description': 'is this a  default system vm offering'}, {'type': 'string', 'name': 'hosttags', 'description': 'the host tag for the service offering'}, {'type': 'boolean', 'name': 'issystem', 'description': 'is this a system vm offering'}, {'type': 'long', 'name': 'maxiops', 'description': 'the max iops of the disk offering'}, {'type': 'boolean', 'name': 'iscustomized', 'description': 'is true if the offering is customized'}, {'type': 'integer', 'name': 'hypervisorsnapshotreserve', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'type': 'boolean', 'name': 'iscustomizediops', 'description': 'true if disk offering uses custom iops, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the service offering'}, {'type': 'integer', 'name': 'networkrate', 'description': 'data transfer rate in megabits per second allowed.'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory in MB'}, {'type': 'string', 'name': 'domain', 'description': 'Domain name for the offering'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the service offering'}, {'type': 'string', 'name': 'deploymentplanner', 'description': 'deployment strategy used to deploy VM.'}, {'type': 'date', 'name': 'created', 'description': 'the date this service offering was created'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of CPU'}, {'type': 'long', 'name': 'miniops', 'description': 'the min iops of the disk offering'}, {'type': 'string', 'name': 'id', 'description': 'the id of the service offering'}], 'description': 'Lists all available service offerings.'}, 'ciscoasa1000vresources': {'name': 'listCiscoAsa1000vResources', 'related': ['addCiscoAsa1000vResource'], 'isasync': False, 'params': [{'name': 'resourceid', 'required': False, 'related': ['addCiscoAsa1000vResource', 'listCiscoAsa1000vResources'], 'length': 255, 'type': 'uuid', 'description': 'Cisco ASA 1000v resource ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'hostname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname or ip address of the Cisco ASA 1000v appliance.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork', 'updatePhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}], 'requiredparams': [], 'response': [{}, {}, {}, {}, {}], 'description': 'Lists Cisco ASA 1000v appliances'}, 'brocadevcsdevices': {'name': 'listBrocadeVcsDevices', 'related': ['addBrocadeVcsDevice'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'vcsdeviceid', 'required': False, 'related': ['addBrocadeVcsDevice', 'listBrocadeVcsDevices'], 'length': 255, 'type': 'uuid', 'description': 'Brocade VCS switch ID'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'vcsdeviceid', 'description': 'device id of the Brocade Vcs'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical Network to which this Brocade VCS belongs to'}, {'type': 'string', 'name': 'hostname', 'description': 'the principal switch Ip address'}, {'type': 'string', 'name': 'brocadedevicename', 'description': 'device name'}], 'description': 'Lists Brocade VCS Switches'}, 'affinitygrouptypes': {'name': 'listAffinityGroupTypes', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}], 'description': 'Lists affinity group types available'}, 'publicipaddresses': {'name': 'listPublicIpAddresses', 'related': ['associateIpAddress', 'updateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'issourcenat', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list only source NAT IP addresses'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'forvirtualnetwork', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'the virtual network for the IP address'}, {'name': 'forloadbalancing', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list only IPs used for load balancing'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'lists all public IP addresses by physical network ID'}, {'name': 'id', 'required': False, 'related': ['associateIpAddress', 'updateIpAddress', 'listPublicIpAddresses', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'lists IP address by ID'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'List IPs belonging to the VPC'}, {'name': 'allocatedonly', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'limits search results to allocated public IP addresses'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'lists all public IP addresses by zone ID'}, {'name': 'isstaticnat', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list only static NAT IP addresses'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'vlanid', 'required': False, 'related': ['createVlanIpRange', 'listVlanIpRanges', 'dedicatePublicIpRange'], 'length': 255, 'type': 'uuid', 'description': 'lists all public IP addresses by VLAN ID'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists all public IP addresses by state'}, {'name': 'ipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists the specified IP address'}, {'name': 'associatednetworkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'lists all public IP addresses associated to the network specified'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'vmipaddress', 'description': 'virutal machine (dnat) ip address (not null only for static nat Ip)'}, {'type': 'string', 'name': 'id', 'description': 'public IP address id'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'purpose', 'description': 'purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value'}, {'type': 'date', 'name': 'allocated', 'description': 'date the public IP address was acquired'}, {'type': 'boolean', 'name': 'isportable', 'description': 'is public IP portable across the zones'}, {'type': 'string', 'name': 'domain', 'description': 'the domain the public IP address is associated with'}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'virutal machine display name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the ip belongs to'}, {'type': 'boolean', 'name': 'issourcenat', 'description': 'true if the IP address is a source nat address, false otherwise'}, {'type': 'boolean', 'name': 'isstaticnat', 'description': 'true if this ip is for static nat, false otherwise'}, {'type': 'string', 'name': 'state', 'description': 'State of the ip address. Can be: Allocatin, Allocated and Releasing'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the Network where ip belongs to'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is public ip for display to the regular user'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'virutal machine name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'account', 'description': 'the account the public IP address is associated with'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID the public IP address is associated with'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the IP address'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'virutal machine id the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'vlanname', 'description': 'the VLAN associated with the IP address'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'associatednetworkname', 'description': 'the name of the Network associated with the IP address'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if this ip is system ip (was allocated as a part of deployVm or createLbRule)'}, {'type': 'string', 'name': 'vlanid', 'description': 'the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'ipaddress', 'description': 'public IP address'}, {'description': 'the list of resource tags associated with ip address', 'type': 'list', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'associatednetworkid', 'description': 'the ID of the Network associated with the IP address'}], 'description': 'Lists all public ip addresses'}, 'networkserviceproviders': {'name': 'listNetworkServiceProviders', 'related': ['addNetworkServiceProvider', 'listTrafficTypes', 'updateNetworkServiceProvider'], 'isasync': False, 'params': [{'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork', 'updatePhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list providers by name'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list providers by state'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}], 'description': 'Lists network serviceproviders for a given physical network.'}, 'capacity': {'name': 'listCapacity', 'related': [], 'isasync': False, 'params': [{'name': 'podid', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'lists capacity by the Pod ID'}, {'name': 'fetchlatest', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'recalculate capacities and fetch the latest'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'clusterid', 'required': False, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'lists capacity by the Cluster ID'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'lists capacity by type* CAPACITY_TYPE_MEMORY = 0* CAPACITY_TYPE_CPU = 1* CAPACITY_TYPE_STORAGE = 2* CAPACITY_TYPE_STORAGE_ALLOCATED = 3* CAPACITY_TYPE_VIRTUAL_NETWORK_PUBLIC_IP = 4* CAPACITY_TYPE_PRIVATE_IP = 5* CAPACITY_TYPE_SECONDARY_STORAGE = 6* CAPACITY_TYPE_VLAN = 7* CAPACITY_TYPE_DIRECT_ATTACHED_PUBLIC_IP = 8* CAPACITY_TYPE_LOCAL_STORAGE = 9.'}, {'name': 'sortby', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Sort the results. Available values: Usage'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'lists capacity by the Zone ID'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}], 'description': 'Lists all the system wide capacities.'}, 'diskofferings': {'name': 'listDiskOfferings', 'related': ['createDiskOffering'], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the disk offering'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['createDiskOffering', 'listDiskOfferings'], 'length': 255, 'type': 'uuid', 'description': 'ID of the disk offering'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'storagetype', 'description': 'the storage type for this disk offering'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.'}, {'type': 'long', 'name': 'maxiops', 'description': 'the max iops of the disk offering'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk offering'}, {'type': 'long', 'name': 'disksize', 'description': 'the size of the disk offering in GB'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk offering'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk offering'}, {'type': 'long', 'name': 'miniops', 'description': 'the min iops of the disk offering'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk offering'}, {'type': 'integer', 'name': 'hypervisorsnapshotreserve', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the disk offering'}, {'type': 'boolean', 'name': 'iscustomized', 'description': 'true if disk offering uses custom size, false otherwise'}, {'type': 'boolean', 'name': 'iscustomizediops', 'description': 'true if disk offering uses custom iops, false otherwise'}, {'type': 'string', 'name': 'cacheMode', 'description': 'the cache mode to use for this disk offering. none, writeback or writethrough'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the disk offering.'}, {'type': 'date', 'name': 'created', 'description': 'the date this disk offering was created'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.'}, {'type': 'string', 'name': 'name', 'description': 'the name of the disk offering'}, {'type': 'boolean', 'name': 'displayoffering', 'description': 'whether to display the offering to the end user or not.'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'type': 'string', 'name': 'id', 'description': 'unique ID of the disk offering'}], 'description': 'Lists all available disk offerings.'}, 'loadbalancerruleinstances': {'name': 'listLoadBalancerRuleInstances', 'related': ['listLoadBalancerRuleInstances'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}, {'name': 'applied', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if listing all virtual machines currently applied to the load balancer rule; default is true'}, {'name': 'lbvmips', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if load balancer rule VM IP information to be included; default is false'}], 'requiredparams': ['id'], 'response': [{'type': 'uservmresponse', 'name': 'loadbalancerruleinstance', 'description': 'the user vm set for lb rule'}, {'type': 'list', 'name': 'lbvmipaddresses', 'description': 'IP addresses of the vm set of lb rule'}], 'description': 'List all virtual machine instances that are assigned to a load balancer rule.'}, 'lbstickinesspolicies': {'name': 'listLBStickinessPolicies', 'related': ['createLBStickinessPolicy'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['createLBStickinessPolicy', 'listLBStickinessPolicies'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer stickiness policy'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'lbruleid', 'required': False, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain of the Stickiness policy'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the Stickiness policy belongs to'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Stickiness policy'}, {'description': 'the list of stickinesspolicies', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the Stickiness policy'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'methodname', 'description': 'the method name of the Stickiness policy'}, {'type': 'map', 'name': 'params', 'description': 'the params of the policy'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Stickiness policy'}, {'type': 'string', 'name': 'id', 'description': 'the LB Stickiness policy ID'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is policy for display to the regular user'}], 'name': 'stickinesspolicy'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Stickiness policy'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the Stickiness policy'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the LB rule ID'}, {'type': 'string', 'name': 'account', 'description': 'the account of the Stickiness policy'}], 'description': 'Lists load balancer stickiness policies.'}, 'srxfirewallnetworks': {'name': 'listSrxFirewallNetworks', 'related': ['listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'lbdeviceid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'netscaler load balancer device ID'}], 'requiredparams': ['lbdeviceid'], 'response': [{'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}], 'description': 'lists network that are using SRX firewall device'}, 'networks': {'name': 'listNetworks', 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'forvpc', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'the network belongs to VPC'}, {'name': 'issystem', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if network is system, false otherwise'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the zone ID of the network'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'List networks by VPC'}, {'name': 'displaynetwork', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'acltype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list networks by ACL (access control list) type. Supported values are account and domain'}, {'name': 'supportedservices', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list networks supporting certain services'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the type of the network. Supported values are: isolated and shared'}, {'name': 'restartrequired', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list networks by restartRequired'}, {'name': 'traffictype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of the traffic'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'list networks by physical network id'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'id', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list networks by ID'}, {'name': 'canusefordeploy', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list networks available for VM deployment'}, {'name': 'specifyipranges', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if need to list only networks which support specifying IP ranges'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}], 'name': 'provider'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}], 'description': 'Lists all available networks.'}, 'brocadevcsdevicenetworks': {'name': 'listBrocadeVcsDeviceNetworks', 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'vcsdeviceid', 'required': True, 'related': ['addBrocadeVcsDevice', 'listBrocadeVcsDevices'], 'length': 255, 'type': 'uuid', 'description': 'brocade vcs switch ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['vcsdeviceid'], 'response': [{'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}], 'description': 'lists network that are using a brocade vcs switch'}, 'securitygroups': {'name': 'listSecurityGroups', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'id', 'required': False, 'related': ['listSecurityGroups'], 'length': 255, 'type': 'uuid', 'description': 'list the security group by the id provided'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'virtualmachineid', 'required': False, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'lists security groups by virtual machine id'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'securitygroupname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists security groups by name'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}], 'requiredparams': [], 'response': [{'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}], 'description': 'Lists security groups'}, 'ovselements': {'name': 'listOvsElements', 'related': ['configureOvsElement'], 'isasync': False, 'params': [{'name': 'id', 'required': False, 'related': ['listOvsElements', 'configureOvsElement'], 'length': 255, 'type': 'uuid', 'description': 'list ovs elements by id'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'nspid', 'required': False, 'related': ['addNetworkServiceProvider', 'listTrafficTypes', 'updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'list ovs elements by network service provider id'}, {'name': 'enabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list network offerings by enabled state'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the provider'}, {'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the service provider'}, {'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the provider'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the provider'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the provider'}, {'type': 'string', 'name': 'id', 'description': 'the id of the ovs'}], 'description': 'Lists all available ovs elements.'}, 'baremetaldhcp': {'name': 'listBaremetalDhcp', 'related': ['addBaremetalDhcp'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'dhcpservertype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Type of DHCP device'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'DHCP server device ID'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['physicalnetworkid'], 'response': [{'type': 'string', 'name': 'id', 'description': 'device id of '}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this external dhcp device belongs to'}, {'type': 'string', 'name': 'url', 'description': 'url'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'dhcpservertype', 'description': 'name of the provider'}], 'description': 'list baremetal dhcp servers'}, 'conditions': {'name': 'listConditions', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'id', 'required': False, 'related': ['listConditions'], 'length': 255, 'type': 'uuid', 'description': 'ID of the Condition.'}, {'name': 'counterid', 'required': False, 'related': ['createCounter'], 'length': 255, 'type': 'uuid', 'description': 'Counter-id of the condition.'}, {'name': 'policyid', 'required': False, 'related': ['createAutoScalePolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the policy'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id of the Condition.'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner.'}, {'type': 'string', 'name': 'id', 'description': 'the id of the Condition'}, {'type': 'list', 'name': 'counter', 'description': 'Details of the Counter.'}, {'type': 'long', 'name': 'threshold', 'description': 'Threshold Value for the counter.'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the Condition'}, {'type': 'string', 'name': 'relationaloperator', 'description': 'Relational Operator to be used with threshold.'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the Condition.'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the Condition owner'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of counter'}], 'description': 'List Conditions for the specific user'}, 'swifts': {'name': 'listSwifts', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'the id of the swift'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}], 'description': 'List Swift.'}, 'counters': {'name': 'listCounters', 'related': ['createCounter'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['createCounter', 'listCounters'], 'length': 255, 'type': 'uuid', 'description': 'ID of the Counter.'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the counter.'}, {'name': 'source', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Source of the counter.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'zone id of counter'}, {'type': 'string', 'name': 'source', 'description': 'Source of the counter.'}, {'type': 'string', 'name': 'name', 'description': 'Name of the counter.'}, {'type': 'string', 'name': 'id', 'description': 'the id of the Counter'}, {'type': 'string', 'name': 'value', 'description': 'Value in case of snmp or other specific counters.'}], 'description': 'List the counters'}, 'tags': {'name': 'listTags', 'related': ['listResourceDetails'], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'resourceid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by resource id'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'resourcetype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by resource type'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'customer', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by customer name'}, {'name': 'key', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by key'}, {'name': 'value', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by value'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'description': 'List resource tag(s)'}, 'routers': {'name': 'listRouters', 'related': ['startRouter', 'rebootRouter', 'destroyRouter', 'stopRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM', 'startInternalLoadBalancerVM'], 'isasync': False, 'params': [{'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID of the router'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'createNetwork', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'listNiciraNvpDeviceNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list by network id'}, {'name': 'id', 'required': False, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'addNicToVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk router'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'clusterid', 'required': False, 'related': ['addCluster', 'listClusters', 'updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the cluster ID of the router'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject', 'suspendProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'List networks by VPC'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the state of the router'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the router'}, {'name': 'podid', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID of the router'}, {'name': 'hostid', 'required': False, 'related': ['addBaremetalHost', 'listHosts', 'cancelHostMaintenance', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the host ID of the router'}, {'name': 'forvpc', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true is passed for this parameter, list only VPC routers'}, {'name': 'version', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list virtual router elements by version'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}], 'description': 'List routers.'}, 'traffictypes': {'name': 'listTrafficTypes', 'related': ['addNetworkServiceProvider', 'updateNetworkServiceProvider'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': ['physicalnetworkid'], 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'description': 'Lists traffic types of a given physical network.'}, 'projectinvitations': {'name': 'listProjectInvitations', 'related': [], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list by project id'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list invitations by state'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'activeonly', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true, list only active invitations - having Pending state and ones that are not timed out yet'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'id', 'required': False, 'related': ['listProjectInvitations'], 'length': 255, 'type': 'uuid', 'description': 'list invitations by id'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain id the project belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the name of the project'}, {'type': 'string', 'name': 'id', 'description': 'the id of the invitation'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name where the project belongs to'}, {'type': 'string', 'name': 'email', 'description': 'the email the invitation was sent to'}, {'type': 'string', 'name': 'account', 'description': "the account name of the project's owner"}, {'type': 'string', 'name': 'state', 'description': 'the invitation state'}, {'type': 'string', 'name': 'projectid', 'description': 'the id of the project'}], 'description': 'Lists project invitations and provides detailed information for listed invitations'}, 'isos': {'name': 'listIsos', 'related': ['registerTemplate', 'registerIso', 'listTemplates', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list all ISOs by name'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the hypervisor for which to restrict the search'}, {'name': 'isready', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this ISO is ready to be deployed'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'isofilter', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'possible values are "featured", "self", "selfexecutable","sharedexecutable","executable", and "community". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the ISO is publicly available to all users, false otherwise.'}, {'name': 'id', 'required': False, 'related': ['listIsos', 'registerTemplate', 'registerIso', 'listTemplates', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'list ISO by ID'}, {'name': 'showremoved', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'show removed ISOs as well'}, {'name': 'bootable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the ISO is bootable, false otherwise'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}], 'description': 'Lists all available ISO files.'}, 'users': {'name': 'listUsers', 'related': [], 'isasync': False, 'params': [{'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'id', 'required': False, 'related': ['listUsers'], 'length': 255, 'type': 'uuid', 'description': 'List user by ID.'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List users by state of the user account.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'username', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List user by the username'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'accounttype', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'List users by account type. Valid types include admin, domain-admin, read-only-admin, or user.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}], 'description': 'Lists user accounts'}, 'sshkeypairs': {'name': 'listSSHKeyPairs', 'related': [], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'A key pair name to look for'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'fingerprint', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'A public key fingerprint to look for'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'Name of the keypair'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the keypair owner'}, {'type': 'string', 'name': 'fingerprint', 'description': 'Fingerprint of the public key'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the keypair'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the keypair owner'}], 'description': 'List registered keypairs'}, 'privategateways': {'name': 'listPrivateGateways', 'related': ['createPrivateGateway'], 'isasync': False, 'params': [{'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list gateways by vlan'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'list gateways by vpc'}, {'name': 'id', 'required': False, 'related': ['createPrivateGateway', 'listPrivateGateways'], 'length': 255, 'type': 'uuid', 'description': 'list private gateway by id'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list gateways by state'}, {'name': 'ipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list gateways by ip address'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'ipaddress', 'description': "the private gateway's ip address"}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the private gateway belongs to'}, {'type': 'string', 'name': 'vlan', 'description': 'the network implementation uri for the private gateway'}, {'type': 'string', 'name': 'state', 'description': 'State of the gateway, can be Creating, Ready, Deleting'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'netmask', 'description': "the private gateway's netmask"}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the private gateway'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id set for private gateway'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the private gateway'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the private gateway'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the private gateway'}, {'type': 'boolean', 'name': 'sourcenatsupported', 'description': 'Souce Nat enable status'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the private gateaway belongs to'}, {'type': 'string', 'name': 'id', 'description': 'the id of the private gateway'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the private gateway'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the private gateway'}], 'description': 'List private gateways'}, 'internalloadbalancervms': {'name': 'listInternalLoadBalancerVMs', 'related': [], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID of the Internal LB VM'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'List Internal LB VMs by VPC'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'id', 'required': False, 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Internal LB VM'}, {'name': 'forvpc', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true is passed for this parameter, list only VPC Internal LB VMs'}, {'name': 'networkid', 'required': False, 'related': ['createNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list by network id'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID of the Internal LB VM'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'hostid', 'required': False, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'the host ID of the Internal LB VM'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the state of the Internal LB VM'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the Internal LB VM'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}], 'name': 'nic'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}], 'description': 'List internal LB VMs.'}, 'dedicatedpods': {'name': 'listDedicatedPods', 'related': ['dedicatePod'], 'isasync': False, 'params': [{'name': 'affinitygroupid', 'required': False, 'related': ['listAffinityGroups', 'createAffinityGroup'], 'length': 255, 'type': 'uuid', 'description': 'list dedicated pods by affinity group'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the domain associated with the pod'}, {'name': 'podid', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the pod'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account associated with the pod. Must be used with domainId.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID to which the Pod is dedicated'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account Id to which the Pod is dedicated'}, {'type': 'string', 'name': 'podname', 'description': 'the Name of the Pod'}, {'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the pod'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}, {'type': 'string', 'name': 'podid', 'description': 'the ID of the Pod'}], 'description': 'Lists dedicated pods.'}, 'bigswitchbcfdevices': {'name': 'listBigSwitchBcfDevices', 'related': ['addBigSwitchBcfDevice'], 'isasync': False, 'params': [{'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'bcfdeviceid', 'required': False, 'related': ['addBigSwitchBcfDevice', 'listBigSwitchBcfDevices'], 'length': 255, 'type': 'uuid', 'description': 'bigswitch BCF controller device ID'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'bigswitchdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'hostname', 'description': 'the controller Ip address'}, {'type': 'string', 'name': 'username', 'description': 'the controller username'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this BigSwitch BCF segment belongs to'}, {'type': 'string', 'name': 'bcfdeviceid', 'description': 'device id of the BigSwitch BCF Controller'}, {'type': 'boolean', 'name': 'nat', 'description': 'NAT support'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'password', 'description': 'the controller password'}], 'description': 'Lists BigSwitch BCF Controller devices'}, 'dedicatedclusters': {'name': 'listDedicatedClusters', 'related': ['dedicateCluster'], 'isasync': False, 'params': [{'name': 'affinitygroupid', 'required': False, 'related': ['listAffinityGroups'], 'length': 255, 'type': 'uuid', 'description': 'list dedicated clusters by affinity group'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'clusterid', 'required': False, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the cluster'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account associated with the cluster. Must be used with domainId.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the domain associated with the cluster'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the cluster'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account ID of the cluster'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster'}, {'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster'}, {'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the cluster'}], 'description': 'Lists dedicated clusters.'}, 'usagetypes': {'name': 'listUsageTypes', 'related': [], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'description', 'description': 'description of usage type'}, {'type': 'integer', 'name': 'usagetypeid', 'description': 'usage type'}], 'description': 'List Usage Types'}, 'domainchildren': {'name': 'listDomainChildren', 'related': ['listDomains'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'to return the entire tree, use the value "true". To return the first level children, use the value "false".'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list children domain by parent domain ID.'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list children domains by name'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the domain'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this domain'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this domain'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this domain'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this domain'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this domain'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this domain'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the domain'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this domain'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this domain'}, {'type': 'string', 'name': 'parentdomainname', 'description': 'the domain name of the parent domain'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by domain'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the domain can own'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this domain'}, {'type': 'string', 'name': 'state', 'description': 'the state of the domain'}, {'type': 'integer', 'name': 'level', 'description': 'the level of the domain'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this domain'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this domain'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by domain'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the domain can own'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this domain to acquire'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this domain to acquire'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the domain can own'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this domain'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this domain'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the domain can own'}, {'type': 'string', 'name': 'path', 'description': 'the path of the domain'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this domain'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by domain'}, {'type': 'string', 'name': 'parentdomainid', 'description': 'the domain ID of the parent domain'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by domain'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the domain can own'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the domain can own'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this domain'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the domain can own'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this domain'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this domain'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this domain'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this domain can acquire'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by domain'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this domain'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this domain'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by domain'}, {'type': 'boolean', 'name': 'haschild', 'description': 'whether the domain has one or more sub-domains'}], 'description': 'Lists all children domains belonging to a specified domain'}, 'domains': {'name': 'listDomains', 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'isasync': False, 'params': [{'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List domain by domain name.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'level', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'List domains by domain level.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'List domain by domain ID.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the domain can own'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the domain can own'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by domain'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this domain'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the domain can own'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this domain'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the domain'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this domain'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by domain'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the domain can own'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this domain'}, {'type': 'string', 'name': 'name', 'description': 'the name of the domain'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this domain'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this domain'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this domain'}, {'type': 'string', 'name': 'path', 'description': 'the path of the domain'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this domain'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this domain'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the domain can own'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this domain'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this domain'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by domain'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this domain'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the domain can own'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this domain'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'state', 'description': 'the state of the domain'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this domain can acquire'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this domain'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the domain can own'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by domain'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this domain'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this domain'}, {'type': 'string', 'name': 'parentdomainid', 'description': 'the domain ID of the parent domain'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this domain to acquire'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this domain'}, {'type': 'integer', 'name': 'level', 'description': 'the level of the domain'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this domain to acquire'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this domain'}, {'type': 'boolean', 'name': 'haschild', 'description': 'whether the domain has one or more sub-domains'}, {'type': 'string', 'name': 'parentdomainname', 'description': 'the domain name of the parent domain'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by domain'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this domain'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by domain'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this domain'}], 'description': 'Lists domains and provides detailed information for listed domains'}, 'networkisolationmethods': {'name': 'listNetworkIsolationMethods', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'Network isolation method name'}], 'description': 'Lists supported methods of network isolation'}, 'netscalerloadbalancers': {'name': 'listNetscalerLoadBalancers', 'related': [], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'lbdeviceid', 'required': False, 'related': ['listNetscalerLoadBalancers'], 'length': 255, 'type': 'uuid', 'description': 'netscaler load balancer device ID'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'isexclusivegslbprovider', 'description': 'true if NetScaler device is provisioned exclusively to be a GSLB service provider'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the load balancer'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external load balancer'}, {'type': 'string', 'name': 'gslbproviderprivateip', 'description': 'private IP of the NetScaler representing GSLB site'}, {'type': 'boolean', 'name': 'gslbprovider', 'description': 'true if NetScaler device is provisioned to be a GSLB service provider'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'lbdeviceid', 'description': 'device id of the netscaler load balancer'}, {'type': 'string', 'name': 'lbdevicename', 'description': 'device name'}, {'type': 'list', 'name': 'podids', 'description': "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device."}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this netscaler device belongs to'}, {'type': 'long', 'name': 'lbdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'lbdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the load balancer'}, {'type': 'string', 'name': 'gslbproviderpublicip', 'description': 'public IP of the NetScaler representing GSLB site'}, {'type': 'boolean', 'name': 'lbdevicededicated', 'description': 'true if device is dedicated for an account'}], 'description': 'lists netscaler load balancer devices'}, 'baremetalrct': {'name': 'listBaremetalRct', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'url', 'description': 'url'}, {'type': 'string', 'name': 'id', 'description': 'id of rct'}], 'description': 'list baremetal rack configuration'}, 's3s': {'name': 'listS3s', 'related': ['addS3', 'listSwifts', 'listSecondaryStagingStores', 'addImageStore', 'addSwift', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}], 'description': 'Lists S3s'}, 'hypervisors': {'name': 'listHypervisors', 'related': [], 'isasync': False, 'params': [{'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the zone id for listing hypervisors.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'Hypervisor name'}], 'description': 'List hypervisors'}, 'accounts': {'name': 'listAccounts', 'related': ['listAccounts', 'markDefaultZoneForAccount'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'iscleanuprequired', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list accounts by cleanuprequired attribute (values are true or false)'}, {'name': 'id', 'required': False, 'related': ['listAccounts', 'listAccounts', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'list account by account ID'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list account by account name'}, {'name': 'accounttype', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'list accounts by account type. Valid account types are 1 (admin), 2 (domain-admin), and 0 (user).'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list accounts by state. Valid states are enabled, disabled, and locked.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}], 'name': 'user'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}], 'description': 'Lists accounts and provides detailed account information for listed accounts'}, 'networkdevice': {'name': 'listNetworkDevice', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'networkdevicetype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Network device type, now supports ExternalDhcp, PxeServer, NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer, F5BigIpLoadBalancer, JuniperSRXFirewall, PaloAltoFirewall'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'networkdeviceparameterlist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'parameters for network device'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the network device'}], 'description': 'List network devices'}, 'vlanipranges': {'name': 'listVlanIpRanges', 'related': [], 'isasync': False, 'params': [{'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'physical network id of the VLAN IP range'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listVlanIpRanges'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the VLAN IP range'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID with which the VLAN IP range is associated.  If used with the account parameter, returns all VLAN IP ranges for that account in the specified domain.'}, {'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ID or VID of the VLAN. Default is an "untagged" VLAN.'}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'project who will own the VLAN'}, {'name': 'networkid', 'required': False, 'related': ['createNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'network id of the VLAN IP range'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID of the VLAN IP range'}, {'name': 'forvirtualnetwork', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if VLAN is of Virtual type, false if Direct'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID of the VLAN IP range'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account with which the VLAN IP range is associated. Must be used with the domainId parameter.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the vlan range'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the VLAN IP range'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vlan range'}, {'type': 'string', 'name': 'endipv6', 'description': 'the end ipv6 of the VLAN IP range'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name for the VLAN IP range'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the VLAN IP range'}, {'type': 'string', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'type': 'string', 'name': 'endip', 'description': 'the end ip of the VLAN IP range'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of vlan range'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the VLAN IP range'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the VLAN IP range'}, {'type': 'string', 'name': 'account', 'description': 'the account of the VLAN IP range'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the VLAN IP range'}, {'type': 'string', 'name': 'description', 'description': 'the description of the VLAN IP range'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the VLAN IP range'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'startipv6', 'description': 'the start ipv6 of the VLAN IP range'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the VLAN IP range'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the VLAN IP range'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the VLAN IP range'}], 'description': 'Lists all VLAN IP ranges.'}, 'traffictypeimplementors': {'name': 'listTrafficTypeImplementors', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'traffictype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Optional. The network traffic type, if specified, return its implementor. Otherwise, return all traffic types with their implementor'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'traffictype', 'description': 'network traffic type'}, {'type': 'string', 'name': 'traffictypeimplementor', 'description': 'implementor of network traffic type'}], 'description': 'Lists implementors of implementor of a network traffic type or implementors of all network traffic types'}, 'storagenetworkiprange': {'name': 'listStorageNetworkIpRange', 'related': [], 'isasync': False, 'params': [{'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'optional parameter. Pod uuid, if specicied and range uuid is absent, using it to search the range.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listStorageNetworkIpRange'], 'length': 255, 'type': 'uuid', 'description': 'optional parameter. Storaget network IP range uuid, if specicied, using it to search the range.'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'optional parameter. Zone uuid, if specicied and both pod uuid and range uuid are absent, using it to search the range.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'endip', 'description': 'the end ip of the storage network IP range'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone uuid of the storage network IP range'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod uuid for the storage network IP range'}, {'type': 'string', 'name': 'id', 'description': 'the uuid of storage network IP range.'}, {'type': 'string', 'name': 'networkid', 'description': 'the network uuid of storage network IP range'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the storage network IP range'}, {'type': 'integer', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the storage network IP range'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the storage network IP range'}], 'description': 'List a storage network IP range.'}, 'isopermissions': {'name': 'listIsoPermissions', 'related': ['listIsoPermissions', 'listTemplatePermissions'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listIsoPermissions', 'listIsoPermissions', 'listTemplatePermissions'], 'length': 255, 'type': 'uuid', 'description': 'the template ID'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'list', 'name': 'account', 'description': 'the list of accounts the template is available for'}, {'type': 'list', 'name': 'projectids', 'description': 'the list of projects the template is available for'}], 'description': 'List iso visibility and all accounts that have permissions to view this iso.'}, 'snapshotpolicies': {'name': 'listSnapshotPolicies', 'related': ['createSnapshotPolicy'], 'isasync': False, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'volumeid', 'required': False, 'related': ['createVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listSnapshotPolicies', 'createSnapshotPolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the snapshot policy'}], 'requiredparams': [], 'response': [{'type': 'short', 'name': 'intervaltype', 'description': 'the interval type of the snapshot policy'}, {'type': 'string', 'name': 'volumeid', 'description': 'the ID of the disk volume'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is this policy for display to the regular user'}, {'type': 'int', 'name': 'maxsnaps', 'description': 'maximum number of snapshots retained'}, {'type': 'string', 'name': 'schedule', 'description': 'time the snapshot is scheduled to be taken.'}, {'type': 'string', 'name': 'timezone', 'description': 'the time zone of the snapshot policy'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the snapshot policy'}], 'description': 'Lists snapshot policies.'}, 'nuagevspdevices': {'name': 'listNuageVspDevices', 'related': [], 'isasync': False, 'params': [{'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'vspdeviceid', 'required': False, 'related': ['listNuageVspDevices'], 'length': 255, 'type': 'uuid', 'description': 'the Nuage VSP device ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'int', 'name': 'retrycount', 'description': 'the number of retries on failure to communicate to Nuage VSD'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname of the Nuage VSD'}, {'type': 'string', 'name': 'vspdeviceid', 'description': 'the device id of the Nuage VSD'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the ID of the physical network to which this Nuage VSP belongs to'}, {'type': 'string', 'name': 'apiversion', 'description': 'the version of the API to use to communicate to Nuage VSD'}, {'type': 'long', 'name': 'retryinterval', 'description': 'the time to wait after failure before retrying to communicate to Nuage VSD'}, {'type': 'string', 'name': 'nuagedevicename', 'description': 'the name of the Nuage VSP device'}, {'type': 'string', 'name': 'provider', 'description': 'the service provider name corresponding to this Nuage VSP device'}, {'type': 'int', 'name': 'port', 'description': 'the port to communicate to Nuage VSD'}], 'description': 'Lists Nuage VSP devices'}, 'loadbalancers': {'name': 'listLoadBalancers', 'related': ['updateLoadBalancer', 'createLoadBalancer'], 'isasync': False, 'params': [{'name': 'sourceipaddressnetworkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'createNetwork', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the network ID of the source IP address'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'id', 'required': False, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'createNetwork', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the network ID of the load balancer'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'scheme', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the scheme of the load balancer. Supported value is internal in the current release'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'sourceipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the source IP address of the load balancer'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the load balancer'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'sourceipaddress', 'description': 'Load Balancer source ip'}, {'description': 'the list of rules associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'integer', 'name': 'instanceport', 'description': 'instance port of the load balancer rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the load balancer rule'}, {'type': 'integer', 'name': 'sourceport', 'description': 'source port of the load balancer rule'}], 'name': 'loadbalancerrule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the Load Balancer'}, {'type': 'string', 'name': 'sourceipaddressnetworkid', 'description': 'Load Balancer source ip network id'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the Load Balancer'}, {'type': 'string', 'name': 'account', 'description': 'the account of the Load Balancer'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Load Balancer'}, {'type': 'string', 'name': 'id', 'description': 'the Load Balancer ID'}, {'description': 'the list of instances associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the instance'}, {'type': 'string', 'name': 'state', 'description': 'the state of the instance'}, {'type': 'string', 'name': 'name', 'description': 'the name of the instance'}, {'type': 'string', 'name': 'id', 'description': 'the instance ID'}], 'name': 'loadbalancerinstance'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Load Balancer'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the Load Balancer'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the Load Balancer'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'networkid', 'description': 'Load Balancer network id'}, {'description': 'the list of resource tags associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}], 'description': 'Lists load balancers'}, 'guestosmapping': {'name': 'listGuestOsMapping', 'related': ['updateGuestOsMapping', 'addGuestOsMapping'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'hypervisorversion', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list Guest OS mapping by hypervisor version. Must be used with hypervisor parameter'}, {'name': 'id', 'required': False, 'related': ['updateGuestOsMapping', 'listGuestOsMapping', 'addGuestOsMapping'], 'length': 255, 'type': 'uuid', 'description': 'list mapping by its UUID'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list Guest OS mapping by hypervisor'}, {'name': 'ostypeid', 'required': False, 'related': ['listOsTypes', 'updateGuestOs', 'addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'list mapping by Guest OS Type UUID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'osnameforhypervisor', 'description': 'hypervisor specific name for the Guest OS'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'version of the hypervisor for mapping'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor'}, {'type': 'string', 'name': 'isuserdefined', 'description': 'is the mapping user defined'}, {'type': 'string', 'name': 'osdisplayname', 'description': 'standard display name for the Guest OS'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the Guest OS type'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the Guest OS mapping'}], 'description': 'Lists all available OS mappings for given hypervisor'}, 'paloaltofirewallnetworks': {'name': 'listPaloAltoFirewallNetworks', 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'lbdeviceid', 'required': True, 'related': ['configurePaloAltoFirewall'], 'length': 255, 'type': 'uuid', 'description': 'palo alto balancer device ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': ['lbdeviceid'], 'response': [{'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}], 'description': 'lists network that are using Palo Alto firewall device'}, 'imagestores': {'name': 'listImageStores', 'related': ['addS3', 'listSwifts', 'listSecondaryStagingStores', 'listS3s', 'addImageStore', 'addSwift', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the image store'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listImageStores', 'addS3', 'listSwifts', 'listSecondaryStagingStores', 'listS3s', 'addImageStore', 'addSwift', 'createSecondaryStagingStore'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the storage pool'}, {'name': 'protocol', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the image store protocol'}, {'name': 'provider', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the image store provider'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the image store'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}], 'description': 'Lists image stores.'}, 'autoscalevmgroups': {'name': 'listAutoScaleVmGroups', 'related': ['createAutoScaleVmGroup', 'disableAutoScaleVmGroup', 'enableAutoScaleVmGroup', 'updateAutoScaleVmGroup'], 'isasync': False, 'params': [{'name': 'lbruleid', 'required': False, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the loadbalancer'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'id', 'required': False, 'related': ['createAutoScaleVmGroup', 'disableAutoScaleVmGroup', 'enableAutoScaleVmGroup', 'listAutoScaleVmGroups', 'updateAutoScaleVmGroup'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale vm group'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'vmprofileid', 'required': False, 'related': ['listAutoScaleVmProfiles', 'createAutoScaleVmProfile', 'updateAutoScaleVmProfile'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the profile'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the availability zone ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'policyid', 'required': False, 'related': ['updateAutoScalePolicy', 'listAutoScalePolicies', 'createAutoScalePolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the policy'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'list', 'name': 'scaleuppolicies', 'description': 'list of scaleup autoscale policies'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {'type': 'int', 'name': 'maxmembers', 'description': 'the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'state', 'description': 'the current state of the AutoScale Vm Group'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale vm group ID'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is group for display to the regular user'}, {'type': 'int', 'name': 'minmembers', 'description': 'the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}, {'type': 'string', 'name': 'vmprofileid', 'description': 'the autoscale profile that contains information about the vms in the vm group.'}, {'type': 'int', 'name': 'interval', 'description': 'the frequency at which the conditions have to be evaluated'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'list', 'name': 'scaledownpolicies', 'description': 'list of scaledown autoscale policies'}], 'description': 'Lists autoscale vm groups.'}, 'internalloadbalancerelements': {'name': 'listInternalLoadBalancerElements', 'related': ['configureInternalLoadBalancerElement', 'createInternalLoadBalancerElement'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'nspid', 'required': False, 'related': ['addNetworkServiceProvider', 'listTrafficTypes', 'updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'list internal load balancer elements by network service provider id'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['configureInternalLoadBalancerElement', 'createInternalLoadBalancerElement', 'listInternalLoadBalancerElements'], 'length': 255, 'type': 'uuid', 'description': 'list internal load balancer elements by id'}, {'name': 'enabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list internal load balancer elements by enabled state'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the element'}, {'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the element'}, {'type': 'string', 'name': 'id', 'description': 'the id of the internal load balancer element'}], 'description': 'Lists all available Internal Load Balancer elements.'}, 'projectaccounts': {'name': 'listProjectAccounts', 'related': ['updateProject', 'createProject'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list accounts of the project by account name'}, {'name': 'role', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list accounts of the project by role'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'projectid', 'required': True, 'related': ['updateProject', 'createProject', 'listProjectAccounts'], 'length': 255, 'type': 'uuid', 'description': 'ID of the project'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['projectid'], 'response': [{'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this project'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the project can own'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by project'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the project can own'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by project'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by project'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'state', 'description': 'the state of the project'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this project'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this project'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this project'}, {'type': 'string', 'name': 'account', 'description': "the account name of the project's owner"}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the project'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this project'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by project'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by project'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this project'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the project can own'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this project'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this project'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this project'}, {'type': 'string', 'name': 'id', 'description': 'the id of the project'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this project'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this project'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this project to acquire'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this project'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this project'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the project can own'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this project'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this project to acquire'}, {'description': 'the list of resource tags associated with vm', 'type': 'list', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this project'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this project can acquire'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this project'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this project'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the project can own'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id the project belongs to'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this project'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this project'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name where the project belongs to'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this project'}, {'type': 'string', 'name': 'name', 'description': 'the name of the project'}], 'description': "Lists project's accounts"}, 'autoscalevmprofiles': {'name': 'listAutoScaleVmProfiles', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'availability zone for the auto deployed virtual machine'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'serviceofferingid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list profiles by service offering id'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listAutoScaleVmProfiles'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale vm profile'}, {'name': 'otherdeployparams', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the otherdeployparameters of the autoscale vm profile'}, {'name': 'templateid', 'required': False, 'related': ['listIsos', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the templateid of the autoscale vm profile'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {'type': 'integer', 'name': 'destroyvmgraceperiod', 'description': 'the time allowed for existing connections to get closed before a vm is destroyed'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the service offering to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale vm profile ID'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is profile for display to the regular user'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'string', 'name': 'zoneid', 'description': 'the availability zone to be used while deploying a virtual machine'}, {}, {'type': 'string', 'name': 'autoscaleuserid', 'description': 'the ID of the user used to launch and destroy the VMs'}, {}, {'type': 'string', 'name': 'templateid', 'description': 'the template to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}, {'type': 'string', 'name': 'otherdeployparams', 'description': 'parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine'}], 'description': 'Lists autoscale vm profiles.'}, 'vpcs': {'name': 'listVPCs', 'related': ['updateVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'cidr', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "list by cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR"}, {'name': 'id', 'required': False, 'related': ['updateVPC', 'listVPCs', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'list VPC by id'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'vpcofferingid', 'required': False, 'related': ['listVPCOfferings'], 'length': 255, 'type': 'uuid', 'description': 'list by ID of the VPC offering'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by display text of the VPC'}, {'name': 'restartrequired', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list VPCs by restartRequired option'}, {'name': 'supportedservices', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list VPC supporting certain services'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list VPCs by state'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'list by zone'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by name of the VPC'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'regionlevelvpc', 'description': 'true if VPC is region level'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the VPC'}, {'description': 'the list of networks belongign to the VPC', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'description': 'the list of services', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}], 'name': 'network'}, {'type': 'string', 'name': 'id', 'description': 'the id of the VPC'}, {'type': 'date', 'name': 'created', 'description': 'the date this VPC was created'}, {'type': 'string', 'name': 'name', 'description': 'the name of the VPC'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain of the VPC'}, {'type': 'string', 'name': 'cidr', 'description': 'the cidr the VPC'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the vpc'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the VPC'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the VPC belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the VPC'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpc for display to the regular user'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true VPC requires restart'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the VPC.'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}], 'name': 'service'}, {'description': 'the list of resource tags associated with the project', 'type': 'list', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'vpcofferingid', 'description': 'vpc offering id the VPC is created from'}, {'type': 'boolean', 'name': 'redundantvpcrouter', 'description': 'if this VPC has redundant router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the VPC owner'}, {'type': 'string', 'name': 'state', 'description': 'state of the VPC. Can be Inactive/Enabled'}, {'type': 'boolean', 'name': 'distributedvpcrouter', 'description': "is VPC uses distributed router for one hop forwarding and host based network ACL's"}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}], 'description': 'Lists VPCs'}, 'resourcedetails': {'name': 'listResourceDetails', 'related': [], 'isasync': False, 'params': [{'name': 'resourcetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by resource type'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'key', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by key'}, {'name': 'resourceid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by resource id'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if set to true, only details marked with display=true, are returned. False by default'}, {'name': 'value', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by key, value. Needs to be passed only along with key'}], 'requiredparams': ['resourcetype'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'description': 'List resource detail(s)'}, 'f5loadbalancers': {'name': 'listF5LoadBalancers', 'related': ['configureF5LoadBalancer', 'addF5LoadBalancer'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'lbdeviceid', 'required': False, 'related': ['configureF5LoadBalancer', 'addF5LoadBalancer', 'listF5LoadBalancers'], 'length': 255, 'type': 'uuid', 'description': 'f5 load balancer device ID'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork', 'updatePhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external load balancer'}, {'type': 'boolean', 'name': 'lbdevicededicated', 'description': 'true if device is dedicated for an account'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the load balancer'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this F5 device belongs to'}, {'type': 'string', 'name': 'lbdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'lbdeviceid', 'description': 'device id of the F5 load balancer'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the load balancer'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'long', 'name': 'lbdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'lbdevicestate', 'description': 'device state'}], 'description': 'lists F5 load balancer devices'}, 'cisconexusvsms': {'name': 'listCiscoNexusVSMs', 'related': ['disableCiscoNexusVSM', 'enableCiscoNexusVSM'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'clusterid', 'required': False, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'Id of the CloudStack cluster in which the Cisco Nexus 1000v VSM appliance.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'Id of the CloudStack cluster in which the Cisco Nexus 1000v VSM appliance.'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'vsmdevicestate', 'description': 'The Device State (Enabled/Disabled) of the VSM'}, {'type': 'string', 'name': 'vsmconfigmode', 'description': 'The mode of the VSM (standalone/HA)'}, {'type': 'int', 'name': 'vsmstoragevlanid', 'description': 'storage vlan id of the VSM'}, {'type': 'string', 'name': 'vsmdeviceid', 'description': 'device id of the Cisco N1KV VSM device'}, {'type': 'int', 'name': 'vsmctrlvlanid', 'description': 'control vlan id of the VSM'}, {'type': 'string', 'name': 'vsmconfigstate', 'description': 'The Config State (Primary/Standby) of the VSM'}, {'type': 'string', 'name': 'vsmdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external Cisco Nexus 1000v Virtual Supervisor Module'}, {'type': 'string', 'name': 'vsmdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'vsmdomainid', 'description': "The VSM is a switch supervisor. This is the VSM's switch domain id"}, {'type': 'int', 'name': 'vsmpktvlanid', 'description': 'packet vlan id of the VSM'}, {'type': 'string', 'name': 'vsmmgmtvlanid', 'description': 'management vlan id of the VSM'}], 'description': 'Retrieves a Cisco Nexus 1000v Virtual Switch Manager device associated with a Cluster'}, 'vpncustomergateways': {'name': 'listVpnCustomerGateways', 'related': ['updateVpnCustomerGateway'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['updateVpnCustomerGateway', 'listVpnCustomerGateways'], 'length': 255, 'type': 'uuid', 'description': 'id of the customer gateway'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}], 'requiredparams': [], 'response': [{'type': 'long', 'name': 'ikelifetime', 'description': 'Lifetime of IKE SA of customer gateway'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'string', 'name': 'gateway', 'description': 'public ip address id of the customer gateway'}, {'type': 'string', 'name': 'cidrlist', 'description': 'guest cidr list of the customer gateway'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'id', 'description': 'the vpn gateway ID'}, {'type': 'string', 'name': 'esppolicy', 'description': 'IPsec policy of customer gateway'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'string', 'name': 'ipaddress', 'description': 'guest ip of the customer gateway'}, {'type': 'string', 'name': 'ikepolicy', 'description': 'IKE policy of customer gateway'}, {'type': 'long', 'name': 'esplifetime', 'description': 'Lifetime of ESP SA of customer gateway'}, {'type': 'string', 'name': 'ipsecpsk', 'description': 'IPsec preshared-key of customer gateway'}, {'type': 'boolean', 'name': 'dpd', 'description': 'if DPD is enabled for customer gateway'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'name', 'description': 'name of the customer gateway'}], 'description': 'Lists site to site vpn customer gateways'}, 'dedicatedhosts': {'name': 'listDedicatedHosts', 'related': ['dedicateHost'], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'affinitygroupid', 'required': False, 'related': ['listAffinityGroups'], 'length': 255, 'type': 'uuid', 'description': 'list dedicated hosts by affinity group'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account associated with the host. Must be used with domainId.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'hostid', 'required': False, 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the host'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the domain associated with the host'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'hostid', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host'}, {'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the host'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account ID of the host'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the host'}], 'description': 'Lists dedicated hosts.'}, 'networkofferings': {'name': 'listNetworkOfferings', 'related': ['createNetworkOffering', 'updateNetworkOffering'], 'isasync': False, 'params': [{'name': 'supportedservices', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list network offerings supporting certain services'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'specifyipranges', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if need to list only network offerings which support specifying ip ranges'}, {'name': 'isdefault', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if need to list only default network offerings. Default value is false'}, {'name': 'traffictype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by traffic type'}, {'name': 'sourcenatsupported', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if need to list only netwok offerings where source NAT is supported, false otherwise'}, {'name': 'guestiptype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network offerings by guest type: shared or isolated'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network offerings by state'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network offerings by display text'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'createNetwork', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network. Pass this in if you want to see the available network offering that a network can be changed to.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'istagged', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if offering has tags specified'}, {'name': 'forvpc', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'the network offering can be used only for network creation inside the VPC'}, {'name': 'id', 'required': False, 'related': ['createNetworkOffering', 'updateNetworkOffering', 'listNetworkOfferings'], 'length': 255, 'type': 'uuid', 'description': 'list network offerings by ID'}, {'name': 'availability', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the availability of network offering. Default value is required'}, {'name': 'tags', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'list network offerings by tags'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'list network offerings available for network creation in specific zone'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network offerings by name'}, {'name': 'specifyvlan', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'the tags for the network offering.'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'forvpc', 'description': 'true if network offering can be used by VPC networks only'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network offering'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'true if network offering supports persistent networks, false otherwise'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering used by virtual router provider'}, {'type': 'string', 'name': 'guestiptype', 'description': 'guest type of the network offering, can be Shared or Isolated'}, {'type': 'boolean', 'name': 'conservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'state', 'description': 'state of the network offering. Can be Disabled/Enabled/Inactive'}, {'type': 'integer', 'name': 'maxconnections', 'description': 'maximum number of concurrents connections to be handled by lb'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network offering'}, {'type': 'boolean', 'name': 'egressdefaultpolicy', 'description': 'true if guest network default egress policy is allow; false if default egress policy is deny'}, {'type': 'string', 'name': 'availability', 'description': 'availability of the network offering'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the network offering'}, {'type': 'date', 'name': 'created', 'description': 'the date this network offering was created'}, {'type': 'boolean', 'name': 'specifyvlan', 'description': 'true if network offering supports vlans, false otherwise'}, {'type': 'integer', 'name': 'networkrate', 'description': 'data transfer rate in megabits per second allowed.'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network offering supports specifying ip ranges, false otherwise'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with network offering'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the network offering.'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network offering is default, false otherwise'}, {'type': 'boolean', 'name': 'supportsstrechedl2subnet', 'description': 'true if network offering supports network that span multiple zones'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}], 'name': 'provider'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}], 'name': 'service'}], 'description': 'Lists all available network offerings.'}, 'zones': {'name': 'listZones', 'related': ['listZones'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'networktype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the network type of the zone that the virtual machine belongs to'}, {'name': 'showcapacities', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'flag to display the capacity of the zones'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List zones by resource tags (key/value pairs)'}, {'name': 'id', 'required': False, 'related': ['listZones', 'listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone'}, {'name': 'available', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if you want to retrieve all available Zones. False if you only want to return the Zones from which you have at least one VM. Default is false.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the domain associated with the zone'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the zone'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domain', 'description': 'Network domain name for the networks in the zone'}, {'type': 'string', 'name': 'name', 'description': 'Zone name'}, {'type': 'boolean', 'name': 'localstorageenabled', 'description': 'true if local storage offering enabled, false otherwise'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the Zone'}, {'type': 'string', 'name': 'domainname', 'description': 'the name of the containing domain, null for public zones'}, {}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the Zone'}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the cluster'}, {'type': 'string', 'name': 'guestcidraddress', 'description': 'the guest CIDR address for the Zone'}, {'description': 'the list of resource tags associated with zone.', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the UUID of the containing domain, null for public zones'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the Zone'}, {'type': 'boolean', 'name': 'securitygroupsenabled', 'description': 'true if security groups support is enabled, false otherwise'}, {'type': 'string', 'name': 'networktype', 'description': 'the network type of the zone; can be Basic or Advanced'}, {'type': 'string', 'name': 'dhcpprovider', 'description': 'the dhcp Provider for the Zone'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the Zone'}, {'type': 'map', 'name': 'resourcedetails', 'description': 'Meta data associated with the zone (key/value pairs)'}, {'description': 'the capacity of the Zone', 'type': 'list', 'response': [{'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}], 'name': 'capacity'}, {'type': 'string', 'name': 'internaldns1', 'description': 'the first internal DNS for the Zone'}, {'type': 'string', 'name': 'internaldns2', 'description': 'the second internal DNS for the Zone'}, {'type': 'string', 'name': 'displaytext', 'description': 'the display text of the zone'}, {'type': 'string', 'name': 'zonetoken', 'description': 'Zone Token'}, {'type': 'string', 'name': 'id', 'description': 'Zone id'}, {'type': 'string', 'name': 'description', 'description': 'Zone description'}], 'description': 'Lists zones'}, 'virtualmachines': {'name': 'listVirtualMachines', 'related': ['updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': False, 'params': [{'name': 'ids', 'required': False, 'related': ['listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'list', 'description': 'the IDs of the virtual machines, mutually exclusive with id'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'state of the virtual machine. Possible values are: Running, Stopped, Present, Destroyed, Expunged. Present is used for the state equal not destroyed.'}, {'name': 'displayvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'forvirtualnetwork', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list by network type; true if need to list vms using Virtual Network, false otherwise'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'userid', 'required': False, 'related': ['listUsers'], 'length': 255, 'type': 'uuid', 'description': 'the user ID that created the VM and is under the account that owns the VM'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the target hypervisor for the template'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'list vms by vpc'}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the pod ID'}, {'name': 'serviceofferingid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list by the service offering'}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine'}, {'name': 'isoid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list vms by iso'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'affinitygroupid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list vms by affinity group'}, {'name': 'groupid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the group ID'}, {'name': 'networkid', 'required': False, 'related': ['createNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list by network id'}, {'name': 'keypair', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list vms by ssh keypair name'}, {'name': 'templateid', 'required': False, 'related': ['listIsos', 'registerTemplate', 'registerIso', 'listTemplates', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'list vms by template'}, {'name': 'storageid', 'required': False, 'related': ['findStoragePoolsForMigration'], 'length': 255, 'type': 'uuid', 'description': "the storage ID where vm's volumes belong to"}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the availability zone ID'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'hostid', 'required': False, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'the host ID'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the virtual machine (a substring match is made against the parameter value, data for all matching VMs will be returned)'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'comma separated list of host details requested, value can be a list of [all, group, nics, stats, secgrp, tmpl, servoff, diskoff, iso, volume, min, affgrp]. If no parameter is passed in, the details will be defaulted to all'}], 'requiredparams': [], 'response': [{'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}], 'name': 'nic'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}], 'name': 'affinitygroup'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'name': 'ingressrule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}], 'name': 'egressrule'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}], 'description': 'List the virtual machines owned by the account.'}, 'netscalerloadbalancernetworks': {'name': 'listNetscalerLoadBalancerNetworks', 'related': ['createNetwork', 'updateNetwork', 'listNetworks'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'lbdeviceid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'netscaler load balancer device ID'}], 'requiredparams': ['lbdeviceid'], 'response': [{'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}], 'name': 'capability'}], 'name': 'service'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}], 'description': 'lists network that are using a netscaler load balancer device'}, 'oscategories': {'name': 'listOsCategories', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['listOsCategories'], 'length': 255, 'type': 'uuid', 'description': 'list Os category by id'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list os category by name'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the OS category'}, {'type': 'string', 'name': 'name', 'description': 'the name of the OS category'}], 'description': 'Lists all supported OS categories for this cloud.'}, 'ldapusers': {'name': 'listLdapUsers', 'related': ['searchLdap'], 'isasync': False, 'params': [{'name': 'listtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Determines whether all ldap users are returned or just non-cloudstack users'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'principal', 'description': "The user's principle"}, {'type': 'string', 'name': 'domain', 'description': "The user's domain"}, {'type': 'string', 'name': 'username', 'description': "The user's username"}, {'type': 'string', 'name': 'firstname', 'description': "The user's firstname"}, {'type': 'string', 'name': 'lastname', 'description': "The user's lastname"}, {'type': 'string', 'name': 'email', 'description': "The user's email"}], 'description': 'Lists all LDAP Users'}, 'samlauthorization': {'name': 'listSamlAuthorization', 'related': [], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'userid', 'required': False, 'related': ['disableUser', 'lockUser', 'updateUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'User uuid'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'idpid', 'description': 'the authorized Identity Provider ID'}, {'type': 'string', 'name': 'userid', 'description': 'the user ID'}, {'type': 'boolean', 'name': 'status', 'description': 'the SAML authorization status'}], 'description': 'Lists authorized users who can used SAML SSO'}, 'affinitygroups': {'name': 'listAffinityGroups', 'related': [], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists affinity groups by name'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'lists affinity groups by type'}, {'name': 'virtualmachineid', 'required': False, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'lists affinity groups by virtual machine ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'id', 'required': False, 'related': ['listAffinityGroups'], 'length': 255, 'type': 'uuid', 'description': 'list the affinity group by the ID provided'}], 'requiredparams': [], 'response': [{'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}], 'description': 'Lists affinity groups'}, 'secondarystagingstores': {'name': 'listSecondaryStagingStores', 'related': ['listSwifts', 'addImageStore', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the staging store'}, {'name': 'provider', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the staging store provider'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the staging store'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['listSwifts', 'listSecondaryStagingStores', 'addImageStore', 'createSecondaryStagingStore'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the staging store'}, {'name': 'protocol', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the staging store protocol'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}], 'description': 'Lists secondary staging stores.'}, 'virtualrouterelements': {'name': 'listVirtualRouterElements', 'related': ['configureVirtualRouterElement', 'createVirtualRouterElement'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'nspid', 'required': False, 'related': ['addNetworkServiceProvider', 'listTrafficTypes', 'updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'list virtual router elements by network service provider id'}, {'name': 'enabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list network offerings by enabled state'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['configureVirtualRouterElement', 'createVirtualRouterElement', 'listVirtualRouterElements'], 'length': 255, 'type': 'uuid', 'description': 'list virtual router elements by id'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the provider'}, {'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the service provider'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the provider'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the provider'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the provider'}], 'description': 'Lists all available virtual router elements.'}, 'ciscovnmcresources': {'name': 'listCiscoVnmcResources', 'related': ['addCiscoVnmcResource'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork', 'updatePhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'resourceid', 'required': False, 'related': ['addCiscoVnmcResource', 'listCiscoVnmcResources'], 'length': 255, 'type': 'uuid', 'description': 'Cisco VNMC resource ID'}], 'requiredparams': [], 'response': [{}, {}, {}, {}, {}], 'description': 'Lists Cisco VNMC controllers'}, 'asyncjobs': {'name': 'listAsyncJobs', 'related': [], 'isasync': False, 'params': [{'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'startdate', 'required': False, 'related': [], 'length': 255, 'type': 'tzdate', 'description': 'the start date of the async job'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'jobinstancetype', 'description': 'the instance/entity object related to the job'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the current job status-should be 0 for PENDING'}, {'type': 'string', 'name': 'jobinstanceid', 'description': 'the unique ID of the instance/entity object related to the job'}, {'type': 'integer', 'name': 'jobprocstatus', 'description': 'the progress information of the PENDING job'}, {'type': 'string', 'name': 'cmd', 'description': 'the async command executed'}, {'type': 'date', 'name': 'created', 'description': '  the created date of the job'}, {'type': 'integer', 'name': 'jobresultcode', 'description': 'the result code for the job'}, {'type': 'string', 'name': 'jobresulttype', 'description': 'the result type'}, {'type': 'responseobject', 'name': 'jobresult', 'description': 'the result reason'}, {'type': 'string', 'name': 'userid', 'description': 'the user that executed the async command'}, {'type': 'string', 'name': 'accountid', 'description': 'the account that executed the async command'}], 'description': 'Lists all pending asynchronous jobs for the account.'}, 'ostypes': {'name': 'listOsTypes', 'related': ['addGuestOs'], 'isasync': False, 'params': [{'name': 'id', 'required': False, 'related': ['listOsTypes', 'addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'list by Os type Id'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'oscategoryid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list by Os Category id'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'description', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list os by description'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'oscategoryid', 'description': 'the ID of the OS category'}, {'type': 'string', 'name': 'description', 'description': 'the name/description of the OS type'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the OS type'}, {'type': 'string', 'name': 'isuserdefined', 'description': 'is the guest OS user defined'}], 'description': 'Lists all supported OS types for this cloud.'}, 'globalloadbalancerrules': {'name': 'listGlobalLoadBalancerRules', 'related': [], 'isasync': False, 'params': [{'name': 'regionid', 'required': False, 'related': ['addRegion'], 'length': 255, 'type': 'integer', 'description': 'region ID'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['listGlobalLoadBalancerRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the global load balancer rule'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'gslbdomainname', 'description': 'DNS domain name given for the global load balancer'}, {'type': 'string', 'name': 'gslbservicetype', 'description': 'GSLB service type'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}, {'type': 'integer', 'name': 'regionid', 'description': 'Region Id in which global load balancer is created'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'string', 'name': 'name', 'description': 'name of the global load balancer rule'}, {'type': 'string', 'name': 'gslblbmethod', 'description': 'Load balancing method used for the global load balancer'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'description': 'List of load balancer rules that are part of GSLB rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}, {'type': 'string', 'name': 'name', 'description': 'the name of the load balancer'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the lb rule belongs to'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address id'}, {'type': 'string', 'name': 'id', 'description': 'the load balancer rule ID'}, {'description': 'the list of resource tags associated with load balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'description', 'description': 'the description of the load balancer'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'publicport', 'description': 'the public port'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the loadbalanacer rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'privateport', 'description': 'the private port'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the rule belongs to'}], 'name': 'loadbalancerrule'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'string', 'name': 'id', 'description': 'global load balancer rule ID'}, {'type': 'string', 'name': 'gslbstickysessionmethodname', 'description': 'session persistence method used for the global load balancer'}, {'type': 'string', 'name': 'description', 'description': 'the description of the global load balancer rule'}], 'description': 'Lists load balancer rules.'}, 'networkacls': {'name': 'listNetworkACLs', 'related': ['updateNetworkACLItem', 'createNetworkACL'], 'isasync': False, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'traffictype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network ACL items by traffic type - ingress or egress'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'id', 'required': False, 'related': ['listNetworkACLs', 'updateNetworkACLItem', 'createNetworkACL'], 'length': 255, 'type': 'uuid', 'description': 'Lists network ACL Item with the specified ID'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'action', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network ACL items by action'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'createNetwork', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'listNiciraNvpDeviceNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list network ACL items by network ID'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'aclid', 'required': False, 'related': ['listNetworkACLLists', 'createNetworkACLList'], 'length': 255, 'type': 'uuid', 'description': 'list network ACL items by ACL ID'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject', 'suspendProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'protocol', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list network ACL items by protocol'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}], 'requiredparams': [], 'response': [{'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'integer', 'name': 'number', 'description': 'Number of the ACL Item'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of ACL's port range"}, {'type': 'string', 'name': 'aclid', 'description': 'the ID of the ACL this item belongs to'}, {'type': 'string', 'name': 'action', 'description': 'Action of ACL Item. Allow/Deny'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type for the ACL'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the ACL Item'}, {'description': 'the list of resource tags associated with the network ACLs', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of ACL's port range"}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the ACL'}], 'description': 'Lists all network ACL items'}, 'eventtypes': {'name': 'listEventTypes', 'related': [], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'Event Type'}], 'description': 'List Event Types'}, 'remoteaccessvpns': {'name': 'listRemoteAccessVpns', 'related': ['createRemoteAccessVpn'], 'isasync': False, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'list remote access VPNs for ceratin network'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'id', 'required': False, 'related': ['createRemoteAccessVpn', 'listRemoteAccessVpns'], 'length': 255, 'type': 'uuid', 'description': 'Lists remote access vpn rule with the specified ID'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'publicipid', 'required': False, 'related': ['associateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'public ip address id of the vpn server'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain id of the account of the remote access vpn'}, {'type': 'string', 'name': 'presharedkey', 'description': 'the ipsec preshared key'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address of the vpn server'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the account of the remote access vpn'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpn for display to the regular user'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address of the vpn server'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'id', 'description': 'the id of the remote access vpn'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'account', 'description': 'the account of the remote access vpn'}, {'type': 'string', 'name': 'iprange', 'description': 'the range of ips to allocate to the clients'}], 'description': 'Lists remote access vpns'}, 'ucsprofiles': {'name': 'listUcsProfiles', 'related': [], 'isasync': False, 'params': [{'name': 'ucsmanagerid', 'required': True, 'related': ['addUcsManager'], 'length': 255, 'type': 'uuid', 'description': 'the id for the ucs manager'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['ucsmanagerid'], 'response': [{'type': 'string', 'name': 'ucsdn', 'description': 'ucs profile dn'}], 'description': 'List profile in ucs manager'}, 'nics': {'name': 'listNics', 'related': [], 'isasync': False, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'virtualmachineid', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the vm'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'nicid', 'required': False, 'related': ['listNics'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the nic to to list IPs'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': "list nic of the specific vm's network"}], 'requiredparams': ['virtualmachineid'], 'response': [{'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}], 'description': 'list the vm nics  IP to NIC'}, 'alerts': {'name': 'listAlerts', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by alert name'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listAlerts'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the alert'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list by alert type'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'id', 'description': 'the id of the alert'}, {'type': 'short', 'name': 'type', 'description': 'One of the following alert types: MEMORY = 0, CPU = 1, STORAGE = 2, STORAGE_ALLOCATED = 3, PUBLIC_IP = 4, PRIVATE_IP = 5, HOST = 6, USERVM = 7, DOMAIN_ROUTER = 8, CONSOLE_PROXY = 9, ROUTING = 10: lost connection to default route (to the gateway), STORAGE_MISC = 11: lost connection to default route (to the gateway), USAGE_SERVER = 12: lost connection to default route (to the gateway), MANAGMENT_NODE = 13: lost connection to default route (to the gateway), DOMAIN_ROUTER_MIGRATE = 14, CONSOLE_PROXY_MIGRATE = 15, USERVM_MIGRATE = 16, VLAN = 17, SSVM = 18, USAGE_SERVER_RESULT = 19'}, {'type': 'date', 'name': 'sent', 'description': 'the date and time the alert was sent'}, {'type': 'string', 'name': 'description', 'description': 'description of the alert'}, {'type': 'string', 'name': 'name', 'description': 'the name of the alert'}], 'description': 'Lists all alerts.'}, 'regions': {'name': 'listRegions', 'related': ['addRegion'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'List Region by region ID.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List Region by region name.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'gslbserviceenabled', 'description': 'true if GSLB service is enabled in the region, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the region'}, {'type': 'boolean', 'name': 'portableipserviceenabled', 'description': 'true if security groups support is enabled, false otherwise'}, {'type': 'integer', 'name': 'id', 'description': 'the ID of the region'}, {'type': 'string', 'name': 'endpoint', 'description': 'the end point of the region'}], 'description': 'Lists Regions'}, 'vpcofferings': {'name': 'listVPCOfferings', 'related': [], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list VPC offerings by name'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list VPC offerings by display text'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'supportedservices', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list VPC offerings supporting certain services'}, {'name': 'isdefault', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if need to list only default VPC offerings. Default value is false'}, {'name': 'id', 'required': False, 'related': ['listVPCOfferings'], 'length': 255, 'type': 'uuid', 'description': 'list VPC offerings by id'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list VPC offerings by state'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'isdefault', 'description': 'true if vpc offering is default, false otherwise'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the vpc offering.'}, {'type': 'boolean', 'name': 'distributedvpcrouter', 'description': ' indicates if the vpc offering supports distributed router for one-hop forwarding'}, {'type': 'string', 'name': 'state', 'description': 'state of the vpc offering. Can be Disabled/Enabled'}, {'type': 'date', 'name': 'created', 'description': 'the date this vpc offering was created'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'boolean', 'name': 'supportsregionLevelvpc', 'description': ' indicated if the offering can support region level vpc'}, {'type': 'string', 'name': 'name', 'description': 'the name of the vpc offering'}, {'type': 'string', 'name': 'id', 'description': 'the id of the vpc offering'}], 'description': 'Lists VPC offerings'}, 'sslcerts': {'name': 'listSslCerts', 'related': [], 'isasync': False, 'params': [{'name': 'certid', 'required': False, 'related': ['listSslCerts'], 'length': 255, 'type': 'uuid', 'description': 'ID of SSL certificate'}, {'name': 'lbruleid', 'required': False, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'Load balancer rule ID'}, {'name': 'accountid', 'required': False, 'related': ['disableAccount', 'listAccounts', 'listAccounts', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'Account ID'}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'Project that owns the SSL certificate'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id of the certificate'}, {'type': 'string', 'name': 'id', 'description': 'SSL certificate ID'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'certchain', 'description': 'certificate chain'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'fingerprint', 'description': 'certificate fingerprint'}, {'type': 'string', 'name': 'account', 'description': 'account for the certificate'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the certificate'}, {'type': 'list', 'name': 'loadbalancerrulelist', 'description': 'List of loabalancers this certificate is bound to'}, {'type': 'string', 'name': 'certificate', 'description': 'certificate'}], 'description': 'Lists SSL certificates'}, 'niciranvpdevicenetworks': {'name': 'listNiciraNvpDeviceNetworks', 'related': ['listSrxFirewallNetworks', 'createNetwork', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'isasync': False, 'params': [{'name': 'nvpdeviceid', 'required': True, 'related': ['addNiciraNvpDevice', 'listNiciraNvpDevices'], 'length': 255, 'type': 'uuid', 'description': 'nicira nvp device ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['nvpdeviceid'], 'response': [{'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'description': 'the list of services', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}], 'description': 'lists network that are using a nicira nvp device'}, 'baremetalpxeservers': {'name': 'listBaremetalPxeServers', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Pxe server device ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['physicalnetworkid'], 'response': [{'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'url', 'description': 'url'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this external dhcp device belongs to'}, {'type': 'string', 'name': 'id', 'description': 'device id of '}], 'description': 'list baremetal pxe server'}, 'templates': {'name': 'listTemplates', 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'showremoved', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'show removed templates as well'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the hypervisor for which to restrict the search'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'list templates by zoneId'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'templatefilter', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'possible values are "featured", "self", "selfexecutable","sharedexecutable","executable", and "community". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'id', 'required': False, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the template ID'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the template name'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['templatefilter'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}], 'description': 'List all public, private, and privileged templates.'}, 'externalfirewalls': {'name': 'listExternalFirewalls', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'listZones'], 'length': 255, 'type': 'uuid', 'description': 'zone Id'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['zoneid'], 'response': [{'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the external firewall'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}], 'description': 'List external firewall appliances.'}, 'ipforwardingrules': {'name': 'listIpForwardingRules', 'related': [], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'id', 'required': False, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'Lists rule with the specified ID.'}, {'name': 'ipaddressid', 'required': False, 'related': ['associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'list the rule belonging to this public IP address'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'virtualmachineid', 'required': False, 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'Lists all rules applied to the specified VM.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'publicport', 'description': "the starting port of port forwarding rule's public port range"}, {'type': 'string', 'name': 'id', 'description': 'the ID of the port forwarding rule'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the port forwarding rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the port forwarding rule'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is firewall for display to the regular user'}, {'type': 'string', 'name': 'vmguestip', 'description': 'the vm ip address for the port forwarding rule'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the VM ID for the port forwarding rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'the VM name for the port forwarding rule'}, {'type': 'string', 'name': 'privateendport', 'description': "the ending port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'publicendport', 'description': "the ending port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'the VM display name for the port forwarding rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the port forwarding rule belongs to'}, {'type': 'string', 'name': 'privateport', 'description': "the starting port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the port forwarding rule'}], 'description': 'List the IP forwarding rules'}, 'srxfirewalls': {'name': 'listSrxFirewalls', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'fwdeviceid', 'required': False, 'related': ['listSrxFirewalls'], 'length': 255, 'type': 'uuid', 'description': 'SRX firewall device ID'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this SRX firewall belongs to'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'long', 'name': 'fwdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'string', 'name': 'fwdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'fwdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'fwdeviceid', 'description': 'device id of the SRX firewall'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}], 'description': 'lists SRX firewall devices in a physical network'}, 'vpnconnections': {'name': 'listVpnConnections', 'related': [], 'isasync': False, 'params': [{'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listVpnConnections'], 'length': 255, 'type': 'uuid', 'description': 'id of the vpn connection'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'createVPC', 'listVPCs'], 'length': 255, 'type': 'uuid', 'description': 'id of vpc'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'fordisplay', 'description': 'is connection for display to the regular user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'string', 'name': 's2svpngatewayid', 'description': 'the vpn gateway ID'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address'}, {'type': 'string', 'name': 'state', 'description': 'State of vpn connection'}, {'type': 'string', 'name': 'ikepolicy', 'description': 'IKE policy of the customer gateway'}, {'type': 'string', 'name': 'gateway', 'description': 'public ip address id of the customer gateway'}, {'type': 'string', 'name': 'ipsecpsk', 'description': 'IPsec Preshared-Key of the customer gateway'}, {'type': 'string', 'name': 'esppolicy', 'description': 'ESP policy of the customer gateway'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'string', 'name': 'cidrlist', 'description': 'guest cidr list of the customer gateway'}, {'type': 'long', 'name': 'ikelifetime', 'description': 'Lifetime of IKE SA of customer gateway'}, {'type': 'long', 'name': 'esplifetime', 'description': 'Lifetime of ESP SA of customer gateway'}, {'type': 'boolean', 'name': 'dpd', 'description': 'if DPD is enabled for customer gateway'}, {'type': 'boolean', 'name': 'passive', 'description': 'State of vpn connection'}, {'type': 'string', 'name': 'id', 'description': 'the connection ID'}, {'type': 'string', 'name': 's2scustomergatewayid', 'description': 'the customer gateway ID'}], 'description': 'Lists site to site vpn connection gateways'}, 'trafficmonitors': {'name': 'listTrafficMonitors', 'related': [], 'isasync': False, 'params': [{'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'zone Id'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': ['zoneid'], 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the external firewall'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}], 'description': 'List traffic monitor Hosts.'}, 'vpnusers': {'name': 'listVpnUsers', 'related': [], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'username', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username of the vpn user.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listVpnUsers'], 'length': 255, 'type': 'uuid', 'description': 'The uuid of the Vpn user'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'state', 'description': 'the state of the Vpn User'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the account of the remote access vpn'}, {'type': 'string', 'name': 'account', 'description': 'the account of the remote access vpn'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'id', 'description': 'the vpn userID'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the account of the remote access vpn'}, {'type': 'string', 'name': 'username', 'description': 'the username of the vpn user'}], 'description': 'Lists vpn users'}, 'egressfirewallrules': {'name': 'listEgressFirewallRules', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'Lists rule with the specified ID.'}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'ipaddressid', 'required': False, 'related': ['associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the ID of IP address of the firewall services'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'networkid', 'required': False, 'related': ['createNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the network ID for the egress firewall services'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'protocol', 'description': 'the protocol of the firewall rule'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the firewall rule'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of firewall rule's port range"}, {'type': 'string', 'name': 'endport', 'description': "the ending port of firewall rule's port range"}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of the firewall rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the firewall rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the firewall rule'}], 'description': 'Lists all egress firewall rules for network ID.'}, 'opendaylightcontrollers': {'name': 'listOpenDaylightControllers', 'related': ['deleteOpenDaylightController'], 'isasync': False, 'params': [{'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'id', 'required': False, 'related': ['listOpenDaylightControllers', 'deleteOpenDaylightController'], 'length': 255, 'type': 'uuid', 'description': 'the ID of a OpenDaylight Controller'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this controller belongs to'}, {'type': 'string', 'name': 'username', 'description': 'the username to authenticate to the controller'}, {'type': 'string', 'name': 'url', 'description': 'the url of the controller api'}, {'type': 'string', 'name': 'name', 'description': 'the name assigned to the controller'}, {'type': 'string', 'name': 'id', 'description': 'device id of the controller'}], 'description': 'Lists OpenDyalight controllers'}, 'externalloadbalancers': {'name': 'listExternalLoadBalancers', 'related': ['listHosts'], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'zone Id'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}, {'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}, {'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}, {'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}, {'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}], 'name': 'vgpu'}, {'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}], 'name': 'gpugroup'}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}], 'description': 'Lists F5 external load balancer appliances added in a zone.'}, 'staticroutes': {'name': 'listStaticRoutes', 'related': [], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'list static routes by vpc id'}, {'name': 'gatewayid', 'required': False, 'related': ['createPrivateGateway'], 'length': 255, 'type': 'uuid', 'description': 'list static routes by gateway id'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'id', 'required': False, 'related': ['listStaticRoutes'], 'length': 255, 'type': 'uuid', 'description': 'list static route by id'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the static route'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the static route'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the static route'}, {'description': 'the list of resource tags associated with static route', 'type': 'list', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the static route'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the static route'}, {'type': 'string', 'name': 'id', 'description': 'the ID of static route'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the static route belongs to'}, {'type': 'string', 'name': 'state', 'description': 'the state of the static route'}, {'type': 'string', 'name': 'gatewayid', 'description': 'VPC gateway the route is created for'}, {'type': 'string', 'name': 'cidr', 'description': 'static route CIDR'}], 'description': 'Lists all static routes'}, 'portableipranges': {'name': 'listPortableIpRanges', 'related': [], 'isasync': False, 'params': [{'name': 'regionid', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Id of a Region'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'id', 'required': False, 'related': ['listPortableIpRanges'], 'length': 255, 'type': 'uuid', 'description': 'Id of the portable ip range'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}], 'requiredparams': [], 'response': [{'type': 'integer', 'name': 'regionid', 'description': 'Region Id in which portable ip range is provisioned'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the VLAN IP range'}, {'type': 'string', 'name': 'endip', 'description': 'the end ip of the portable IP range'}, {'type': 'string', 'name': 'id', 'description': 'portable IP range ID'}, {'type': 'string', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the portable IP range'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the VLAN IP range'}, {'description': 'List of portable IP and association with zone/network/vpc details that are part of GSLB rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID the portable IP address is associated with'}, {'type': 'integer', 'name': 'regionid', 'description': 'Region Id in which global load balancer is created'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'state', 'description': 'State of the ip address. Can be: Allocatin, Allocated and Releasing'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the Network where ip belongs to'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the ip belongs to'}, {'type': 'string', 'name': 'ipaddress', 'description': 'public IP address'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID the portable IP address is associated with'}, {'type': 'date', 'name': 'allocated', 'description': 'date the portal IP address was acquired'}], 'name': 'portableipaddress'}], 'description': 'list portable IP ranges'}, 'volumes': {'name': 'listVolumes', 'related': ['updateVolume', 'createVolume', 'attachVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'migrateVolume', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': False, 'params': [{'name': 'isrecursive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'list only resources belonging to the domain specified'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the availability zone'}, {'name': 'hostid', 'required': False, 'related': ['addBaremetalHost', 'listHosts', 'cancelHostMaintenance', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'list volumes on specified host'}, {'name': 'id', 'required': False, 'related': ['listVolumes', 'updateVolume', 'createVolume', 'attachVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'migrateVolume', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject', 'suspendProject'], 'length': 255, 'type': 'uuid', 'description': 'list objects by project'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'displayvolume', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'list resources by display flag; only ROOT admin is eligible to pass this parameter'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the type of disk volume'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the disk volume'}, {'name': 'listall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"}, {'name': 'virtualmachineid', 'required': False, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine'}, {'name': 'podid', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the pod id the disk volume belongs to'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'List resources by tags (key/value pairs)'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list resources by account. Must be used with the domainId parameter.'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'diskofferingid', 'required': False, 'related': ['updateDiskOffering', 'createDiskOffering', 'listDiskOfferings'], 'length': 255, 'type': 'uuid', 'description': 'list volumes by disk offering'}, {'name': 'storageid', 'required': False, 'related': ['createStoragePool', 'updateStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'enableStorageMaintenance', 'cancelStorageMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the storage pool, available to ROOT admin only'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}], 'description': 'Lists all volumes.'}, 'pods': {'name': 'listPods', 'related': ['createPod', 'updatePod'], 'isasync': False, 'params': [{'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'list Pods by Zone ID'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'list Pods by ID'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list pods by allocation state'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list Pods by name'}, {'name': 'showcapacities', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'flag to display the capacity of the pods'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the Pod'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the Pod'}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the Pod'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the Pod'}, {'type': 'string', 'name': 'endip', 'description': 'the ending IP for the Pod'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the Pod'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the Pod'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the Pod'}, {'description': 'the capacity of the Pod', 'type': 'list', 'response': [{'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}], 'name': 'capacity'}, {'type': 'string', 'name': 'startip', 'description': 'the starting IP for the Pod'}], 'description': 'Lists all Pods.'}}, 'activate': {'project': {'name': 'activateProject', 'related': ['updateProject', 'createProject', 'listProjectAccounts'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'id of the project to be modified'}], 'requiredparams': ['id'], 'response': [{'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this project'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the project'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the project can own'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this project'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the project can own'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this project'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this project'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by project'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this project'}, {'type': 'string', 'name': 'name', 'description': 'the name of the project'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this project to acquire'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this project'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by project'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this project'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id the project belongs to'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this project'}, {'type': 'string', 'name': 'state', 'description': 'the state of the project'}, {'type': 'string', 'name': 'account', 'description': "the account name of the project's owner"}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this project to acquire'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name where the project belongs to'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this project'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this project'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this project'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by project'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this project'}, {'description': 'the list of resource tags associated with vm', 'type': 'list', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this project'}, {'type': 'string', 'name': 'id', 'description': 'the id of the project'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the project can own'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this project'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this project can acquire'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by project'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the project can own'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this project'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this project'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this project'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this project'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this project'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this project'}], 'description': 'Activates a project'}}, 'reconnect': {'host': {'name': 'reconnectHost', 'related': ['addBaremetalHost', 'listHosts', 'cancelHostMaintenance', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['addBaremetalHost', 'listHosts', 'cancelHostMaintenance', 'listExternalLoadBalancers', 'reconnectHost', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the host ID'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}, {'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}, {'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}, {'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}, {'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}], 'name': 'vgpu'}], 'name': 'gpugroup'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}], 'description': 'Reconnects a host.'}}, 'cancel': {'hostmaintenance': {'name': 'cancelHostMaintenance', 'related': ['addBaremetalHost', 'listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['addBaremetalHost', 'listHosts', 'cancelHostMaintenance', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the host ID'}], 'requiredparams': ['id'], 'response': [{'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}, {'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}, {'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}, {'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}, {'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}], 'name': 'vgpu'}], 'name': 'gpugroup'}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}], 'description': 'Cancels host maintenance.'}, 'storagemaintenance': {'name': 'cancelStorageMaintenance', 'related': ['createStoragePool', 'findStoragePoolsForMigration', 'listStoragePools'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'cancelStorageMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the primary storage ID'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this pool is suitable to migrate a volume, false otherwise'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'date', 'name': 'created', 'description': 'the date and time the storage pool was created'}, {'type': 'string', 'name': 'type', 'description': 'the storage pool type'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor type of the storage pool'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the storage pool'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster for the storage pool'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the storage pool'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the storage pool'}, {'type': 'string', 'name': 'path', 'description': 'the storage pool path'}, {'type': 'long', 'name': 'disksizeused', 'description': "the host's currently used disk size"}, {'type': 'long', 'name': 'capacityiops', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'type': 'string', 'name': 'overprovisionfactor', 'description': 'the overprovisionfactor for the storage pool'}, {'type': 'string', 'name': 'scope', 'description': 'the scope of the storage pool'}, {'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster for the storage pool'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the storage pool'}, {'type': 'storagepoolstatus', 'name': 'state', 'description': 'the state of the storage pool'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the storage pool'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the storage pool'}, {'type': 'string', 'name': 'name', 'description': 'the name of the storage pool'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the storage pool'}, {'type': 'map', 'name': 'storagecapabilities', 'description': 'the storage pool capabilities'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the storage pool'}], 'description': 'Cancels maintenance for primary storage'}}, 'query': {'asyncjobresult': {'name': 'queryAsyncJobResult', 'related': ['listAsyncJobs'], 'isasync': False, 'params': [{'name': 'jobid', 'required': True, 'related': ['listAsyncJobs', 'queryAsyncJobResult'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the asychronous job'}], 'requiredparams': ['jobid'], 'response': [{'type': 'string', 'name': 'jobinstanceid', 'description': 'the unique ID of the instance/entity object related to the job'}, {'type': 'responseobject', 'name': 'jobresult', 'description': 'the result reason'}, {'type': 'integer', 'name': 'jobprocstatus', 'description': 'the progress information of the PENDING job'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the current job status-should be 0 for PENDING'}, {'type': 'string', 'name': 'accountid', 'description': 'the account that executed the async command'}, {'type': 'string', 'name': 'userid', 'description': 'the user that executed the async command'}, {'type': 'string', 'name': 'jobinstancetype', 'description': 'the instance/entity object related to the job'}, {'type': 'integer', 'name': 'jobresultcode', 'description': 'the result code for the job'}, {'type': 'string', 'name': 'cmd', 'description': 'the async command executed'}, {'type': 'string', 'name': 'jobresulttype', 'description': 'the result type'}, {'type': 'date', 'name': 'created', 'description': '  the created date of the job'}], 'description': 'Retrieves the current status of asynchronous job.'}}, 'recover': {'virtualmachine': {'name': 'recoverVirtualMachine', 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['id'], 'response': [{'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}], 'name': 'affinitygroup'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}], 'name': 'nic'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {}], 'description': 'Recovers a virtual machine.'}}, 'extract': {'volume': {'name': 'extractVolume', 'related': ['extractIso', 'extractTemplate'], 'isasync': True, 'params': [{'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the url to which the volume would be extracted'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone where the volume is located'}, {'name': 'id', 'required': True, 'related': ['listVolumes', 'updateVolume', 'createVolume', 'attachVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'migrateVolume', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the volume'}, {'name': 'mode', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD'}], 'requiredparams': ['zoneid', 'id', 'mode'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the extracted object'}, {'type': 'string', 'name': 'resultstring', 'description': ''}, {}, {'type': 'string', 'name': 'extractMode', 'description': 'the mode of extraction - upload or download'}, {'type': 'string', 'name': 'storagetype', 'description': 'type of the storage'}, {'type': 'integer', 'name': 'uploadpercentage', 'description': 'the percentage of the entity uploaded to the specified location'}, {'type': 'string', 'name': 'extractId', 'description': 'the upload id of extracted object'}, {'type': 'string', 'name': 'status', 'description': 'the status of the extraction'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the extracted object belongs'}, {'type': 'date', 'name': 'created', 'description': 'the time and date the object was created'}, {'type': 'string', 'name': 'id', 'description': 'the id of extracted object'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone ID the object was extracted from'}, {'type': 'string', 'name': 'zonename', 'description': 'zone name the object was extracted from'}, {'type': 'string', 'name': 'state', 'description': 'the state of the extracted object'}, {'type': 'string', 'name': 'url', 'description': 'if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded'}], 'description': 'Extracts volume'}, 'iso': {'name': 'extractIso', 'related': ['extractTemplate'], 'isasync': True, 'params': [{'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone where the ISO is originally located'}, {'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL to which the ISO would be extracted'}, {'name': 'mode', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD'}, {'name': 'id', 'required': True, 'related': ['listIsos', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the ISO file'}], 'requiredparams': ['mode', 'id'], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'zone ID the object was extracted from'}, {'type': 'string', 'name': 'extractId', 'description': 'the upload id of extracted object'}, {'type': 'string', 'name': 'storagetype', 'description': 'type of the storage'}, {'type': 'string', 'name': 'id', 'description': 'the id of extracted object'}, {'type': 'string', 'name': 'status', 'description': 'the status of the extraction'}, {'type': 'string', 'name': 'resultstring', 'description': ''}, {'type': 'string', 'name': 'name', 'description': 'the name of the extracted object'}, {}, {'type': 'string', 'name': 'zonename', 'description': 'zone name the object was extracted from'}, {'type': 'string', 'name': 'state', 'description': 'the state of the extracted object'}, {'type': 'string', 'name': 'url', 'description': 'if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded'}, {'type': 'string', 'name': 'extractMode', 'description': 'the mode of extraction - upload or download'}, {'type': 'integer', 'name': 'uploadpercentage', 'description': 'the percentage of the entity uploaded to the specified location'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the extracted object belongs'}, {'type': 'date', 'name': 'created', 'description': 'the time and date the object was created'}], 'description': 'Extracts an ISO'}, 'template': {'name': 'extractTemplate', 'related': [], 'isasync': True, 'params': [{'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the url to which the ISO would be extracted'}, {'name': 'mode', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone where the ISO is originally located'}, {'name': 'id', 'required': True, 'related': ['listIsos', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the template'}], 'requiredparams': ['mode', 'id'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the extracted object'}, {'type': 'integer', 'name': 'uploadpercentage', 'description': 'the percentage of the entity uploaded to the specified location'}, {'type': 'string', 'name': 'resultstring', 'description': ''}, {'type': 'string', 'name': 'extractMode', 'description': 'the mode of extraction - upload or download'}, {'type': 'string', 'name': 'id', 'description': 'the id of extracted object'}, {'type': 'string', 'name': 'zonename', 'description': 'zone name the object was extracted from'}, {'type': 'string', 'name': 'storagetype', 'description': 'type of the storage'}, {'type': 'string', 'name': 'state', 'description': 'the state of the extracted object'}, {'type': 'date', 'name': 'created', 'description': 'the time and date the object was created'}, {'type': 'string', 'name': 'extractId', 'description': 'the upload id of extracted object'}, {'type': 'string', 'name': 'status', 'description': 'the status of the extraction'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone ID the object was extracted from'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the extracted object belongs'}, {'type': 'string', 'name': 'url', 'description': 'if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded'}, {}], 'description': 'Extracts a template'}}, 'archive': {'alerts': {'name': 'archiveAlerts', 'related': [], 'isasync': False, 'params': [{'name': 'ids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the IDs of the alerts'}, {'name': 'startdate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'start date range to archive alerts (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'archive by alert type'}, {'name': 'enddate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'end date range to archive alerts (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Archive one or more alerts.'}, 'events': {'name': 'archiveEvents', 'related': [], 'isasync': False, 'params': [{'name': 'ids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the IDs of the events'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'archive by event type'}, {'name': 'enddate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'end date range to archive events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}, {'name': 'startdate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'start date range to archive events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Archive one or more events.'}}, 'scale': {'systemvm': {'name': 'scaleSystemVm', 'related': [], 'isasync': True, 'params': [{'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'name value pairs of custom parameters for cpu, memory and cpunumber. example details[i].name=value'}, {'name': 'serviceofferingid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the service offering ID to apply to the system vm'}, {'name': 'id', 'required': True, 'related': ['scaleSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the system vm'}], 'requiredparams': ['serviceofferingid', 'id'], 'response': [{'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}], 'description': 'Scale the service offering for a system vm (console proxy or secondary storage). The system vm must be in a "Stopped" state for this command to take effect.'}, 'virtualmachine': {'name': 'scaleVirtualMachine', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}, {'name': 'serviceofferingid', 'required': True, 'related': ['listServiceOfferings', 'createServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the service offering for the virtual machine'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'name value pairs of custom parameters for cpu,memory and cpunumber. example details[i].name=value'}], 'requiredparams': ['id', 'serviceofferingid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Scales the virtual machine to a new service offering.'}}, 'prepare': {'hostformaintenance': {'name': 'prepareHostForMaintenance', 'related': ['listHosts', 'listExternalLoadBalancers'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listHosts', 'listExternalLoadBalancers', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the host ID'}], 'requiredparams': ['id'], 'response': [{'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}, {'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}, {'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}, {'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}, {'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}, {'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}], 'name': 'vgpu'}], 'name': 'gpugroup'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}], 'description': 'Prepares a host for maintenance.'}, 'template': {'name': 'prepareTemplate', 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': False, 'params': [{'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'zone ID of the template to be prepared in primary storage(s).'}, {'name': 'templateid', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'template ID of the template to be prepared in primary storage(s).'}], 'requiredparams': ['zoneid', 'templateid'], 'response': [{'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}], 'description': 'load template into primary storage'}}, 'saml': {'sso': {'name': 'samlSso', 'related': [], 'isasync': False, 'params': [{'name': 'idpid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Identity Provider Entity ID'}], 'requiredparams': ['idpid'], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account name the user belongs to'}, {'type': 'string', 'name': 'lastname', 'description': 'last name of the user'}, {'type': 'integer', 'name': 'timeout', 'description': 'the time period before the session has expired'}, {'type': 'string', 'name': 'timezone', 'description': 'user time zone'}, {'type': 'string', 'name': 'userid', 'description': 'User ID'}, {'type': 'string', 'name': 'registered', 'description': 'Is user registered'}, {'type': 'string', 'name': 'type', 'description': 'the account type (admin, domain-admin, read-only-admin, user)'}, {'type': 'string', 'name': 'domainid', 'description': 'Domain ID that the user belongs to'}, {'type': 'string', 'name': 'firstname', 'description': 'first name of the user'}, {'type': 'string', 'name': 'sessionkey', 'description': 'Session key that can be passed in subsequent Query command calls'}, {'type': 'string', 'name': 'username', 'description': 'Username'}], 'description': 'SP initiated SAML Single Sign On'}, 'slo': {'name': 'samlSlo', 'related': ['logout'], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'description', 'description': 'Response description'}], 'description': 'SAML Global Log Out API'}}, 'create': {'loadbalancerrule': {'name': 'createLoadBalancerRule', 'related': [], 'isasync': True, 'params': [{'name': 'publicport', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the public port from where the network traffic will be load balanced from'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the CIDR list to forward traffic from'}, {'name': 'privateport', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the private port of the private IP address/virtual machine where the network traffic will be load balanced to'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'algorithm', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'load balancer algorithm (source, roundrobin, leastconn)'}, {'name': 'publicipid', 'required': False, 'related': ['associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'public IP address ID from where the network traffic will be load balanced from'}, {'name': 'openfirewall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. If not specified 1) defaulted to false when LB rule is being created for VPC guest network 2) in all other cases defaulted to true'}, {'name': 'description', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the description of the load balancer rule'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account associated with the load balancer. Must be used with the domainId parameter.'}, {'name': 'networkid', 'required': False, 'related': ['listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The guest network this rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'zone where the load balancer is going to be created. This parameter is required when LB service provider is ElasticLoadBalancerVm'}, {'name': 'protocol', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The protocol for the LB'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID associated with the load balancer'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the load balancer rule'}], 'requiredparams': ['publicport', 'privateport', 'algorithm', 'name'], 'response': [{'type': 'string', 'name': 'privateport', 'description': 'the private port'}, {'type': 'string', 'name': 'description', 'description': 'the description of the load balancer'}, {'type': 'string', 'name': 'name', 'description': 'the name of the load balancer'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the rule belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the lb rule belongs to'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'publicport', 'description': 'the public port'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'id', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address id'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'description': 'the list of resource tags associated with load balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the loadbalanacer rule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}], 'description': 'Creates a load balancer rule'}, 'domain': {'name': 'createDomain', 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'isasync': False, 'params': [{'name': 'parentdomainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'assigns new domain a parent domain by domain ID of the parent.  If no parent domain is specied, the ROOT domain is assumed.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'creates domain with this name'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Network domain for networks in the domain'}, {'name': 'domainid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Domain UUID, required for adding domain from another Region'}], 'requiredparams': ['name'], 'response': [{'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this domain'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this domain to acquire'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this domain'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by domain'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this domain'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this domain'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this domain'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the domain can own'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this domain'}, {'type': 'string', 'name': 'state', 'description': 'the state of the domain'}, {'type': 'string', 'name': 'parentdomainid', 'description': 'the domain ID of the parent domain'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the domain can own'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the domain can own'}, {'type': 'string', 'name': 'parentdomainname', 'description': 'the domain name of the parent domain'}, {'type': 'integer', 'name': 'level', 'description': 'the level of the domain'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by domain'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by domain'}, {'type': 'boolean', 'name': 'haschild', 'description': 'whether the domain has one or more sub-domains'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this domain'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by domain'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by domain'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this domain'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this domain'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by domain'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this domain to acquire'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this domain'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this domain'}, {'type': 'string', 'name': 'path', 'description': 'the path of the domain'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the domain can own'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the domain can own'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this domain'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this domain'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the domain'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this domain'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this domain'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this domain'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the domain can own'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the domain can own'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this domain'}, {'type': 'string', 'name': 'name', 'description': 'the name of the domain'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this domain'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this domain'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this domain can acquire'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this domain'}], 'description': 'Creates a domain'}, 'snapshotpolicy': {'name': 'createSnapshotPolicy', 'related': [], 'isasync': False, 'params': [{'name': 'intervaltype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'valid values are HOURLY, DAILY, WEEKLY, and MONTHLY'}, {'name': 'timezone', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.'}, {'name': 'schedule', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'time the snapshot is scheduled to be taken. Format is:* if HOURLY, MM* if DAILY, MM:HH* if WEEKLY, MM:HH:DD (1-7)* if MONTHLY, MM:HH:DD (1-28)'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the policy to the end user or not'}, {'name': 'maxsnaps', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'maximum number of snapshots to retain'}, {'name': 'volumeid', 'required': True, 'related': ['createVolume', 'createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}], 'requiredparams': ['intervaltype', 'timezone', 'schedule', 'maxsnaps', 'volumeid'], 'response': [{'type': 'boolean', 'name': 'fordisplay', 'description': 'is this policy for display to the regular user'}, {'type': 'string', 'name': 'schedule', 'description': 'time the snapshot is scheduled to be taken.'}, {'type': 'string', 'name': 'volumeid', 'description': 'the ID of the disk volume'}, {'type': 'short', 'name': 'intervaltype', 'description': 'the interval type of the snapshot policy'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the snapshot policy'}, {'type': 'string', 'name': 'timezone', 'description': 'the time zone of the snapshot policy'}, {'type': 'int', 'name': 'maxsnaps', 'description': 'maximum number of snapshots retained'}], 'description': 'Creates a snapshot policy for the account.'}, 'diskoffering': {'name': 'createDiskOffering', 'related': [], 'isasync': False, 'params': [{'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the containing domain, null for public offerings'}, {'name': 'provisioningtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'name': 'byteswriterate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'bytes write rate of the disk offering'}, {'name': 'bytesreadrate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'bytes read rate of the disk offering'}, {'name': 'displayoffering', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to display the offering to the end user or not.'}, {'name': 'hypervisorsnapshotreserve', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'name': 'iopsreadrate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'io requests read rate of the disk offering'}, {'name': 'maxiops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'max iops of the disk offering'}, {'name': 'disksize', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'size of the disk offering in GB (1GB = 1,073,741,824 bytes)'}, {'name': 'customizediops', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'whether disk offering iops is custom or not'}, {'name': 'tags', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'tags for the disk offering'}, {'name': 'iopswriterate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'io requests write rate of the disk offering'}, {'name': 'storagetype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the storage type of the disk offering. Values are local and shared.'}, {'name': 'customized', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'whether disk offering size is custom or not'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the disk offering'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 4096, 'type': 'string', 'description': 'alternate display text of the disk offering'}, {'name': 'miniops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'min iops of the disk offering'}], 'requiredparams': ['name', 'displaytext'], 'response': [{'type': 'string', 'name': 'tags', 'description': 'the tags for the disk offering'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.'}, {'type': 'long', 'name': 'maxiops', 'description': 'the max iops of the disk offering'}, {'type': 'integer', 'name': 'hypervisorsnapshotreserve', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'type': 'string', 'name': 'cacheMode', 'description': 'the cache mode to use for this disk offering. none, writeback or writethrough'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk offering'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the disk offering.'}, {'type': 'date', 'name': 'created', 'description': 'the date this disk offering was created'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk offering'}, {'type': 'boolean', 'name': 'iscustomizediops', 'description': 'true if disk offering uses custom iops, false otherwise'}, {'type': 'boolean', 'name': 'iscustomized', 'description': 'true if disk offering uses custom size, false otherwise'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk offering'}, {'type': 'long', 'name': 'miniops', 'description': 'the min iops of the disk offering'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk offering'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'type': 'long', 'name': 'disksize', 'description': 'the size of the disk offering in GB'}, {'type': 'boolean', 'name': 'displayoffering', 'description': 'whether to display the offering to the end user or not.'}, {'type': 'string', 'name': 'id', 'description': 'unique ID of the disk offering'}, {'type': 'string', 'name': 'storagetype', 'description': 'the storage type for this disk offering'}, {'type': 'string', 'name': 'name', 'description': 'the name of the disk offering'}], 'description': 'Creates a disk offering.'}, 'securitygroup': {'name': 'createSecurityGroup', 'related': ['listSecurityGroups'], 'isasync': False, 'params': [{'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the security group. If the account parameter is used, domainId must also be used.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the security group. Must be used with domainId.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the security group'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'Create security group for project'}, {'name': 'description', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the description of the security group'}], 'requiredparams': ['name'], 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}], 'name': 'egressrule'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}], 'description': 'Creates a security group'}, 'portforwardingrule': {'name': 'createPortForwardingRule', 'related': ['listIpForwardingRules'], 'isasync': True, 'params': [{'name': 'publicendport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': "the ending port of port forwarding rule's private port range"}, {'name': 'protocol', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the protocol for the port forwarding rule. Valid values are TCP or UDP.'}, {'name': 'vmguestip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'VM guest nic secondary IP address for the port forwarding rule'}, {'name': 'openfirewall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. If not specified 1) defaulted to false when PF rule is being created for VPC guest network 2) in all other cases defaulted to true'}, {'name': 'privateendport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': "the ending port of port forwarding rule's private port range"}, {'name': 'publicport', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': "the starting port of port forwarding rule's public port range"}, {'name': 'ipaddressid', 'required': True, 'related': ['associateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the IP address id of the port forwarding rule'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the cidr list to forward traffic from'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'privateport', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': "the starting port of port forwarding rule's private port range"}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the network of the virtual machine the port forwarding rule will be created for. Required when public IP address is not associated with any guest network yet (VPC case).'}, {'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine for the port forwarding rule'}], 'requiredparams': ['protocol', 'publicport', 'ipaddressid', 'privateport', 'virtualmachineid'], 'response': [{'type': 'string', 'name': 'privateport', 'description': "the starting port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'publicport', 'description': "the starting port of port forwarding rule's public port range"}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the port forwarding rule'}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the port forwarding rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'the VM name for the port forwarding rule'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is firewall for display to the regular user'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the port forwarding rule'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the VM ID for the port forwarding rule'}, {'type': 'string', 'name': 'privateendport', 'description': "the ending port of port forwarding rule's private port range"}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the port forwarding rule'}, {'type': 'string', 'name': 'vmguestip', 'description': 'the vm ip address for the port forwarding rule'}, {'type': 'string', 'name': 'publicendport', 'description': "the ending port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'the VM display name for the port forwarding rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the port forwarding rule belongs to'}], 'description': 'Creates a port forwarding rule'}, 'pod': {'name': 'createPod', 'related': ['updatePod'], 'isasync': False, 'params': [{'name': 'endip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IP address for the Pod'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID in which the Pod will be created'}, {'name': 'startip', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the starting IP address for the Pod'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this Pod for allocation of new resources'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the Pod'}, {'name': 'gateway', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway for the Pod'}, {'name': 'netmask', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask for the Pod'}], 'requiredparams': ['zoneid', 'startip', 'name', 'gateway', 'netmask'], 'response': [{'type': 'string', 'name': 'gateway', 'description': 'the gateway of the Pod'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the Pod'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the Pod'}, {'description': 'the capacity of the Pod', 'type': 'list', 'response': [{'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}], 'name': 'capacity'}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the Pod'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Pod'}, {'type': 'string', 'name': 'startip', 'description': 'the starting IP for the Pod'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the Pod'}, {'type': 'string', 'name': 'endip', 'description': 'the ending IP for the Pod'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the Pod'}], 'description': 'Creates a new Pod.'}, 'ipforwardingrule': {'name': 'createIpForwardingRule', 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'listPortForwardingRules'], 'isasync': True, 'params': [{'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the CIDR list to forward traffic from'}, {'name': 'ipaddressid', 'required': True, 'related': ['associateIpAddress', 'updateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the public IP address ID of the forwarding rule, already associated via associateIp'}, {'name': 'openfirewall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitly. Has value true by default'}, {'name': 'endport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the end port for the rule'}, {'name': 'startport', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the start port for the rule'}, {'name': 'protocol', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the protocol for the rule. Valid values are TCP or UDP.'}], 'requiredparams': ['ipaddressid', 'startport', 'protocol'], 'response': [{'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'the VM display name for the port forwarding rule'}, {'type': 'string', 'name': 'privateport', 'description': "the starting port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'privateendport', 'description': "the ending port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'id', 'description': 'the ID of the port forwarding rule'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the port forwarding rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'publicport', 'description': "the starting port of port forwarding rule's public port range"}, {'type': 'string', 'name': 'publicendport', 'description': "the ending port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the port forwarding rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the port forwarding rule belongs to'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'the VM name for the port forwarding rule'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the VM ID for the port forwarding rule'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is firewall for display to the regular user'}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the port forwarding rule'}, {'type': 'string', 'name': 'vmguestip', 'description': 'the vm ip address for the port forwarding rule'}], 'description': 'Creates an IP forwarding rule'}, 'secondarystagingstore': {'name': 'createSecondaryStagingStore', 'related': ['listSwifts'], 'isasync': False, 'params': [{'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'the details for the staging store'}, {'name': 'scope', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the scope of the staging store: zone only for now'}, {'name': 'provider', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the staging store provider name'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL for the staging store'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the staging store'}], 'requiredparams': ['url'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}], 'description': 'create secondary staging store.'}, 'lbstickinesspolicy': {'name': 'createLBStickinessPolicy', 'related': [], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'description', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the description of the load balancer stickiness policy'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the load balancer stickiness policy'}, {'name': 'methodname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the load balancer stickiness policy method, possible values can be obtained from listNetworks API'}, {'name': 'lbruleid', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}, {'name': 'param', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'param list. Example: param[0].name=cookiename&param[0].value=LBCookie '}], 'requiredparams': ['name', 'methodname', 'lbruleid'], 'response': [{'description': 'the list of stickinesspolicies', 'type': 'list', 'response': [{'type': 'string', 'name': 'methodname', 'description': 'the method name of the Stickiness policy'}, {'type': 'map', 'name': 'params', 'description': 'the params of the policy'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Stickiness policy'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is policy for display to the regular user'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Stickiness policy'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'id', 'description': 'the LB Stickiness policy ID'}], 'name': 'stickinesspolicy'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'account', 'description': 'the account of the Stickiness policy'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Stickiness policy'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Stickiness policy'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the Stickiness policy belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the Stickiness policy'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the Stickiness policy'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the LB rule ID'}], 'description': 'Creates a load balancer stickiness policy '}, 'vpcoffering': {'name': 'createVPCOffering', 'related': ['listVPCOfferings'], 'isasync': True, 'params': [{'name': 'displaytext', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the vpc offering'}, {'name': 'serviceofferingid', 'required': False, 'related': ['listServiceOfferings', 'createServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the service offering for the VPC router appliance'}, {'name': 'serviceproviderlist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network'}, {'name': 'supportedservices', 'required': True, 'related': [], 'length': 255, 'type': 'list', 'description': 'services supported by the vpc offering'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the vpc offering'}, {'name': 'servicecapabilitylist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'desired service capabilities as part of vpc offering'}], 'requiredparams': ['displaytext', 'supportedservices', 'name'], 'response': [{'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}], 'name': 'capability'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'boolean', 'name': 'supportsregionLevelvpc', 'description': ' indicated if the offering can support region level vpc'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the vpc offering.'}, {'type': 'date', 'name': 'created', 'description': 'the date this vpc offering was created'}, {'type': 'string', 'name': 'name', 'description': 'the name of the vpc offering'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if vpc offering is default, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the id of the vpc offering'}, {'type': 'boolean', 'name': 'distributedvpcrouter', 'description': ' indicates if the vpc offering supports distributed router for one-hop forwarding'}, {'type': 'string', 'name': 'state', 'description': 'state of the vpc offering. Can be Disabled/Enabled'}], 'description': 'Creates VPC offering'}, 'network': {'name': 'createNetwork', 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'isasync': False, 'params': [{'name': 'startip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the beginning IP address in the network IP range'}, {'name': 'endipv6', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IPv6 address in the IPv6 network range'}, {'name': 'isolatedpvlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the isolated private VLAN for this network'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'network domain'}, {'name': 'acltype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Access control type; supported values are account and domain. In 3.0 all shared networks should have aclType=Domain, and all isolated networks - Account. Account means that only the account owner can use the network, domain - all accounts in the domain can use the network'}, {'name': 'ip6gateway', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway of the IPv6 network. Required for Shared networks'}, {'name': 'displaynetwork', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'name': 'endip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IP address in the network IP range. If not specified, will be defaulted to startIP'}, {'name': 'aclid', 'required': False, 'related': ['listNetworkACLLists', 'createNetworkACLList'], 'length': 255, 'type': 'uuid', 'description': 'Network ACL ID associated for the network'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'domain ID of the account owning a network'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the physical network ID the network belongs to'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'account that will own the network'}, {'name': 'ip6cidr', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the CIDR of IPv6 network, must be at least /64'}, {'name': 'netmask', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask of the network. Required for shared networks and isolated networks when it belongs to VPC'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the zone ID for the network'}, {'name': 'subdomainaccess', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Defines whether to allow subdomains to use networks dedicated to their parent domain(s). Should be used with aclType=Domain, defaulted to allow.subdomain.network.access global config if not specified'}, {'name': 'startipv6', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the beginning IPv6 address in the IPv6 network range'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the network'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'an optional project for the SSH key'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'the VPC network belongs to'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the network'}, {'name': 'networkofferingid', 'required': True, 'related': ['createNetworkOffering', 'updateNetworkOffering'], 'length': 255, 'type': 'uuid', 'description': 'the network offering ID'}, {'name': 'gateway', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway of the network. Required for shared networks and isolated networks when it belongs to VPC'}], 'requiredparams': ['zoneid', 'displaytext', 'name', 'networkofferingid'], 'response': [{'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'description': 'the list of services', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}], 'description': 'Creates a network'}, 'zone': {'name': 'createZone', 'related': ['listZones', 'listZones'], 'isasync': False, 'params': [{'name': 'domain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Network domain name for the networks in the zone'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the Zone'}, {'name': 'guestcidraddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the guest CIDR address for the Zone'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this Zone for allocation of new resources'}, {'name': 'localstorageenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if local storage offering enabled, false otherwise'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the containing domain, null for public zones'}, {'name': 'internaldns2', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the second internal DNS for the Zone'}, {'name': 'securitygroupenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if network is security group enabled, false otherwise'}, {'name': 'networktype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'network type of the zone, can be Basic or Advanced'}, {'name': 'ip6dns1', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the first DNS for IPv6 network in the Zone'}, {'name': 'internaldns1', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the first internal DNS for the Zone'}, {'name': 'dns1', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the first DNS for the Zone'}, {'name': 'ip6dns2', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the second DNS for IPv6 network in the Zone'}, {'name': 'dns2', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the second DNS for the Zone'}], 'requiredparams': ['name', 'networktype', 'internaldns1', 'dns1'], 'response': [{'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the Zone'}, {'type': 'string', 'name': 'dhcpprovider', 'description': 'the dhcp Provider for the Zone'}, {'type': 'string', 'name': 'zonetoken', 'description': 'Zone Token'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the Zone'}, {'type': 'string', 'name': 'internaldns2', 'description': 'the second internal DNS for the Zone'}, {'type': 'boolean', 'name': 'localstorageenabled', 'description': 'true if local storage offering enabled, false otherwise'}, {'type': 'string', 'name': 'domainname', 'description': 'the name of the containing domain, null for public zones'}, {'type': 'string', 'name': 'domain', 'description': 'Network domain name for the networks in the zone'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the Zone'}, {'type': 'string', 'name': 'id', 'description': 'Zone id'}, {'description': 'the capacity of the Zone', 'type': 'list', 'response': [{'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}], 'name': 'capacity'}, {'type': 'string', 'name': 'domainid', 'description': 'the UUID of the containing domain, null for public zones'}, {'type': 'string', 'name': 'name', 'description': 'Zone name'}, {'type': 'map', 'name': 'resourcedetails', 'description': 'Meta data associated with the zone (key/value pairs)'}, {'type': 'boolean', 'name': 'securitygroupsenabled', 'description': 'true if security groups support is enabled, false otherwise'}, {}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the cluster'}, {'type': 'string', 'name': 'networktype', 'description': 'the network type of the zone; can be Basic or Advanced'}, {'type': 'string', 'name': 'guestcidraddress', 'description': 'the guest CIDR address for the Zone'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the Zone'}, {'type': 'string', 'name': 'displaytext', 'description': 'the display text of the zone'}, {'description': 'the list of resource tags associated with zone.', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'description', 'description': 'Zone description'}, {'type': 'string', 'name': 'internaldns1', 'description': 'the first internal DNS for the Zone'}], 'description': 'Creates a Zone.'}, 'remoteaccessvpn': {'name': 'createRemoteAccessVpn', 'related': [], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpn to the end user or not'}, {'name': 'iprange', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the range of ip addresses to allocate to vpn clients. The first ip in the range will be taken by the vpn server'}, {'name': 'publicipid', 'required': True, 'related': ['associateIpAddress', 'associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'public ip address id of the vpn server'}, {'name': 'openfirewall', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. Has value true by default'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the VPN. If the account parameter is used, domainId must also be used.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the VPN. Must be used with domainId.'}], 'requiredparams': ['publicipid'], 'response': [{'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address of the vpn server'}, {'type': 'string', 'name': 'presharedkey', 'description': 'the ipsec preshared key'}, {'type': 'string', 'name': 'iprange', 'description': 'the range of ips to allocate to the clients'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address of the vpn server'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the account of the remote access vpn'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'id', 'description': 'the id of the remote access vpn'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the account of the remote access vpn'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpn for display to the regular user'}, {'type': 'string', 'name': 'account', 'description': 'the account of the remote access vpn'}], 'description': 'Creates a l2tp/ipsec remote access vpn'}, 'instancegroup': {'name': 'createInstanceGroup', 'related': ['updateInstanceGroup'], 'isasync': False, 'params': [{'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the instance group'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID of account owning the instance group'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'The project of the instance group'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account of the instance group. The account parameter must be used with the domainId parameter.'}], 'requiredparams': ['name'], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the instance group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project ID of the instance group'}, {'type': 'date', 'name': 'created', 'description': 'time and date the instance group was created'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the instance group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the instance group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the instance group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the instance group'}], 'description': 'Creates a vm group'}, 'autoscalepolicy': {'name': 'createAutoScalePolicy', 'related': [], 'isasync': True, 'params': [{'name': 'conditionids', 'required': True, 'related': [], 'length': 255, 'type': 'list', 'description': 'the list of IDs of the conditions that are being evaluated on every interval'}, {'name': 'action', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the action to be executed if all the conditions evaluate to true for the specified duration.'}, {'name': 'quiettime', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the cool down period for which the policy should not be evaluated after the action has been taken'}, {'name': 'duration', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the duration for which the conditions have to be true before action is taken'}], 'requiredparams': ['conditionids', 'action', 'duration'], 'response': [{'type': 'integer', 'name': 'duration', 'description': 'the duration for which the conditions have to be true before action is taken'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale policy ID'}, {'type': 'string', 'name': 'action', 'description': 'the action to be executed if all the conditions evaluate to true for the specified duration.'}, {'type': 'integer', 'name': 'quiettime', 'description': 'the cool down period for which the policy should not be evaluated after the action has been taken'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the autoscale policy'}, {'type': 'list', 'name': 'conditions', 'description': 'the list of IDs of the conditions that are being evaluated on every interval'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the autoscale policy'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the autoscale policy'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id autoscale policy'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the autoscale policy'}], 'description': 'Creates an autoscale policy for a provision or deprovision action, the action is taken when the all the conditions evaluates to true for the specified duration. The policy is in effect once it is attached to a autscale vm group.'}, 'globalloadbalancerrule': {'name': 'createGlobalLoadBalancerRule', 'related': ['updateGlobalLoadBalancerRule', 'listGlobalLoadBalancerRules'], 'isasync': True, 'params': [{'name': 'gslblbmethod', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "load balancer algorithm (roundrobin, leastconn, proximity) that method is used to distribute traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'"}, {'name': 'gslbdomainname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'domain name for the GSLB service.'}, {'name': 'gslbstickysessionmethodname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'session sticky method (sourceip) if not specified defaults to sourceip'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the load balancer rule'}, {'name': 'regionid', 'required': True, 'related': ['addRegion', 'listRegions'], 'length': 255, 'type': 'integer', 'description': 'region where the global load balancer is going to be created.'}, {'name': 'description', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the description of the load balancer rule'}, {'name': 'gslbservicetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'GSLB service type (tcp, udp, http)'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account associated with the global load balancer. Must be used with the domainId parameter.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID associated with the load balancer'}], 'requiredparams': ['gslbdomainname', 'name', 'regionid', 'gslbservicetype'], 'response': [{'type': 'string', 'name': 'id', 'description': 'global load balancer rule ID'}, {'description': 'List of load balancer rules that are part of GSLB rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the rule belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the lb rule belongs to'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address id'}, {'type': 'string', 'name': 'publicport', 'description': 'the public port'}, {'description': 'the list of resource tags associated with load balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the loadbalanacer rule'}, {'type': 'string', 'name': 'id', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'description', 'description': 'the description of the load balancer'}, {'type': 'string', 'name': 'name', 'description': 'the name of the load balancer'}, {'type': 'string', 'name': 'privateport', 'description': 'the private port'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}], 'name': 'loadbalancerrule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'name', 'description': 'name of the global load balancer rule'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'integer', 'name': 'regionid', 'description': 'Region Id in which global load balancer is created'}, {'type': 'string', 'name': 'gslbstickysessionmethodname', 'description': 'session persistence method used for the global load balancer'}, {'type': 'string', 'name': 'gslblbmethod', 'description': 'Load balancing method used for the global load balancer'}, {'type': 'string', 'name': 'gslbdomainname', 'description': 'DNS domain name given for the global load balancer'}, {'type': 'string', 'name': 'description', 'description': 'the description of the global load balancer rule'}, {'type': 'string', 'name': 'gslbservicetype', 'description': 'GSLB service type'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}], 'description': 'Creates a global load balancer rule'}, 'portableiprange': {'name': 'createPortableIpRange', 'related': ['listPortableIpRanges'], 'isasync': True, 'params': [{'name': 'gateway', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway for the portable IP range'}, {'name': 'endip', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IP address in the portable IP range'}, {'name': 'regionid', 'required': True, 'related': ['addRegion', 'updateRegion', 'listRegions'], 'length': 255, 'type': 'integer', 'description': 'Id of the Region'}, {'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'VLAN id, if not specified defaulted to untagged'}, {'name': 'startip', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the beginning IP address in the portable IP range'}, {'name': 'netmask', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask of the portable IP range'}], 'requiredparams': ['gateway', 'endip', 'regionid', 'startip', 'netmask'], 'response': [{'type': 'string', 'name': 'endip', 'description': 'the end ip of the portable IP range'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the VLAN IP range'}, {'type': 'integer', 'name': 'regionid', 'description': 'Region Id in which portable ip range is provisioned'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the portable IP range'}, {'type': 'string', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'description': 'List of portable IP and association with zone/network/vpc details that are part of GSLB rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'accountid', 'description': 'the account ID the portable IP address is associated with'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the ip belongs to'}, {'type': 'string', 'name': 'state', 'description': 'State of the ip address. Can be: Allocatin, Allocated and Releasing'}, {'type': 'date', 'name': 'allocated', 'description': 'date the portal IP address was acquired'}, {'type': 'integer', 'name': 'regionid', 'description': 'Region Id in which global load balancer is created'}, {'type': 'string', 'name': 'ipaddress', 'description': 'public IP address'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the Network where ip belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID the portable IP address is associated with'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'portableipaddress'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the VLAN IP range'}, {'type': 'string', 'name': 'id', 'description': 'portable IP range ID'}], 'description': "adds a range of portable public IP's to a region"}, 'serviceoffering': {'name': 'createServiceOffering', 'related': ['listServiceOfferings'], 'isasync': False, 'params': [{'name': 'cpunumber', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the CPU number of the service offering'}, {'name': 'provisioningtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'name': 'maxiops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'max iops of the compute offering'}, {'name': 'deploymentplanner', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The deployment planner heuristics used to deploy a VM of this offering. If null, value of global config vm.deployment.planner is used'}, {'name': 'networkrate', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'data transfer rate in megabits per second allowed. Supported only for non-System offering and system offerings having "domainrouter" systemvmtype'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the service offering'}, {'name': 'iopswriterate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'io requests write rate of the disk offering'}, {'name': 'bytesreadrate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'bytes read rate of the disk offering'}, {'name': 'hypervisorsnapshotreserve', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'name': 'offerha', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'the HA for the service offering'}, {'name': 'memory', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the total memory of the service offering in MB'}, {'name': 'issystem', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'is this a system vm offering'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the containing domain, null for public offerings'}, {'name': 'customizediops', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'whether compute offering iops is custom or not'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the tags for this service offering.'}, {'name': 'cpuspeed', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the CPU speed of the service offering in MHz.'}, {'name': 'systemvmtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the system VM type. Possible types are "domainrouter", "consoleproxy" and "secondarystoragevm".'}, {'name': 'serviceofferingdetails', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'details for planner, used to store specific parameters'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the service offering'}, {'name': 'isvolatile', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the virtual machine needs to be volatile so that on every reboot of VM, original root disk is dettached then destroyed and a fresh root disk is created and attached to VM'}, {'name': 'limitcpuuse', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'restrict the CPU usage to committed service offering'}, {'name': 'iopsreadrate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'io requests read rate of the disk offering'}, {'name': 'storagetype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the storage type of the service offering. Values are local and shared.'}, {'name': 'hosttags', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the host tag for this service offering.'}, {'name': 'miniops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'min iops of the compute offering'}, {'name': 'byteswriterate', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'bytes write rate of the disk offering'}], 'requiredparams': ['displaytext', 'name'], 'response': [{'type': 'map', 'name': 'serviceofferingdetails', 'description': 'additional key/value details tied with this service offering'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the service offering'}, {'type': 'boolean', 'name': 'offerha', 'description': 'the ha support in the service offering'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the clock rate CPU speed in Mhz'}, {'type': 'boolean', 'name': 'limitcpuuse', 'description': 'restrict the CPU usage to committed service offering'}, {'type': 'boolean', 'name': 'defaultuse', 'description': 'is this a  default system vm offering'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory in MB'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of CPU'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the service offering.'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the service offering'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'type': 'boolean', 'name': 'issystem', 'description': 'is this a system vm offering'}, {'type': 'long', 'name': 'miniops', 'description': 'the min iops of the disk offering'}, {'type': 'string', 'name': 'storagetype', 'description': 'the storage type for this service offering'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'is this a the systemvm type for system vm offering'}, {'type': 'boolean', 'name': 'iscustomizediops', 'description': 'true if disk offering uses custom iops, false otherwise'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the service offering'}, {'type': 'long', 'name': 'maxiops', 'description': 'the max iops of the disk offering'}, {'type': 'boolean', 'name': 'iscustomized', 'description': 'is true if the offering is customized'}, {'type': 'integer', 'name': 'hypervisorsnapshotreserve', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'type': 'boolean', 'name': 'isvolatile', 'description': 'true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk'}, {'type': 'integer', 'name': 'networkrate', 'description': 'data transfer rate in megabits per second allowed.'}, {'type': 'date', 'name': 'created', 'description': 'the date this service offering was created'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the service offering'}, {'type': 'string', 'name': 'deploymentplanner', 'description': 'deployment strategy used to deploy VM.'}, {'type': 'string', 'name': 'name', 'description': 'the name of the service offering'}, {'type': 'string', 'name': 'domain', 'description': 'Domain name for the offering'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the service offering'}, {'type': 'string', 'name': 'id', 'description': 'the id of the service offering'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the service offering'}, {'type': 'string', 'name': 'hosttags', 'description': 'the host tag for the service offering'}], 'description': 'Creates a service offering.'}, 'template': {'name': 'createTemplate', 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': True, 'params': [{'name': 'snapshotid', 'required': False, 'related': ['revertSnapshot', 'listSnapshots', 'createSnapshot'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the snapshot the template is being created from. Either this parameter, or volumeId has to be passed in'}, {'name': 'virtualmachineid', 'required': False, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'Optional, VM ID. If this presents, it is going to create a baremetal template for VM this ID refers to. This is only for VM whose hypervisor type is BareMetal'}, {'name': 'bits', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': '32 or 64 bit'}, {'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Optional, only for baremetal hypervisor. The directory name where template stored on CIFS server'}, {'name': 'passwordenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template supports the password reset feature; default is false'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'create template for the project'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Template details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61'}, {'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this template is a public template, false otherwise'}, {'name': 'requireshvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template requres HVM, false otherwise'}, {'name': 'templatetag', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the tag for this template.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the template'}, {'name': 'isfeatured', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this template is a featured template, false otherwise'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the display text of the template. This is usually used for display purposes.'}, {'name': 'volumeid', 'required': False, 'related': ['updateVolume', 'createVolume', 'attachVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'migrateVolume', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume the template is being created from. Either this parameter, or snapshotId has to be passed in'}, {'name': 'isdynamicallyscalable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'name': 'ostypeid', 'required': True, 'related': ['listOsTypes', 'updateGuestOs', 'addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the OS Type that best represents the OS of this template.'}], 'requiredparams': ['name', 'displaytext', 'ostypeid'], 'response': [{'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}], 'description': 'Creates a template of a virtual machine. The virtual machine must be in a STOPPED state. A template created from this command is automatically designated as a private template visible to the account that created it.'}, 'vpngateway': {'name': 'createVpnGateway', 'related': ['updateVpnGateway'], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpn to the end user or not'}, {'name': 'vpcid', 'required': True, 'related': ['updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'public ip address id of the vpn gateway'}], 'requiredparams': ['vpcid'], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpn gateway for display to the regular user'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'id', 'description': 'the vpn gateway ID'}, {'type': 'string', 'name': 'vpcid', 'description': 'the vpc id of this gateway'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}], 'description': 'Creates site to site vpn local gateway'}, 'networkacllist': {'name': 'createNetworkACLList', 'related': [], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the list to the end user or not'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the network ACL list'}, {'name': 'description', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Description of the network ACL list'}, {'name': 'vpcid', 'required': True, 'related': ['updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'ID of the VPC associated with this network ACL list'}], 'requiredparams': ['name', 'vpcid'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the Name of the ACL'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the ACL'}, {'type': 'string', 'name': 'description', 'description': 'Description of the ACL'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is ACL for display to the regular user'}, {'type': 'string', 'name': 'vpcid', 'description': 'Id of the VPC this ACL is associated with'}], 'description': 'Creates a network ACL for the given VPC'}, 'autoscalevmgroup': {'name': 'createAutoScaleVmGroup', 'related': ['disableAutoScaleVmGroup', 'enableAutoScaleVmGroup', 'updateAutoScaleVmGroup'], 'isasync': True, 'params': [{'name': 'scaledownpolicyids', 'required': True, 'related': ['updateAutoScalePolicy', 'createAutoScalePolicy'], 'length': 255, 'type': 'list', 'description': 'list of scaledown autoscale policies'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the group to the end user or not'}, {'name': 'minmembers', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.'}, {'name': 'maxmembers', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.'}, {'name': 'interval', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the frequency at which the conditions have to be evaluated'}, {'name': 'scaleuppolicyids', 'required': True, 'related': ['updateAutoScalePolicy', 'createAutoScalePolicy'], 'length': 255, 'type': 'list', 'description': 'list of scaleup autoscale policies'}, {'name': 'lbruleid', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}, {'name': 'vmprofileid', 'required': True, 'related': ['listAutoScaleVmProfiles'], 'length': 255, 'type': 'uuid', 'description': 'the autoscale profile that contains information about the vms in the vm group.'}], 'requiredparams': ['scaledownpolicyids', 'minmembers', 'maxmembers', 'scaleuppolicyids', 'lbruleid', 'vmprofileid'], 'response': [{'type': 'int', 'name': 'interval', 'description': 'the frequency at which the conditions have to be evaluated'}, {'type': 'list', 'name': 'scaledownpolicies', 'description': 'list of scaledown autoscale policies'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'state', 'description': 'the current state of the AutoScale Vm Group'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is group for display to the regular user'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale vm group ID'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {'type': 'int', 'name': 'maxmembers', 'description': 'the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'int', 'name': 'minmembers', 'description': 'the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}, {'type': 'list', 'name': 'scaleuppolicies', 'description': 'list of scaleup autoscale policies'}, {'type': 'string', 'name': 'vmprofileid', 'description': 'the autoscale profile that contains information about the vms in the vm group.'}], 'description': 'Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.'}, 'vpnconnection': {'name': 'createVpnConnection', 'related': ['updateVpnConnection', 'listVpnConnections', 'resetVpnConnection'], 'isasync': True, 'params': [{'name': 'passive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'connection is passive or not'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpn to the end user or not'}, {'name': 's2svpngatewayid', 'required': True, 'related': ['createVpnGateway', 'listVpnGateways', 'updateVpnGateway'], 'length': 255, 'type': 'uuid', 'description': 'id of the vpn gateway'}, {'name': 's2scustomergatewayid', 'required': True, 'related': ['updateVpnCustomerGateway', 'createVpnCustomerGateway', 'listVpnCustomerGateways'], 'length': 255, 'type': 'uuid', 'description': 'id of the customer gateway'}], 'requiredparams': ['s2svpngatewayid', 's2scustomergatewayid'], 'response': [{'type': 'string', 'name': 'esppolicy', 'description': 'ESP policy of the customer gateway'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'boolean', 'name': 'passive', 'description': 'State of vpn connection'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 's2svpngatewayid', 'description': 'the vpn gateway ID'}, {'type': 'long', 'name': 'esplifetime', 'description': 'Lifetime of ESP SA of customer gateway'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'string', 'name': 's2scustomergatewayid', 'description': 'the customer gateway ID'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'ipsecpsk', 'description': 'IPsec Preshared-Key of the customer gateway'}, {'type': 'string', 'name': 'state', 'description': 'State of vpn connection'}, {'type': 'string', 'name': 'gateway', 'description': 'public ip address id of the customer gateway'}, {'type': 'string', 'name': 'id', 'description': 'the connection ID'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is connection for display to the regular user'}, {'type': 'string', 'name': 'cidrlist', 'description': 'guest cidr list of the customer gateway'}, {'type': 'long', 'name': 'ikelifetime', 'description': 'Lifetime of IKE SA of customer gateway'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address'}, {'type': 'string', 'name': 'ikepolicy', 'description': 'IKE policy of the customer gateway'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'boolean', 'name': 'dpd', 'description': 'if DPD is enabled for customer gateway'}], 'description': 'Create site to site vpn connection'}, 'networkacl': {'name': 'createNetworkACL', 'related': [], 'isasync': True, 'params': [{'name': 'traffictype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the traffic type for the ACL,can be ingress or egress, defaulted to ingress if not specified'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the CIDR list to allow traffic from/to'}, {'name': 'endport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the ending port of ACL'}, {'name': 'aclid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'The network of the VM the ACL will be created for'}, {'name': 'number', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'The network of the VM the ACL will be created for'}, {'name': 'action', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'scl entry action, allow or deny'}, {'name': 'networkid', 'required': False, 'related': ['listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The network of the VM the ACL will be created for'}, {'name': 'startport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the starting port of ACL'}, {'name': 'icmptype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'type of the ICMP message being sent'}, {'name': 'protocol', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number'}, {'name': 'icmpcode', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'error code for this ICMP message'}], 'requiredparams': ['protocol'], 'response': [{'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type for the ACL'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'description': 'the list of resource tags associated with the network ACLs', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'integer', 'name': 'number', 'description': 'Number of the ACL Item'}, {'type': 'string', 'name': 'action', 'description': 'Action of ACL Item. Allow/Deny'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the ACL'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of ACL's port range"}, {'type': 'string', 'name': 'aclid', 'description': 'the ID of the ACL this item belongs to'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the ACL Item'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of ACL's port range"}], 'description': 'Creates a ACL rule in the given network (the network has to belong to VPC)'}, 'storagepool': {'name': 'createStoragePool', 'related': ['findStoragePoolsForMigration', 'listStoragePools'], 'isasync': False, 'params': [{'name': 'managed', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'whether the storage should be managed by CloudStack'}, {'name': 'capacitybytes', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'bytes CloudStack can provision from this storage pool'}, {'name': 'clusterid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the cluster ID for the storage pool'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name for the storage pool'}, {'name': 'podid', 'required': False, 'related': ['createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID for the storage pool'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'hypervisor type of the hosts in zone that will be attached to this storage pool. KVM, VMware supported as of now.'}, {'name': 'provider', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the storage provider name'}, {'name': 'capacityiops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'the details for the storage pool'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the tags for the storage pool'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the storage pool'}, {'name': 'scope', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the scope of the storage: cluster or zone'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL of the storage pool'}], 'requiredparams': ['name', 'zoneid', 'url'], 'response': [{'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster for the storage pool'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the storage pool'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the storage pool'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the storage pool'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the storage pool was created'}, {'type': 'string', 'name': 'type', 'description': 'the storage pool type'}, {'type': 'string', 'name': 'path', 'description': 'the storage pool path'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster for the storage pool'}, {'type': 'long', 'name': 'capacityiops', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'type': 'map', 'name': 'storagecapabilities', 'description': 'the storage pool capabilities'}, {'type': 'string', 'name': 'name', 'description': 'the name of the storage pool'}, {'type': 'string', 'name': 'overprovisionfactor', 'description': 'the overprovisionfactor for the storage pool'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the storage pool'}, {'type': 'long', 'name': 'disksizeused', 'description': "the host's currently used disk size"}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the storage pool'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the storage pool'}, {'type': 'storagepoolstatus', 'name': 'state', 'description': 'the state of the storage pool'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this pool is suitable to migrate a volume, false otherwise'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the storage pool'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the storage pool'}, {'type': 'string', 'name': 'scope', 'description': 'the scope of the storage pool'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor type of the storage pool'}], 'description': 'Creates a storage pool.'}, 'vmsnapshot': {'name': 'createVMSnapshot', 'related': ['listVMSnapshot'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the vm'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The display name of the snapshot'}, {'name': 'quiescevm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'quiesce vm if true'}, {'name': 'snapshotmemory', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'snapshot memory if true'}, {'name': 'description', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The description of the snapshot'}], 'requiredparams': ['virtualmachineid'], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'string', 'name': 'description', 'description': 'the description of the vm snapshot'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the vm snapshot'}, {'type': 'string', 'name': 'parentName', 'description': 'the parent displayName of the vm snapshot'}, {'type': 'date', 'name': 'created', 'description': 'the create date of the vm snapshot'}, {'type': 'string', 'name': 'name', 'description': 'the name of the vm snapshot'}, {'type': 'string', 'name': 'parent', 'description': 'the parent ID of the vm snapshot'}, {'type': 'state', 'name': 'state', 'description': 'the state of the vm snapshot'}, {'type': 'string', 'name': 'type', 'description': 'VM Snapshot type'}, {'type': 'string', 'name': 'displayname', 'description': 'the display name of the vm snapshot'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the vm ID of the vm snapshot'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'boolean', 'name': 'current', 'description': 'indiates if this is current snapshot'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the vm snapshot'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}], 'description': 'Creates snapshot for a vm.'}, 'tags': {'name': 'createTags', 'related': [], 'isasync': True, 'params': [{'name': 'customer', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "identifies client specific tag. When the value is not null, the tag can't be used by cloudStack code internally"}, {'name': 'resourceids', 'required': True, 'related': [], 'length': 255, 'type': 'list', 'description': 'list of resources to create the tags for'}, {'name': 'tags', 'required': True, 'related': [], 'length': 255, 'type': 'map', 'description': 'Map of tags (key/value pairs)'}, {'name': 'resourcetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of the resource'}], 'requiredparams': ['resourceids', 'tags', 'resourcetype'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Creates resource tag(s)'}, 'staticroute': {'name': 'createStaticRoute', 'related': ['listStaticRoutes'], 'isasync': True, 'params': [{'name': 'cidr', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'static route cidr'}, {'name': 'gatewayid', 'required': True, 'related': ['createPrivateGateway'], 'length': 255, 'type': 'uuid', 'description': 'the gateway id we are creating static route for'}], 'requiredparams': ['cidr', 'gatewayid'], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the static route'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the static route'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the static route belongs to'}, {'description': 'the list of resource tags associated with static route', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'static route CIDR'}, {'type': 'string', 'name': 'state', 'description': 'the state of the static route'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the static route'}, {'type': 'string', 'name': 'id', 'description': 'the ID of static route'}, {'type': 'string', 'name': 'gatewayid', 'description': 'VPC gateway the route is created for'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the static route'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the static route'}], 'description': 'Creates a static route'}, 'volume': {'name': 'createVolume', 'related': ['createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': True, 'params': [{'name': 'diskofferingid', 'required': False, 'related': ['createDiskOffering'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk offering. Either diskOfferingId or snapshotId must be passed in.'}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'the project associated with the volume. Mutually exclusive with account parameter'}, {'name': 'miniops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'min iops'}, {'name': 'snapshotid', 'required': False, 'related': ['revertSnapshot', 'createSnapshot'], 'length': 255, 'type': 'uuid', 'description': 'the snapshot ID for the disk volume. Either diskOfferingId or snapshotId must be passed in.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account associated with the disk volume. Must be used with the domainId parameter.'}, {'name': 'displayvolume', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to display the volume to the end user or not.'}, {'name': 'maxiops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'max iops'}, {'name': 'virtualmachineid', 'required': False, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine; to be used with snapshot Id, VM to which the volume gets attached after creation'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID associated with the disk offering. If used with the account parameter returns the disk volume associated with the account for the specified domain.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the disk volume'}, {'name': 'size', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Arbitrary volume size'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the availability zone'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['name'], 'response': [{'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}], 'description': 'Creates a disk volume from a disk offering. This disk volume must still be attached to a virtual machine to make use of it.'}, 'user': {'name': 'createUser', 'related': ['disableUser', 'getUser', 'lockUser', 'updateUser', 'listUsers'], 'isasync': False, 'params': [{'name': 'account', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Creates the user under the specified account. If no account is specified, the username will be used as the account name.'}, {'name': 'timezone', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.'}, {'name': 'firstname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'firstname'}, {'name': 'userid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'User UUID, required for adding account from external provisioning system'}, {'name': 'email', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'email'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Unique username.'}, {'name': 'lastname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'lastname'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'Creates the user under the specified domain. Has to be accompanied with the account parameter'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.'}], 'requiredparams': ['account', 'firstname', 'email', 'username', 'lastname', 'password'], 'response': [{'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}], 'description': 'Creates a user for an account that already exists'}, 'vpc': {'name': 'createVPC', 'related': ['updateVPC', 'listVPCs', 'createVPC', 'listVPCs', 'restartVPC'], 'isasync': True, 'params': [{'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'create VPC for the project'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account associated with the VPC. Must be used with the domainId parameter.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the VPC'}, {'name': 'vpcofferingid', 'required': True, 'related': ['listVPCOfferings'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the VPC offering'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'VPC network domain. All networks inside the VPC will belong to this domain'}, {'name': 'start', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "If set to false, the VPC won't start (VPC VR will not get allocated) until its first network gets implemented. True by default."}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the VPC'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpc to the end user or not'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID associated with the VPC. If used with the account parameter returns the VPC associated with the account for the specified domain.'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the availability zone'}, {'name': 'cidr', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': "the cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR"}], 'requiredparams': ['name', 'vpcofferingid', 'displaytext', 'zoneid', 'cidr'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the VPC.'}, {'type': 'string', 'name': 'id', 'description': 'the id of the VPC'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the VPC'}, {'type': 'string', 'name': 'state', 'description': 'state of the VPC. Can be Inactive/Enabled'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'boolean', 'name': 'regionlevelvpc', 'description': 'true if VPC is region level'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpc for display to the regular user'}, {'type': 'date', 'name': 'created', 'description': 'the date this VPC was created'}, {'description': 'the list of networks belongign to the VPC', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}], 'name': 'provider'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}], 'name': 'network'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the vpc'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the VPC'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true VPC requires restart'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the VPC'}, {'type': 'boolean', 'name': 'redundantvpcrouter', 'description': 'if this VPC has redundant router'}, {'type': 'string', 'name': 'vpcofferingid', 'description': 'vpc offering id the VPC is created from'}, {'type': 'boolean', 'name': 'distributedvpcrouter', 'description': "is VPC uses distributed router for one hop forwarding and host based network ACL's"}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the VPC owner'}, {'type': 'string', 'name': 'cidr', 'description': 'the cidr the VPC'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain of the VPC'}, {'description': 'the list of resource tags associated with the project', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the VPC belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the name of the VPC'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}], 'name': 'service'}], 'description': 'Creates a VPC'}, 'storagenetworkiprange': {'name': 'createStorageNetworkIpRange', 'related': ['updateStorageNetworkIpRange', 'listStorageNetworkIpRange'], 'isasync': True, 'params': [{'name': 'startip', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the beginning IP address'}, {'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Optional. The vlan the ip range sits on, default to Null when it is not specificed which means you network is not on any Vlan. This is mainly for Vmware as other hypervisors can directly reterive bridge from pyhsical network traffic type table'}, {'name': 'podid', 'required': True, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'UUID of pod where the ip range belongs to'}, {'name': 'endip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IP address'}, {'name': 'netmask', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask for storage network'}, {'name': 'gateway', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway for storage network'}], 'requiredparams': ['startip', 'podid', 'netmask', 'gateway'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the uuid of storage network IP range.'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone uuid of the storage network IP range'}, {'type': 'string', 'name': 'networkid', 'description': 'the network uuid of storage network IP range'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod uuid for the storage network IP range'}, {'type': 'integer', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'type': 'string', 'name': 'endip', 'description': 'the end ip of the storage network IP range'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the storage network IP range'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the storage network IP range'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the storage network IP range'}], 'description': 'Creates a Storage network IP range.'}, 'condition': {'name': 'createCondition', 'related': ['listConditions'], 'isasync': True, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account of the condition. Must be used with the domainId parameter.'}, {'name': 'threshold', 'required': True, 'related': [], 'length': 255, 'type': 'long', 'description': 'Threshold value.'}, {'name': 'relationaloperator', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Relational Operator to be used with threshold.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID of the account.'}, {'name': 'counterid', 'required': True, 'related': ['createCounter', 'listCounters'], 'length': 255, 'type': 'uuid', 'description': 'ID of the Counter.'}], 'requiredparams': ['threshold', 'relationaloperator', 'counterid'], 'response': [{'type': 'string', 'name': 'account', 'description': 'the owner of the Condition.'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of counter'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the Condition owner'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the Condition'}, {'type': 'long', 'name': 'threshold', 'description': 'Threshold Value for the counter.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the Condition.'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner.'}, {'type': 'list', 'name': 'counter', 'description': 'Details of the Counter.'}, {'type': 'string', 'name': 'relationaloperator', 'description': 'Relational Operator to be used with threshold.'}, {'type': 'string', 'name': 'id', 'description': 'the id of the Condition'}], 'description': 'Creates a condition'}, 'autoscalevmprofile': {'name': 'createAutoScaleVmProfile', 'related': ['listAutoScaleVmProfiles', 'updateAutoScaleVmProfile'], 'isasync': True, 'params': [{'name': 'serviceofferingid', 'required': True, 'related': ['listServiceOfferings', 'createServiceOffering', 'updateServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'the service offering of the auto deployed virtual machine'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'availability zone for the auto deployed virtual machine'}, {'name': 'counterparam', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161'}, {'name': 'destroyvmgraceperiod', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the time allowed for existing connections to get closed before a vm is destroyed'}, {'name': 'templateid', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the template of the auto deployed virtual machine'}, {'name': 'autoscaleuserid', 'required': False, 'related': ['enableUser', 'disableUser', 'getUser', 'lockUser', 'updateUser', 'createUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the user used to launch and destroy the VMs'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the profile to the end user or not'}, {'name': 'otherdeployparams', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'parameters other than zoneId/serviceOfferringId/templateId of the auto deployed virtual machine'}], 'requiredparams': ['serviceofferingid', 'zoneid', 'templateid'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the autoscale vm profile ID'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {'type': 'string', 'name': 'zoneid', 'description': 'the availability zone to be used while deploying a virtual machine'}, {}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is profile for display to the regular user'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the service offering to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'autoscaleuserid', 'description': 'the ID of the user used to launch and destroy the VMs'}, {'type': 'string', 'name': 'templateid', 'description': 'the template to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'otherdeployparams', 'description': 'parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {'type': 'integer', 'name': 'destroyvmgraceperiod', 'description': 'the time allowed for existing connections to get closed before a vm is destroyed'}, {}], 'description': 'Creates a profile that contains information about the virtual machine which will be provisioned automatically by autoscale feature.'}, 'affinitygroup': {'name': 'createAffinityGroup', 'related': ['listAffinityGroups'], 'isasync': True, 'params': [{'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the affinity group'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'domainId of the account owning the affinity group'}, {'name': 'description', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'optional description of the affinity group'}, {'name': 'type', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Type of the affinity group from the available affinity/anti-affinity group types'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an account for the affinity group. Must be used with domainId.'}], 'requiredparams': ['name', 'type'], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}], 'description': 'Creates an affinity/anti-affinity group'}, 'account': {'name': 'createAccount', 'related': ['disableAccount', 'listAccounts', 'listAccounts', 'markDefaultZoneForAccount'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Creates the user under the specified account. If no account is specified, the username will be used as the account name.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Unique username.'}, {'name': 'email', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'email'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'Creates the user under the specified domain.'}, {'name': 'accountdetails', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'details for account used to store specific parameters'}, {'name': 'accounttype', 'required': True, 'related': [], 'length': 255, 'type': 'short', 'description': 'Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin'}, {'name': 'firstname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'firstname'}, {'name': 'lastname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'lastname'}, {'name': 'accountid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Account UUID, required for adding account from external provisioning system'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "Network domain for the account's networks"}, {'name': 'userid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'User UUID, required for adding account from external provisioning system'}, {'name': 'timezone', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.'}], 'requiredparams': ['username', 'email', 'password', 'accounttype', 'firstname', 'lastname'], 'response': [{'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}], 'name': 'user'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}], 'description': 'Creates an account'}, 'firewallrule': {'name': 'createFirewallRule', 'related': ['listEgressFirewallRules'], 'isasync': True, 'params': [{'name': 'ipaddressid', 'required': True, 'related': ['associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the IP address id of the port forwarding rule'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of firewallrule: system/user'}, {'name': 'startport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the starting port of firewall rule'}, {'name': 'protocol', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.'}, {'name': 'endport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the ending port of firewall rule'}, {'name': 'icmpcode', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'error code for this icmp message'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the CIDR list to forward traffic from'}, {'name': 'icmptype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'type of the ICMP message being sent'}], 'requiredparams': ['ipaddressid', 'protocol'], 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the firewall rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of the firewall rule'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of firewall rule's port range"}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the firewall rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the firewall rule'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of firewall rule's port range"}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the firewall rule'}], 'description': 'Creates a firewall rule for a given IP address'}, 'networkoffering': {'name': 'createNetworkOffering', 'related': ['updateNetworkOffering'], 'isasync': False, 'params': [{'name': 'servicecapabilitylist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'desired service capabilities as part of network offering'}, {'name': 'egressdefaultpolicy', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if guest network default egress policy is allow; false if default egress policy is deny'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the network offering'}, {'name': 'tags', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the tags for the network offering.'}, {'name': 'maxconnections', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'maximum number of concurrent connections supported by the network offering'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Network offering details in key/value pairs. Supported keys are internallbprovider/publiclbprovider with service provider as a value'}, {'name': 'serviceofferingid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the service offering ID used by virtual router provider'}, {'name': 'keepaliveenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true keepalive will be turned on in the loadbalancer. At the time of writing this has only an effect on haproxy; the mode http and httpclose options are unset in the haproxy conf file.'}, {'name': 'availability', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the availability of network offering. Default value is Optional'}, {'name': 'specifyvlan', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if network offering supports vlans'}, {'name': 'networkrate', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'data transfer rate in megabits per second allowed'}, {'name': 'serviceproviderlist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network'}, {'name': 'guestiptype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'guest type of the network offering: Shared or Isolated'}, {'name': 'supportedservices', 'required': True, 'related': [], 'length': 255, 'type': 'list', 'description': 'services supported by the network offering'}, {'name': 'traffictype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the traffic type for the network offering. Supported type in current release is GUEST only'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the network offering'}, {'name': 'specifyipranges', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if network offering supports specifying ip ranges; defaulted to false if not specified'}, {'name': 'conservemode', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the network offering is IP conserve mode enabled'}, {'name': 'ispersistent', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if network offering supports persistent networks; defaulted to false if not specified'}], 'requiredparams': ['name', 'guestiptype', 'supportedservices', 'traffictype', 'displaytext'], 'response': [{'type': 'boolean', 'name': 'forvpc', 'description': 'true if network offering can be used by VPC networks only'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network offering'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.'}, {'type': 'integer', 'name': 'maxconnections', 'description': 'maximum number of concurrents connections to be handled by lb'}, {'type': 'string', 'name': 'guestiptype', 'description': 'guest type of the network offering, can be Shared or Isolated'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network offering supports specifying ip ranges, false otherwise'}, {'type': 'integer', 'name': 'networkrate', 'description': 'data transfer rate in megabits per second allowed.'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the network offering.'}, {'type': 'boolean', 'name': 'specifyvlan', 'description': 'true if network offering supports vlans, false otherwise'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering used by virtual router provider'}, {'type': 'boolean', 'name': 'conservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network offering'}, {'type': 'boolean', 'name': 'supportsstrechedl2subnet', 'description': 'true if network offering supports network that span multiple zones'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network offering is default, false otherwise'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'string', 'name': 'availability', 'description': 'availability of the network offering'}, {'type': 'boolean', 'name': 'egressdefaultpolicy', 'description': 'true if guest network default egress policy is allow; false if default egress policy is deny'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with network offering'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the network offering'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'true if network offering supports persistent networks, false otherwise'}, {'type': 'string', 'name': 'state', 'description': 'state of the network offering. Can be Disabled/Enabled/Inactive'}, {'type': 'date', 'name': 'created', 'description': 'the date this network offering was created'}], 'description': 'Creates a network offering.'}, 'vlaniprange': {'name': 'createVlanIpRange', 'related': ['listVlanIpRanges', 'dedicatePublicIpRange'], 'isasync': False, 'params': [{'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ID or VID of the VLAN. If not specified, will be defaulted to the vlan of the network or if vlan of the network is null - to Untagged'}, {'name': 'forvirtualnetwork', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if VLAN is of Virtual type, false if Direct'}, {'name': 'gateway', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway of the VLAN IP range'}, {'name': 'startipv6', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the beginning IPv6 address in the IPv6 network range'}, {'name': 'podid', 'required': False, 'related': ['createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'optional parameter. Have to be specified for Direct Untagged vlan only.'}, {'name': 'ip6gateway', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway of the IPv6 network. Required for Shared networks and Isolated networks when it belongs to VPC'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'domain ID of the account owning a VLAN'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the physical network id'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'project who will own the VLAN. If VLAN is Zone wide, this parameter should be ommited'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'account who will own the VLAN. If VLAN is Zone wide, this parameter should be ommited'}, {'name': 'endipv6', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IPv6 address in the IPv6 network range'}, {'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the network id'}, {'name': 'ip6cidr', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the CIDR of IPv6 network, must be at least /64'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID of the VLAN IP range'}, {'name': 'startip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the beginning IP address in the VLAN IP range'}, {'name': 'netmask', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask of the VLAN IP range'}, {'name': 'endip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IP address in the VLAN IP range'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the VLAN IP range'}, {'type': 'string', 'name': 'account', 'description': 'the account of the VLAN IP range'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vlan range'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name for the VLAN IP range'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the VLAN IP range'}, {'type': 'string', 'name': 'endipv6', 'description': 'the end ipv6 of the VLAN IP range'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the VLAN IP range'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the VLAN IP range'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the VLAN IP range'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the VLAN IP range'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vlan range'}, {'type': 'string', 'name': 'endip', 'description': 'the end ip of the VLAN IP range'}, {'type': 'string', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'startipv6', 'description': 'the start ipv6 of the VLAN IP range'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of vlan range'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the VLAN IP range'}, {'type': 'string', 'name': 'description', 'description': 'the description of the VLAN IP range'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the VLAN IP range'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the VLAN IP range'}], 'description': 'Creates a VLAN IP range.'}, 'internalloadbalancerelement': {'name': 'createInternalLoadBalancerElement', 'related': ['configureInternalLoadBalancerElement'], 'isasync': True, 'params': [{'name': 'nspid', 'required': True, 'related': ['addNetworkServiceProvider', 'listTrafficTypes', 'updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'the network service provider ID of the internal load balancer element'}], 'requiredparams': ['nspid'], 'response': [{'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the element'}, {'type': 'string', 'name': 'id', 'description': 'the id of the internal load balancer element'}, {'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the element'}], 'description': 'Create an Internal Load Balancer element.'}, 'counter': {'name': 'createCounter', 'related': [], 'isasync': True, 'params': [{'name': 'value', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Value of the counter e.g. oid in case of snmp.'}, {'name': 'source', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Source of the counter.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the counter.'}], 'requiredparams': ['value', 'source', 'name'], 'response': [{'type': 'string', 'name': 'value', 'description': 'Value in case of snmp or other specific counters.'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of counter'}, {'type': 'string', 'name': 'source', 'description': 'Source of the counter.'}, {'type': 'string', 'name': 'name', 'description': 'Name of the counter.'}, {'type': 'string', 'name': 'id', 'description': 'the id of the Counter'}], 'description': 'Adds metric counter'}, 'lbhealthcheckpolicy': {'name': 'createLBHealthCheckPolicy', 'related': ['updateLBHealthCheckPolicy'], 'isasync': True, 'params': [{'name': 'unhealthythreshold', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Number of consecutive health check failures before declaring an instance unhealthy'}, {'name': 'intervaltime', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Amount of time between health checks (1 sec - 20940 sec)'}, {'name': 'responsetimeout', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Time to wait when receiving a response from the health check (2sec - 60 sec)'}, {'name': 'description', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the description of the load balancer health check policy'}, {'name': 'healthythreshold', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Number of consecutive health check success before declaring an instance healthy'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'pingpath', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'HTTP ping path'}, {'name': 'lbruleid', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}], 'requiredparams': ['lbruleid'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the HealthCheck policy'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the HealthCheck policy belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account of the HealthCheck policy'}, {'description': 'the list of healthcheckpolicies', 'type': 'list', 'response': [{'type': 'int', 'name': 'unhealthcheckthresshold', 'description': 'Number of consecutive health check failures before declaring an instance unhealthy.'}, {'type': 'int', 'name': 'healthcheckthresshold', 'description': 'Number of consecutive health check success before declaring an instance healthy'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is policy for display to the regular user'}, {'type': 'string', 'name': 'description', 'description': 'the description of the healthcheck policy'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'id', 'description': 'the LB HealthCheck policy ID'}, {'type': 'int', 'name': 'responsetime', 'description': 'Time to wait when receiving a response from the health check'}, {'type': 'int', 'name': 'healthcheckinterval', 'description': 'Amount of time between health checks'}, {'type': 'string', 'name': 'pingpath', 'description': 'the pingpath  of the healthcheck policy'}], 'name': 'healthcheckpolicy'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the HealthCheck policy'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the LB rule ID'}], 'description': 'Creates a load balancer health check policy'}, 'project': {'name': 'createProject', 'related': [], 'isasync': True, 'params': [{'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the project'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'domain ID of the account owning a project'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'account who will be Admin for the project'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'display text of the project'}], 'requiredparams': ['name', 'displaytext'], 'response': [{'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this project'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this project'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this project'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by project'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this project'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this project'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this project to acquire'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this project'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the project can own'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this project'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id the project belongs to'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this project'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this project'}, {'type': 'string', 'name': 'account', 'description': "the account name of the project's owner"}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by project'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this project'}, {'type': 'string', 'name': 'id', 'description': 'the id of the project'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the project'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by project'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this project'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this project'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this project'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by project'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this project'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this project'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this project'}, {'type': 'string', 'name': 'name', 'description': 'the name of the project'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this project'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name where the project belongs to'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this project to acquire'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the project can own'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this project can acquire'}, {'type': 'string', 'name': 'state', 'description': 'the state of the project'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the project can own'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the project can own'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the project can own'}, {'description': 'the list of resource tags associated with vm', 'type': 'list', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this project'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this project'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this project'}], 'description': 'Creates a project'}, 'vpncustomergateway': {'name': 'createVpnCustomerGateway', 'related': ['updateVpnCustomerGateway', 'listVpnCustomerGateways'], 'isasync': True, 'params': [{'name': 'cidrlist', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'guest cidr list of the customer gateway'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account associated with the gateway. Must be used with the domainId parameter.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.'}, {'name': 'esppolicy', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'ESP policy of the customer gateway'}, {'name': 'ikepolicy', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'IKE policy of the customer gateway'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of this customer gateway'}, {'name': 'ipsecpsk', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'IPsec Preshared-Key of the customer gateway'}, {'name': 'dpd', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'If DPD is enabled for VPN connection'}, {'name': 'esplifetime', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Lifetime of phase 2 VPN connection to the customer gateway, in seconds'}, {'name': 'gateway', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'public ip address id of the customer gateway'}, {'name': 'ikelifetime', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Lifetime of phase 1 VPN connection to the customer gateway, in seconds'}], 'requiredparams': ['cidrlist', 'esppolicy', 'ikepolicy', 'ipsecpsk', 'gateway'], 'response': [{'type': 'string', 'name': 'ikepolicy', 'description': 'IKE policy of customer gateway'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'boolean', 'name': 'dpd', 'description': 'if DPD is enabled for customer gateway'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'id', 'description': 'the vpn gateway ID'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'name', 'description': 'name of the customer gateway'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'gateway', 'description': 'public ip address id of the customer gateway'}, {'type': 'string', 'name': 'cidrlist', 'description': 'guest cidr list of the customer gateway'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'string', 'name': 'ipaddress', 'description': 'guest ip of the customer gateway'}, {'type': 'long', 'name': 'esplifetime', 'description': 'Lifetime of ESP SA of customer gateway'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'string', 'name': 'ipsecpsk', 'description': 'IPsec preshared-key of customer gateway'}, {'type': 'long', 'name': 'ikelifetime', 'description': 'Lifetime of IKE SA of customer gateway'}, {'type': 'string', 'name': 'esppolicy', 'description': 'IPsec policy of customer gateway'}], 'description': 'Creates site to site vpn customer gateway'}, 'snapshot': {'name': 'createSnapshot', 'related': ['revertSnapshot'], 'isasync': True, 'params': [{'name': 'quiescevm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'quiesce vm if true'}, {'name': 'policyid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'policy id of the snapshot, if this is null, then use MANUAL_POLICY.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The account of the snapshot. The account parameter must be used with the domainId parameter.'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the snapshot'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'The domain ID of the snapshot. If used with the account parameter, specifies a domain for the account associated with the disk volume.'}, {'name': 'volumeid', 'required': True, 'related': ['createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the disk volume'}], 'requiredparams': ['volumeid'], 'response': [{'type': 'string', 'name': 'volumename', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'id', 'description': 'ID of the snapshot'}, {'type': 'state', 'name': 'state', 'description': 'the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage'}, {'type': 'string', 'name': 'snapshottype', 'description': 'the type of the snapshot'}, {'type': 'string', 'name': 'name', 'description': 'name of the snapshot'}, {'type': 'date', 'name': 'created', 'description': '  the date the snapshot was created'}, {'type': 'string', 'name': 'volumeid', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'volumetype', 'description': 'type of the disk volume'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the snapshot'}, {'type': 'string', 'name': 'domain', 'description': "the domain name of the snapshot's account"}, {'description': 'the list of resource tags associated with snapshot', 'type': 'list', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the snapshot'}, {'type': 'string', 'name': 'domainid', 'description': "the domain ID of the snapshot's account"}, {'type': 'string', 'name': 'zoneid', 'description': 'id of the availability zone'}, {'type': 'string', 'name': 'intervaltype', 'description': 'valid types are hourly, daily, weekly, monthy, template, and none.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the snapshot'}, {'type': 'long', 'name': 'physicalsize', 'description': 'physical size of backedup snapshot on image store'}, {'type': 'boolean', 'name': 'revertable', 'description': 'indicates whether the underlying storage supports reverting the volume to this snapshot'}], 'description': 'Creates an instant snapshot of a volume.'}, 'loadbalancer': {'name': 'createLoadBalancer', 'related': [], 'isasync': True, 'params': [{'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the load balancer'}, {'name': 'sourceipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the source IP address the network traffic will be load balanced from'}, {'name': 'scheme', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the load balancer scheme. Supported value in this release is Internal'}, {'name': 'instanceport', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the TCP port of the virtual machine where the network traffic will be load balanced to'}, {'name': 'algorithm', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'load balancer algorithm (source, roundrobin, leastconn)'}, {'name': 'networkid', 'required': True, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The guest network the load balancer will be created for'}, {'name': 'sourceipaddressnetworkid', 'required': True, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the network id of the source ip address'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'description', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the description of the load balancer'}, {'name': 'sourceport', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the source port the network traffic will be load balanced from'}], 'requiredparams': ['name', 'scheme', 'instanceport', 'algorithm', 'networkid', 'sourceipaddressnetworkid', 'sourceport'], 'response': [{'type': 'string', 'name': 'sourceipaddressnetworkid', 'description': 'Load Balancer source ip network id'}, {'type': 'string', 'name': 'account', 'description': 'the account of the Load Balancer'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Load Balancer'}, {'description': 'the list of instances associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the instance'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the instance'}, {'type': 'string', 'name': 'state', 'description': 'the state of the instance'}, {'type': 'string', 'name': 'id', 'description': 'the instance ID'}], 'name': 'loadbalancerinstance'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the Load Balancer'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the Load Balancer'}, {'type': 'string', 'name': 'sourceipaddress', 'description': 'Load Balancer source ip'}, {'description': 'the list of rules associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'state', 'description': 'the state of the load balancer rule'}, {'type': 'integer', 'name': 'instanceport', 'description': 'instance port of the load balancer rule'}, {'type': 'integer', 'name': 'sourceport', 'description': 'source port of the load balancer rule'}], 'name': 'loadbalancerrule'}, {'type': 'string', 'name': 'id', 'description': 'the Load Balancer ID'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the Load Balancer'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Load Balancer'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'type': 'string', 'name': 'networkid', 'description': 'Load Balancer network id'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'description': 'the list of resource tags associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the Load Balancer'}], 'description': 'Creates a load balancer'}, 'virtualrouterelement': {'name': 'createVirtualRouterElement', 'related': ['configureVirtualRouterElement'], 'isasync': True, 'params': [{'name': 'providertype', 'required': False, 'related': ['addNetworkServiceProvider', 'updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'The provider type. Supported types are VirtualRouter (default) and VPCVirtualRouter'}, {'name': 'nspid', 'required': True, 'related': ['addNetworkServiceProvider', 'updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'the network service provider ID of the virtual router element'}], 'requiredparams': ['nspid'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the provider'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the provider'}, {'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the provider'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the provider'}, {'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the service provider'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}], 'description': 'Create a virtual router element.'}, 'egressfirewallrule': {'name': 'createEgressFirewallRule', 'related': ['listFirewallRules', 'createFirewallRule', 'updateFirewallRule', 'listEgressFirewallRules', 'updateEgressFirewallRule'], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'icmptype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'type of the icmp message being sent'}, {'name': 'endport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the ending port of firewall rule'}, {'name': 'protocol', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.'}, {'name': 'networkid', 'required': True, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the network id of the port forwarding rule'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the cidr list to forward traffic from'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of firewallrule: system/user'}, {'name': 'icmpcode', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'error code for this icmp message'}, {'name': 'startport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the starting port of firewall rule'}], 'requiredparams': ['protocol', 'networkid'], 'response': [{'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the firewall rule'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of firewall rule's port range"}, {'type': 'string', 'name': 'id', 'description': 'the ID of the firewall rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the firewall rule'}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the firewall rule'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of firewall rule's port range"}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of the firewall rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}], 'description': 'Creates a egress firewall rule for a given network '}, 'physicalnetwork': {'name': 'createPhysicalNetwork', 'related': ['listPhysicalNetworks'], 'isasync': True, 'params': [{'name': 'networkspeed', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the speed for the physical network[1G/10G]'}, {'name': 'isolationmethods', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the isolation method for the physical network[VLAN/L3/GRE]'}, {'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the VLAN for the physical network'}, {'name': 'broadcastdomainrange', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the broadcast domain range for the physical network[Pod or Zone]. In Acton release it can be Zone only in Advance zone, and Pod in Basic'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'domain ID of the account owning a physical network'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'Tag the physical network'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the physical network'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the physical network'}], 'requiredparams': ['name', 'zoneid'], 'response': [{'type': 'string', 'name': 'tags', 'description': 'comma separated tag'}, {'type': 'string', 'name': 'broadcastdomainrange', 'description': 'Broadcast domain range of the physical network'}, {'type': 'string', 'name': 'name', 'description': 'name of the physical network'}, {'type': 'string', 'name': 'isolationmethods', 'description': 'isolation methods'}, {'type': 'string', 'name': 'networkspeed', 'description': 'the speed of the physical network'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the physical network'}, {'type': 'string', 'name': 'vlan', 'description': 'the vlan of the physical network'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the physical network owner'}, {'type': 'string', 'name': 'state', 'description': 'state of the physical network'}, {'type': 'string', 'name': 'id', 'description': 'the uuid of the physical network'}], 'description': 'Creates a physical network'}, 'sshkeypair': {'name': 'createSSHKeyPair', 'related': [], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the ssh key. Must be used with domainId.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'an optional project for the ssh key'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the keypair'}], 'requiredparams': ['name'], 'response': [{'type': 'string', 'name': 'privatekey', 'description': 'Private key'}], 'description': 'Create a new keypair and returns the private key'}, 'privategateway': {'name': 'createPrivateGateway', 'related': [], 'isasync': True, 'params': [{'name': 'aclid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network ACL'}, {'name': 'vlan', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the network implementation uri for the private gateway'}, {'name': 'netmask', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask of the Private gateway'}, {'name': 'vpcid', 'required': True, 'related': ['updateVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'the VPC network belongs to'}, {'name': 'networkofferingid', 'required': False, 'related': ['createNetworkOffering', 'updateNetworkOffering'], 'length': 255, 'type': 'uuid', 'description': 'the uuid of the network offering to use for the private gateways network connection'}, {'name': 'sourcenatsupported', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "source NAT supported value. Default value false. If 'true' source NAT is enabled on the private gateway 'false': sourcenat is not supported"}, {'name': 'gateway', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway of the Private gateway'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID the network belongs to'}, {'name': 'ipaddress', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the IP address of the Private gateaway'}], 'requiredparams': ['vlan', 'netmask', 'vpcid', 'gateway', 'ipaddress'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the private gateway'}, {'type': 'string', 'name': 'vlan', 'description': 'the network implementation uri for the private gateway'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id set for private gateway'}, {'type': 'string', 'name': 'id', 'description': 'the id of the private gateway'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the private gateway'}, {'type': 'boolean', 'name': 'sourcenatsupported', 'description': 'Souce Nat enable status'}, {'type': 'string', 'name': 'state', 'description': 'State of the gateway, can be Creating, Ready, Deleting'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the private gateway'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the private gateway'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the private gateway belongs to'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway'}, {'type': 'string', 'name': 'netmask', 'description': "the private gateway's netmask"}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'ipaddress', 'description': "the private gateway's ip address"}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the private gateaway belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the private gateway'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the private gateway'}], 'description': 'Creates a private gateway'}, 'serviceinstance': {'name': 'createServiceInstance', 'related': [], 'isasync': True, 'params': [{'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'Availability zone for the service instance'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'The name of the service instance'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'Project ID for the service instance'}, {'name': 'leftnetworkid', 'required': True, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The left (inside) network for service instance'}, {'name': 'rightnetworkid', 'required': True, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The right (outside) network ID for the service instance'}, {'name': 'serviceofferingid', 'required': True, 'related': ['listServiceOfferings', 'createServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'The service offering ID that defines the resources consumed by the service appliance'}, {'name': 'templateid', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'The template ID that specifies the image for the service appliance'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'An optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'An optional account for the virtual machine. Must be used with domainId.'}], 'requiredparams': ['zoneid', 'name', 'leftnetworkid', 'rightnetworkid', 'serviceofferingid', 'templateid'], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}], 'description': 'Creates a system virtual-machine that implements network services'}}, 'deploy': {'virtualmachine': {'name': 'deployVirtualMachine', 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'networkids', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'list', 'description': "list of network ids used by virtual machine. Can't be specified with ipToNetworkList parameter"}, {'name': 'userdata', 'required': False, 'related': [], 'length': 32768, 'type': 'string', 'description': 'an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.'}, {'name': 'keyboard', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional keyboard device type for the virtual machine. valid value can be one of de,de-ch,es,fi,fr,fr-be,fr-ch,is,it,jp,nl-be,no,pt,uk,us'}, {'name': 'affinitygroupnames', 'required': False, 'related': ['listAffinityGroups'], 'length': 255, 'type': 'list', 'description': 'comma separated list of affinity groups names that are going to be applied to the virtual machine.Mutually exclusive with affinitygroupids parameter'}, {'name': 'serviceofferingid', 'required': True, 'related': ['listServiceOfferings', 'createServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the service offering for the virtual machine'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'availability zone for the virtual machine'}, {'name': 'ipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "the ip address for default vm's network"}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'used to specify the custom parameters.'}, {'name': 'keypair', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the ssh key pair used to login to the virtual machine'}, {'name': 'securitygroupnames', 'required': False, 'related': ['listSecurityGroups'], 'length': 255, 'type': 'list', 'description': 'comma separated list of security groups names that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter'}, {'name': 'hostid', 'required': False, 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'destination Host ID to deploy the VM to - parameter available for root admin only'}, {'name': 'templateid', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the template for the virtual machine'}, {'name': 'displayvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vm to the end user or not.'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the hypervisor on which to deploy the virtual machine. The parameter is required and respected only when hypervisor info is not set on the ISO/Template passed to the call'}, {'name': 'ip6address', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "the ipv6 address for default vm's network"}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'host name for the virtual machine'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the virtual machine. Must be used with domainId.'}, {'name': 'size', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'the arbitrary size for the DATADISK volume. Mutually exclusive with diskOfferingId'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.'}, {'name': 'iptonetworklist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': "ip to network mapping. Can't be specified with networkIds parameter. Example: iptonetworklist[0].ip=10.10.10.11&iptonetworklist[0].ipv6=fc00:1234:5678::abcd&iptonetworklist[0].networkid=uuid - requests to use ip 10.10.10.11 in network id=uuid"}, {'name': 'affinitygroupids', 'required': False, 'related': ['listAffinityGroups'], 'length': 255, 'type': 'list', 'description': 'comma separated list of affinity groups id that are going to be applied to the virtual machine. Mutually exclusive with affinitygroupnames parameter'}, {'name': 'group', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional group for the virtual machine'}, {'name': 'startvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if network offering supports specifying ip ranges; defaulted to true if not specified'}, {'name': 'securitygroupids', 'required': False, 'related': ['listSecurityGroups'], 'length': 255, 'type': 'list', 'description': 'comma separated list of security groups id that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter'}, {'name': 'rootdisksize', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Optional field to resize root disk on deploy. Value is in GB. Only applies to template-based deployments. Analogous to details[0].rootdisksize, which takes precedence over this parameter if both are provided'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'Deploy vm for the project'}, {'name': 'deploymentplanner', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Deployment planner to use for vm allocation. Available to ROOT admin only'}, {'name': 'displayname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional user generated name for the virtual machine'}, {'name': 'diskofferingid', 'required': False, 'related': ['createDiskOffering', 'listDiskOfferings'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk offering for the virtual machine. If the template is of ISO format, the diskOfferingId is for the root disk volume. Otherwise this parameter is used to indicate the offering for the data disk volume. If the templateId parameter passed is from a Template object, the diskOfferingId refers to a DATA Disk Volume created. If the templateId parameter passed is from an ISO object, the diskOfferingId refers to a ROOT Disk Volume created.'}], 'requiredparams': ['serviceofferingid', 'zoneid', 'templateid'], 'response': [{'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}], 'name': 'ingressrule'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}], 'name': 'nic'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}], 'description': 'Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.'}}, 'reboot': {'systemvm': {'name': 'rebootSystemVm', 'related': ['scaleSystemVm'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['rebootSystemVm', 'scaleSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the system virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}, {'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}], 'description': 'Reboots a system VM.'}, 'router': {'name': 'rebootRouter', 'related': ['startRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['startRouter', 'rebootRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the router'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}], 'name': 'nic'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}], 'description': 'Starts a router.'}, 'virtualmachine': {'name': 'rebootVirtualMachine', 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}], 'description': 'Reboots a virtual machine.'}}, 'find': {'hostsformigration': {'name': 'findHostsForMigration', 'related': [], 'isasync': False, 'params': [{'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'find hosts to which this VM can be migrated and flag the hosts with enough CPU/RAM to host the VM'}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': ['virtualmachineid'], 'response': [{'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'type': 'boolean', 'name': 'requiresStorageMotion', 'description': 'true if migrating a vm to this host requires storage motion, false otherwise'}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}], 'description': 'Find hosts suitable for migrating a virtual machine.'}, 'storagepoolsformigration': {'name': 'findStoragePoolsForMigration', 'related': [], 'isasync': False, 'params': [{'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'id', 'required': True, 'related': ['createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the volume'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'scope', 'description': 'the scope of the storage pool'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor type of the storage pool'}, {'type': 'long', 'name': 'disksizeused', 'description': "the host's currently used disk size"}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the storage pool'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this pool is suitable to migrate a volume, false otherwise'}, {'type': 'string', 'name': 'overprovisionfactor', 'description': 'the overprovisionfactor for the storage pool'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the storage pool was created'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'name', 'description': 'the name of the storage pool'}, {'type': 'string', 'name': 'type', 'description': 'the storage pool type'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the storage pool'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the storage pool'}, {'type': 'storagepoolstatus', 'name': 'state', 'description': 'the state of the storage pool'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the storage pool'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the storage pool'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster for the storage pool'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the storage pool'}, {'type': 'map', 'name': 'storagecapabilities', 'description': 'the storage pool capabilities'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the storage pool'}, {'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster for the storage pool'}, {'type': 'long', 'name': 'capacityiops', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the storage pool'}, {'type': 'string', 'name': 'path', 'description': 'the storage pool path'}], 'description': 'Lists storage pools available for migration of a volume.'}}, 'attach': {'volume': {'name': 'attachVolume', 'related': ['updateVolume', 'createVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateVolume', 'createVolume', 'attachVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}, {'name': 'deviceid', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'the ID of the device to map the volume to within the guest OS. If no deviceId is passed in, the next available deviceId will be chosen. Possible values for a Linux OS are:* 0 - /dev/xvda* 1 - /dev/xvdb* 2 - /dev/xvdc* 4 - /dev/xvde* 5 - /dev/xvdf* 6 - /dev/xvdg* 7 - /dev/xvdh* 8 - /dev/xvdi* 9 - /dev/xvdj'}, {'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': '    the ID of the virtual machine'}], 'requiredparams': ['id', 'virtualmachineid'], 'response': [{'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}], 'description': 'Attaches a disk volume to a virtual machine.'}, 'iso': {'name': 'attachIso', 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine'}, {'name': 'id', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the ISO file'}], 'requiredparams': ['virtualmachineid', 'id'], 'response': [{'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}], 'name': 'nic'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}], 'name': 'securitygroup'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {}], 'description': 'Attaches an ISO to a virtual machine.'}}, 'add': {'baremetalrct': {'name': 'addBaremetalRct', 'related': ['listBaremetalRct'], 'isasync': True, 'params': [{'name': 'baremetalrcturl', 'required': True, 'related': [], 'length': 255, 'type': 'object', 'description': 'http url to baremetal RCT configuration'}], 'requiredparams': ['baremetalrcturl'], 'response': [{'type': 'string', 'name': 'url', 'description': 'url'}, {'type': 'string', 'name': 'id', 'description': 'id of rct'}], 'description': 'adds baremetal rack configuration text'}, 'ciscoasa1000vresource': {'name': 'addCiscoAsa1000vResource', 'related': [], 'isasync': False, 'params': [{'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname or ip address of the Cisco ASA 1000v appliance.'}, {'name': 'clusterid', 'required': True, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the Cluster ID'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'insideportprofile', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Nexus port profile associated with inside interface of ASA 1000v'}], 'requiredparams': ['hostname', 'clusterid', 'physicalnetworkid', 'insideportprofile'], 'response': [{}, {}, {}, {}, {}], 'description': 'Adds a Cisco Asa 1000v appliance'}, 'nictovirtualmachine': {'name': 'addNicToVirtualMachine', 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'addNicToVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'Virtual Machine ID'}, {'name': 'networkid', 'required': True, 'related': ['listSrxFirewallNetworks', 'createNetwork', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'Network ID'}, {'name': 'ipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'IP Address for the new network'}], 'requiredparams': ['virtualmachineid', 'networkid'], 'response': [{'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}], 'name': 'egressrule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}], 'description': 'Adds VM to specified network by creating a NIC'}, 'nuagevspdevice': {'name': 'addNuageVspDevice', 'related': ['listNuageVspDevices'], 'isasync': True, 'params': [{'name': 'apiversion', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the version of the API to use to communicate to Nuage VSD'}, {'name': 'retrycount', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the number of retries on failure to communicate to Nuage VSD'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the user name of the CMS user in Nuage VSD'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the physical network in to which Nuage VSP is added'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the password of CMS user in Nuage VSD'}, {'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the hostname of the Nuage VSD'}, {'name': 'retryinterval', 'required': True, 'related': [], 'length': 255, 'type': 'long', 'description': 'the time to wait after failure before retrying to communicate to Nuage VSD'}, {'name': 'port', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the port to communicate to Nuage VSD'}], 'requiredparams': ['apiversion', 'retrycount', 'username', 'physicalnetworkid', 'password', 'hostname', 'retryinterval', 'port'], 'response': [{'type': 'int', 'name': 'port', 'description': 'the port to communicate to Nuage VSD'}, {'type': 'string', 'name': 'vspdeviceid', 'description': 'the device id of the Nuage VSD'}, {'type': 'int', 'name': 'retrycount', 'description': 'the number of retries on failure to communicate to Nuage VSD'}, {'type': 'long', 'name': 'retryinterval', 'description': 'the time to wait after failure before retrying to communicate to Nuage VSD'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname of the Nuage VSD'}, {'type': 'string', 'name': 'provider', 'description': 'the service provider name corresponding to this Nuage VSP device'}, {'type': 'string', 'name': 'nuagedevicename', 'description': 'the name of the Nuage VSP device'}, {'type': 'string', 'name': 'apiversion', 'description': 'the version of the API to use to communicate to Nuage VSD'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the ID of the physical network to which this Nuage VSP belongs to'}], 'description': 'Adds a Nuage VSP device'}, 'accounttoproject': {'name': 'addAccountToProject', 'related': [], 'isasync': True, 'params': [{'name': 'projectid', 'required': True, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject', 'suspendProject'], 'length': 255, 'type': 'uuid', 'description': 'ID of the project to add the account to'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the account to be added to the project'}, {'name': 'email', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'email to which invitation to the project is going to be sent'}], 'requiredparams': ['projectid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Adds account to a project'}, 'externalloadbalancer': {'name': 'addExternalLoadBalancer', 'related': [], 'isasync': False, 'params': [{'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Password of the external load balancer appliance.'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the external load balancer appliance.'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'Zone in which to add the external load balancer appliance.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Username of the external load balancer appliance.'}], 'requiredparams': ['password', 'url', 'zoneid', 'username'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the external load balancer'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external load balancer'}, {'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external load balancer'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external load balancer'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external load balancer'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external load balancer"}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external load balancer'}], 'description': 'Adds F5 external load balancer appliance.'}, 'globodnshost': {'name': 'addGloboDnsHost', 'related': [], 'isasync': True, 'params': [{'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Username for GloboDNS'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Password for GloboDNS'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'GloboDNS url'}], 'requiredparams': ['username', 'password', 'physicalnetworkid', 'url'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Adds the GloboDNS external host'}, 'cluster': {'name': 'addCluster', 'related': ['listClusters', 'updateCluster'], 'isasync': False, 'params': [{'name': 'password', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the password for the host'}, {'name': 'podid', 'required': True, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID for the host'}, {'name': 'vsmusername', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username for the VSM associated with this cluster'}, {'name': 'clustertype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of the cluster: CloudManaged, ExternalManaged'}, {'name': 'username', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username for the cluster'}, {'name': 'vsmipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ipaddress of the VSM associated with this cluster'}, {'name': 'clustername', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the cluster name'}, {'name': 'guestvswitchname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of virtual switch used for guest traffic in the cluster. This would override zone wide traffic label setting.'}, {'name': 'guestvswitchtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Type of virtual switch used for guest traffic in the cluster. Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the cluster'}, {'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL'}, {'name': 'publicvswitchname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of virtual switch used for public traffic in the cluster.  This would override zone wide traffic label setting.'}, {'name': 'ovm3vip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Ovm3 vip to use for pool (and cluster)'}, {'name': 'vsmpassword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the password for the VSM associated with this cluster'}, {'name': 'ovm3pool', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Ovm3 native pooling enabled for cluster'}, {'name': 'ovm3cluster', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Ovm3 native OCFS2 clustering enabled for cluster'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this cluster for allocation of new resources'}, {'name': 'publicvswitchtype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Type of virtual switch used for public traffic in the cluster. Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)'}, {'name': 'hypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'hypervisor type of the cluster: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator,Ovm3'}], 'requiredparams': ['podid', 'clustertype', 'clustername', 'zoneid', 'hypervisor'], 'response': [{'type': 'string', 'name': 'managedstate', 'description': 'whether this cluster is managed by cloudstack'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the cluster'}, {'type': 'string', 'name': 'memoryovercommitratio', 'description': 'The memory overcommit ratio of the cluster'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the cluster'}, {'type': 'string', 'name': 'id', 'description': 'the cluster ID'}, {'type': 'string', 'name': 'ovm3vip', 'description': 'Ovm3 VIP to use for pooling and/or clustering'}, {'type': 'string', 'name': 'hypervisortype', 'description': 'the hypervisor type of the cluster'}, {'description': 'the capacity of the Cluster', 'type': 'list', 'response': [{'type': 'short', 'name': 'type', 'description': 'the capacity type'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}], 'name': 'capacity'}, {'type': 'string', 'name': 'clustertype', 'description': 'the type of the cluster'}, {'type': 'string', 'name': 'name', 'description': 'the cluster name'}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the cluster'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the cluster'}, {'type': 'string', 'name': 'cpuovercommitratio', 'description': 'The cpu overcommit ratio of the cluster'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the cluster'}], 'description': 'Adds a new cluster'}, 'opendaylightcontroller': {'name': 'addOpenDaylightController', 'related': ['listOpenDaylightControllers', 'deleteOpenDaylightController'], 'isasync': True, 'params': [{'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credential to access the OpenDaylight API'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Username to access the OpenDaylight API'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Api URL of the OpenDaylight Controller.'}], 'requiredparams': ['password', 'physicalnetworkid', 'username', 'url'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name assigned to the controller'}, {'type': 'string', 'name': 'username', 'description': 'the username to authenticate to the controller'}, {'type': 'string', 'name': 'id', 'description': 'device id of the controller'}, {'type': 'string', 'name': 'url', 'description': 'the url of the controller api'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this controller belongs to'}], 'description': 'Adds an OpenDyalight controler'}, 'networkdevice': {'name': 'addNetworkDevice', 'related': ['listNetworkDevice'], 'isasync': False, 'params': [{'name': 'networkdeviceparameterlist', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'parameters for network device'}, {'name': 'networkdevicetype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Network device type, now supports ExternalDhcp, PxeServer, NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer, F5BigIpLoadBalancer, JuniperSRXFirewall, PaloAltoFirewall'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the network device'}], 'description': 'Adds a network device of one of the following types: ExternalDhcp, ExternalFirewall, ExternalLoadBalancer, PxeServer'}, 'guestos': {'name': 'addGuestOs', 'related': [], 'isasync': True, 'params': [{'name': 'oscategoryid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'ID of Guest OS category'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Optional name for Guest OS'}, {'name': 'osdisplayname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Unique display name for Guest OS'}], 'requiredparams': ['oscategoryid', 'osdisplayname'], 'response': [{'type': 'string', 'name': 'description', 'description': 'the name/description of the OS type'}, {'type': 'string', 'name': 'isuserdefined', 'description': 'is the guest OS user defined'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the ID of the OS category'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the OS type'}], 'description': 'Add a new guest OS type'}, 'brocadevcsdevice': {'name': 'addBrocadeVcsDevice', 'related': [], 'isasync': True, 'params': [{'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to access the Brocade VCS Switch API'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname of ip address of the Brocade VCS Switch.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to access the Brocade VCS Switch API'}], 'requiredparams': ['password', 'physicalnetworkid', 'hostname', 'username'], 'response': [{'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical Network to which this Brocade VCS belongs to'}, {'type': 'string', 'name': 'vcsdeviceid', 'description': 'device id of the Brocade Vcs'}, {'type': 'string', 'name': 'hostname', 'description': 'the principal switch Ip address'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'brocadedevicename', 'description': 'device name'}], 'description': 'Adds a Brocade VCS Switch'}, 'baremetalpxepingserver': {'name': 'addBaremetalPxePingServer', 'related': [], 'isasync': True, 'params': [{'name': 'pingstorageserverip', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'PING storage server ip'}, {'name': 'tftpdir', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Tftp root directory of PXE server'}, {'name': 'pingdir', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Root directory on PING storage server'}, {'name': 'pingcifspassword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Password of PING storage server'}, {'name': 'pxeservertype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of pxe device'}, {'name': 'pingcifsusername', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Username of PING storage server'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the external pxe device'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach external pxe device'}, {'name': 'podid', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'Pod Id'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach external pxe device'}], 'requiredparams': ['pingstorageserverip', 'tftpdir', 'pingdir', 'pxeservertype', 'physicalnetworkid', 'url', 'password', 'username'], 'response': [{'type': 'string', 'name': 'tftpdir', 'description': 'Tftp root directory of PXE server'}, {'type': 'string', 'name': 'pingdir', 'description': 'Root directory on PING storage server'}, {'type': 'string', 'name': 'pingstorageserverip', 'description': 'PING storage server ip'}], 'description': 'add a baremetal ping pxe server'}, 's3': {'name': 'addS3', 'related': ['listSwifts', 'listSecondaryStagingStores', 'addImageStore', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'maxerrorretry', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'maximum number of times to retry on error'}, {'name': 'connectiontimeout', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'connection timeout (milliseconds)'}, {'name': 'accesskey', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'S3 access key'}, {'name': 'endpoint', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'S3 host name'}, {'name': 'sockettimeout', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'socket timeout (milliseconds)'}, {'name': 'connectionttl', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'connection ttl (milliseconds)'}, {'name': 'usehttps', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'connect to the S3 endpoint via HTTPS?'}, {'name': 'bucket', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the template storage bucket'}, {'name': 'usetcpkeepalive', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'whether tcp keepalive is used'}, {'name': 'secretkey', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'S3 secret key'}], 'requiredparams': ['accesskey', 'bucket', 'secretkey'], 'response': [{'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}], 'description': 'Adds S3'}, 'resourcedetail': {'name': 'addResourceDetail', 'related': [], 'isasync': True, 'params': [{'name': 'details', 'required': True, 'related': [], 'length': 255, 'type': 'map', 'description': 'Map of (key/value pairs)'}, {'name': 'resourceid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'resource id to create the details for'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'pass false if you want this detail to be disabled for the regular user. True by default'}, {'name': 'resourcetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of the resource'}], 'requiredparams': ['details', 'resourceid', 'resourcetype'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Adds detail for the Resource.'}, 'guestosmapping': {'name': 'addGuestOsMapping', 'related': [], 'isasync': True, 'params': [{'name': 'osdisplayname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Display Name of Guest OS standard type. Either Display Name or UUID must be passed'}, {'name': 'ostypeid', 'required': False, 'related': ['addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'UUID of Guest OS type. Either the UUID or Display Name must be passed'}, {'name': 'hypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hypervisor type. One of : XenServer, KVM, VMWare'}, {'name': 'hypervisorversion', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': "Hypervisor version to create the mapping for. Use 'default' for default versions"}, {'name': 'osnameforhypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'OS name specific to the hypervisor'}], 'requiredparams': ['hypervisor', 'hypervisorversion', 'osnameforhypervisor'], 'response': [{'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'version of the hypervisor for mapping'}, {'type': 'string', 'name': 'osdisplayname', 'description': 'standard display name for the Guest OS'}, {'type': 'string', 'name': 'osnameforhypervisor', 'description': 'hypervisor specific name for the Guest OS'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the Guest OS mapping'}, {'type': 'string', 'name': 'isuserdefined', 'description': 'is the mapping user defined'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the Guest OS type'}], 'description': 'Adds a guest OS name to hypervisor OS name mapping'}, 'ciscovnmcresource': {'name': 'addCiscoVnmcResource', 'related': [], 'isasync': False, 'params': [{'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to access the Cisco VNMC Controller API'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to access the Cisco VNMC Controller API'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname or ip address of the Cisco VNMC Controller.'}], 'requiredparams': ['username', 'password', 'physicalnetworkid', 'hostname'], 'response': [{}, {}, {}, {}, {}], 'description': 'Adds a Cisco Vnmc Controller'}, 'ucsmanager': {'name': 'addUcsManager', 'related': [], 'isasync': False, 'params': [{'name': 'zoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the Zone id for the ucs manager'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username of UCS'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of UCS manager'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the password of UCS'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of UCS url'}], 'requiredparams': ['zoneid', 'username', 'password', 'url'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of ucs manager'}, {'type': 'string', 'name': 'url', 'description': 'the url of ucs manager'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the ucs manager'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of ucs manager'}], 'description': 'Adds a Ucs manager'}, 'externalfirewall': {'name': 'addExternalFirewall', 'related': ['listExternalFirewalls'], 'isasync': False, 'params': [{'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Username of the external firewall appliance.'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'Zone in which to add the external firewall appliance.'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the external firewall appliance.'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Password of the external firewall appliance.'}], 'requiredparams': ['username', 'zoneid', 'url', 'password'], 'response': [{'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'id', 'description': 'the ID of the external firewall'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}], 'description': 'Adds an external firewall appliance'}, 'niciranvpdevice': {'name': 'addNiciraNvpDevice', 'related': [], 'isasync': True, 'params': [{'name': 'l3gatewayserviceuuid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The L3 Gateway Service UUID configured on the Nicira Controller'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname of ip address of the Nicira NVP Controller.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to access the Nicira Controller API'}, {'name': 'transportzoneuuid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'The Transportzone UUID configured on the Nicira Controller'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to access the Nicira Controller API'}], 'requiredparams': ['physicalnetworkid', 'hostname', 'username', 'transportzoneuuid', 'password'], 'response': [{'type': 'string', 'name': 'l3gatewayserviceuuid', 'description': 'this L3 gateway service Uuid'}, {'type': 'string', 'name': 'hostname', 'description': 'the controller Ip address'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this Nirica Nvp belongs to'}, {'type': 'string', 'name': 'nvpdeviceid', 'description': 'device id of the Nicire Nvp'}, {'type': 'string', 'name': 'niciradevicename', 'description': 'device name'}, {'type': 'string', 'name': 'transportzoneuuid', 'description': 'the transport zone Uuid'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}], 'description': 'Adds a Nicira NVP device'}, 'baremetalhost': {'name': 'addBaremetalHost', 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'isasync': False, 'params': [{'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username for the host'}, {'name': 'hypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'hypervisor type of the host'}, {'name': 'hosttags', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list of tags to be added to the host'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the host URL'}, {'name': 'ipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'ip address intentionally allocated to this host after provisioning'}, {'name': 'podid', 'required': True, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID for the host'}, {'name': 'clusterid', 'required': False, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the cluster ID for the host'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the host'}, {'name': 'clustername', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the cluster name for the host'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the password for the host'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this Host for allocation of new resources'}], 'requiredparams': ['username', 'hypervisor', 'url', 'podid', 'zoneid', 'password'], 'response': [{'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}, {'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}, {'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}, {'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}, {'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}], 'name': 'vgpu'}], 'name': 'gpugroup'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}], 'description': 'add a baremetal host'}, 'baremetaldhcp': {'name': 'addBaremetalDhcp', 'related': [], 'isasync': True, 'params': [{'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the external dhcp appliance.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach external dhcp device'}, {'name': 'dhcpservertype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Type of dhcp device'}, {'name': 'physicalnetworkid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach external dhcp device'}], 'requiredparams': ['url', 'username', 'dhcpservertype', 'physicalnetworkid', 'password'], 'response': [{'type': 'string', 'name': 'dhcpservertype', 'description': 'name of the provider'}, {'type': 'string', 'name': 'url', 'description': 'url'}, {'type': 'string', 'name': 'id', 'description': 'device id of '}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this external dhcp device belongs to'}], 'description': 'adds a baremetal dhcp server'}, 'trafficmonitor': {'name': 'addTrafficMonitor', 'related': ['listTrafficMonitors'], 'isasync': False, 'params': [{'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the traffic monitor Host'}, {'name': 'excludezones', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Traffic going into the listed zones will not be metered'}, {'name': 'includezones', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Traffic going into the listed zones will be metered'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'Zone in which to add the external firewall appliance.'}], 'requiredparams': ['url', 'zoneid'], 'response': [{'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the external firewall'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}], 'description': 'Adds Traffic Monitor Host for Direct Network Usage'}, 'ldapconfiguration': {'name': 'addLdapConfiguration', 'related': [], 'isasync': False, 'params': [{'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname'}, {'name': 'port', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Port'}], 'requiredparams': ['hostname', 'port'], 'response': [{'type': 'int', 'name': 'port', 'description': 'port'}, {'type': 'string', 'name': 'hostname', 'description': 'hostname'}], 'description': 'Add a new Ldap Configuration'}, 'iptonic': {'name': 'addIpToNic', 'related': [], 'isasync': True, 'params': [{'name': 'nicid', 'required': True, 'related': ['listNics'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the nic to which you want to assign private IP'}, {'name': 'ipaddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Secondary IP Address'}], 'requiredparams': ['nicid'], 'response': [{'type': 'string', 'name': 'nicid', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the secondary private IP addr'}, {'type': 'string', 'name': 'ipaddress', 'description': 'Secondary IP address'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the ID of the vm'}], 'description': 'Assigns secondary IP to NIC'}, 'vpnuser': {'name': 'addVpnUser', 'related': ['listVpnUsers'], 'isasync': True, 'params': [{'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'add vpn user to the specific project'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the vpn user. Must be used with domainId.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'username for the vpn user'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'password for the username'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.'}], 'requiredparams': ['username', 'password'], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account of the remote access vpn'}, {'type': 'string', 'name': 'username', 'description': 'the username of the vpn user'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the account of the remote access vpn'}, {'type': 'string', 'name': 'state', 'description': 'the state of the Vpn User'}, {'type': 'string', 'name': 'id', 'description': 'the vpn userID'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the account of the remote access vpn'}], 'description': 'Adds vpn users'}, 'traffictype': {'name': 'addTrafficType', 'related': [], 'isasync': True, 'params': [{'name': 'traffictype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the trafficType to be added to the physical network'}, {'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The VLAN id to be used for Management traffic by VMware host'}, {'name': 'ovm3networklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name of the physical device dedicated to this traffic on an OVM3 host'}, {'name': 'hypervnetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a Hyperv host'}, {'name': 'xennetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a XenServer host'}, {'name': 'isolationmethod', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "Used if physical network has multiple isolation types and traffic type is public. Choose which isolation method. Valid options currently 'vlan' or 'vxlan', defaults to 'vlan'."}, {'name': 'vmwarenetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a VMware host'}, {'name': 'kvmnetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a KVM host'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}], 'requiredparams': ['traffictype', 'physicalnetworkid'], 'response': [{'type': 'string', 'name': 'xennetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a XenServer host'}, {'type': 'string', 'name': 'hypervnetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a HyperV host'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'ovm3networklabel', 'description': 'The network name of the physical device dedicated to this traffic on an OVM3 host'}, {'type': 'string', 'name': 'vmwarenetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a VMware host'}, {'type': 'string', 'name': 'traffictype', 'description': 'the trafficType to be added to the physical network'}, {'type': 'string', 'name': 'kvmnetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a KVM host'}, {'type': 'string', 'name': 'id', 'description': 'id of the network provider'}], 'description': 'Adds traffic type to a physical network'}, 'host': {'name': 'addHost', 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'prepareHostForMaintenance'], 'isasync': False, 'params': [{'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this Host for allocation of new resources'}, {'name': 'hosttags', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list of tags to be added to the host'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username for the host'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the password for the host'}, {'name': 'podid', 'required': True, 'related': ['createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the Pod ID for the host'}, {'name': 'clustername', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the cluster name for the host'}, {'name': 'hypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'hypervisor type of the host'}, {'name': 'clusterid', 'required': False, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the cluster ID for the host'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the host URL'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the host'}], 'requiredparams': ['username', 'password', 'podid', 'hypervisor', 'url', 'zoneid'], 'response': [{'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}, {'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}, {'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}, {'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}, {'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}, {'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}], 'name': 'vgpu'}], 'name': 'gpugroup'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}], 'description': 'Adds a new host.'}, 'bigswitchbcfdevice': {'name': 'addBigSwitchBcfDevice', 'related': [], 'isasync': True, 'params': [{'name': 'nat', 'required': True, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'NAT support of the BigSwitch BCF Controller.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Username of the BigSwitch BCF Controller.'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Password of the BigSwitch BCF Controller.'}, {'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname of ip address of the BigSwitch BCF Controller.'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}], 'requiredparams': ['nat', 'username', 'password', 'hostname', 'physicalnetworkid'], 'response': [{'type': 'string', 'name': 'username', 'description': 'the controller username'}, {'type': 'string', 'name': 'bigswitchdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'password', 'description': 'the controller password'}, {'type': 'string', 'name': 'hostname', 'description': 'the controller Ip address'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'bcfdeviceid', 'description': 'device id of the BigSwitch BCF Controller'}, {'type': 'boolean', 'name': 'nat', 'description': 'NAT support'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this BigSwitch BCF segment belongs to'}], 'description': 'Adds a BigSwitch BCF Controller device'}, 'srxfirewall': {'name': 'addSrxFirewall', 'related': ['listSrxFirewalls', 'configureSrxFirewall'], 'isasync': True, 'params': [{'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach SRX firewall device'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the SRX appliance.'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach SRX firewall device'}, {'name': 'networkdevicetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'supports only JuniperSRXFirewall'}], 'requiredparams': ['password', 'physicalnetworkid', 'url', 'username', 'networkdevicetype'], 'response': [{'type': 'string', 'name': 'fwdeviceid', 'description': 'device id of the SRX firewall'}, {'type': 'string', 'name': 'fwdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this SRX firewall belongs to'}, {'type': 'long', 'name': 'fwdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'fwdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}], 'description': 'Adds a SRX firewall device'}, 'swift': {'name': 'addSwift', 'related': ['addS3', 'listSwifts', 'listSecondaryStagingStores', 'addImageStore', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL for swift'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account for swift'}, {'name': 'username', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username for swift'}, {'name': 'key', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': ' key for the user for swift'}], 'requiredparams': ['url'], 'response': [{'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}], 'description': 'Adds Swift.'}, 'baremetalpxekickstartserver': {'name': 'addBaremetalPxeKickStartServer', 'related': [], 'isasync': True, 'params': [{'name': 'tftpdir', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Tftp root directory of PXE server'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach external pxe device'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the external pxe device'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'pxeservertype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'type of pxe device'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach external pxe device'}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'Pod Id'}], 'requiredparams': ['tftpdir', 'username', 'url', 'physicalnetworkid', 'pxeservertype', 'password'], 'response': [{'type': 'string', 'name': 'tftpdir', 'description': 'Tftp root directory of PXE server'}], 'description': 'add a baremetal pxe server'}, 'netscalerloadbalancer': {'name': 'addNetscalerLoadBalancer', 'related': ['listNetscalerLoadBalancers', 'configureNetscalerLoadBalancer'], 'isasync': True, 'params': [{'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the netscaler load balancer appliance.'}, {'name': 'networkdevicetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Netscaler device type supports NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer'}, {'name': 'isexclusivegslbprovider', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if NetScaler device being added is for providing GSLB service exclusively and can not be used for LB'}, {'name': 'gslbprovider', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if NetScaler device being added is for providing GSLB service'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach netscaler load balancer device'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork', 'updatePhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach netscaler load balancer device'}, {'name': 'gslbproviderprivateip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'public IP of the site'}, {'name': 'gslbproviderpublicip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'public IP of the site'}], 'requiredparams': ['url', 'networkdevicetype', 'password', 'physicalnetworkid', 'username'], 'response': [{'type': 'boolean', 'name': 'lbdevicededicated', 'description': 'true if device is dedicated for an account'}, {'type': 'list', 'name': 'podids', 'description': "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device."}, {'type': 'long', 'name': 'lbdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the load balancer'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the load balancer'}, {'type': 'boolean', 'name': 'isexclusivegslbprovider', 'description': 'true if NetScaler device is provisioned exclusively to be a GSLB service provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this netscaler device belongs to'}, {'type': 'string', 'name': 'gslbproviderprivateip', 'description': 'private IP of the NetScaler representing GSLB site'}, {'type': 'string', 'name': 'gslbproviderpublicip', 'description': 'public IP of the NetScaler representing GSLB site'}, {'type': 'boolean', 'name': 'gslbprovider', 'description': 'true if NetScaler device is provisioned to be a GSLB service provider'}, {'type': 'string', 'name': 'lbdeviceid', 'description': 'device id of the netscaler load balancer'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external load balancer'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'lbdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'lbdevicestate', 'description': 'device state'}], 'description': 'Adds a netscaler load balancer device'}, 'paloaltofirewall': {'name': 'addPaloAltoFirewall', 'related': ['configurePaloAltoFirewall', 'listPaloAltoFirewalls'], 'isasync': True, 'params': [{'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach Palo Alto firewall device'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'networkdevicetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'supports only PaloAltoFirewall'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the Palo Alto appliance.'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach Palo Alto firewall device'}], 'requiredparams': ['username', 'physicalnetworkid', 'networkdevicetype', 'url', 'password'], 'response': [{'type': 'string', 'name': 'fwdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this Palo Alto firewall belongs to'}, {'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'fwdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}, {'type': 'string', 'name': 'fwdeviceid', 'description': 'device id of the Palo Alto firewall'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'long', 'name': 'fwdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}], 'description': 'Adds a Palo Alto firewall device'}, 'region': {'name': 'addRegion', 'related': [], 'isasync': False, 'params': [{'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the region'}, {'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Id of the Region'}, {'name': 'endpoint', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Region service endpoint'}], 'requiredparams': ['name', 'id', 'endpoint'], 'response': [{'type': 'integer', 'name': 'id', 'description': 'the ID of the region'}, {'type': 'boolean', 'name': 'gslbserviceenabled', 'description': 'true if GSLB service is enabled in the region, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the region'}, {'type': 'string', 'name': 'endpoint', 'description': 'the end point of the region'}, {'type': 'boolean', 'name': 'portableipserviceenabled', 'description': 'true if security groups support is enabled, false otherwise'}], 'description': 'Adds a Region'}, 'stratospheressp': {'name': 'addStratosphereSsp', 'related': [], 'isasync': False, 'params': [{'name': 'tenantuuid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'stratosphere ssp tenant uuid'}, {'name': 'zoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the zone ID'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'stratosphere ssp server url'}, {'name': 'password', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'stratosphere ssp api password'}, {'name': 'username', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'stratosphere ssp api username'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'stratosphere ssp api name'}], 'requiredparams': ['zoneid', 'url', 'name'], 'response': [{'type': 'string', 'name': 'url', 'description': 'url of ssp endpoint'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone which this ssp controls'}, {'type': 'string', 'name': 'hostid', 'description': 'server id of the stratosphere ssp server'}, {'type': 'string', 'name': 'name', 'description': 'name'}], 'description': 'Adds stratosphere ssp server'}, 'vmwaredc': {'name': 'addVmwareDc', 'related': ['listVmwareDcs'], 'isasync': False, 'params': [{'name': 'zoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'The Zone ID.'}, {'name': 'password', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The password for specified username.'}, {'name': 'username', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The Username required to connect to resource.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of VMware datacenter to be added to specified zone.'}, {'name': 'vcenter', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'The name/ip of vCenter. Make sure it is IP address or full qualified domain name for host running vCenter server.'}], 'requiredparams': ['zoneid', 'name', 'vcenter'], 'response': [{'type': 'string', 'name': 'name', 'description': 'The VMware Datacenter name'}, {'type': 'long', 'name': 'zoneid', 'description': 'the Zone ID associated with this VMware Datacenter'}, {'type': 'string', 'name': 'vcenter', 'description': 'The VMware vCenter name/ip'}, {'type': 'string', 'name': 'id', 'description': 'The VMware Datacenter ID'}], 'description': 'Adds a VMware datacenter to specified zone'}, 'f5loadbalancer': {'name': 'addF5LoadBalancer', 'related': [], 'isasync': True, 'params': [{'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach F5 BigIP load balancer device'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'URL of the F5 load balancer appliance.'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Credentials to reach F5 BigIP load balancer device'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID'}, {'name': 'networkdevicetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'supports only F5BigIpLoadBalancer'}], 'requiredparams': ['username', 'url', 'password', 'physicalnetworkid', 'networkdevicetype'], 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external load balancer'}, {'type': 'long', 'name': 'lbdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the load balancer'}, {'type': 'string', 'name': 'lbdeviceid', 'description': 'device id of the F5 load balancer'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the load balancer'}, {'type': 'boolean', 'name': 'lbdevicededicated', 'description': 'true if device is dedicated for an account'}, {'type': 'string', 'name': 'lbdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this F5 device belongs to'}, {'type': 'string', 'name': 'lbdevicename', 'description': 'device name'}], 'description': 'Adds a F5 BigIP load balancer device'}, 'imagestore': {'name': 'addImageStore', 'related': ['listSwifts', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL for the image store'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss'}, {'name': 'provider', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the image store provider name'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name for the image store'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the image store'}], 'requiredparams': ['provider'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}], 'description': 'Adds backup image store.'}, 'networkserviceprovider': {'name': 'addNetworkServiceProvider', 'related': ['updateNetworkServiceProvider'], 'isasync': True, 'params': [{'name': 'destinationphysicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the destination Physical Network ID to bridge to'}, {'name': 'servicelist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the list of services to be enabled for this physical network service provider'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the Physical Network ID to add the provider to'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name for the physical network service provider'}], 'requiredparams': ['physicalnetworkid', 'name'], 'response': [{'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}], 'description': 'Adds a network serviceProvider to a physical network'}, 'secondarystorage': {'name': 'addSecondaryStorage', 'related': ['listImageStores', 'addS3', 'listSwifts', 'listSecondaryStagingStores', 'listS3s', 'addImageStore', 'addSwift', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL for the secondary storage'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the secondary storage'}], 'requiredparams': ['url'], 'response': [{'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}], 'description': 'Adds secondary storage.'}}, 'verbs': ['authorize', 'restore', 'suspend', 'revoke', 'disassociate', 'migrate', 'lock', 'dedicate', 'activate', 'reconnect', 'cancel', 'query', 'recover', 'extract', 'archive', 'detach', 'prepare', 'saml', 'revert', 'create', 'associate', 'reboot', 'find', 'attach', 'add', 'restart', 'deploy', 'ldap', 'destroy', 'issue', 'start', 'enable', 'configure', 'get', 'stop', 'update', 'change', 'replace', 'disable', 'logout', 'scale', 'import', 'copy', 'generate', 'resize', 'reset', 'expunge', 'upgrade', 'register', 'list', 'upload', 'remove', 'mark', 'clean', 'release', 'login', 'assign', 'delete'], 'change': {'serviceforvirtualmachine': {'name': 'changeServiceForVirtualMachine', 'related': ['detachIso', 'restoreVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': False, 'params': [{'name': 'serviceofferingid', 'required': True, 'related': ['listServiceOfferings'], 'length': 255, 'type': 'uuid', 'description': 'the service offering ID to apply to the virtual machine'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'name value pairs of custom parameters for cpu, memory and cpunumber. example details[i].name=value'}, {'name': 'id', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['serviceofferingid', 'id'], 'response': [{'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}], 'name': 'egressrule'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}], 'name': 'nic'}], 'description': 'Changes the service offering for a virtual machine. The virtual machine must be in a "Stopped" state for this command to take effect.'}, 'serviceforsystemvm': {'name': 'changeServiceForSystemVm', 'related': ['rebootSystemVm', 'listSystemVms', 'scaleSystemVm', 'migrateSystemVm'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['rebootSystemVm', 'changeServiceForSystemVm', 'listSystemVms', 'scaleSystemVm', 'migrateSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the system vm'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'name value pairs of custom parameters for cpu, memory and cpunumber. example details[i].name=value'}, {'name': 'serviceofferingid', 'required': True, 'related': ['listServiceOfferings', 'createServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'the service offering ID to apply to the system vm'}], 'requiredparams': ['id', 'serviceofferingid'], 'response': [{'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}], 'description': 'Changes the service offering for a system vm (console proxy or secondary storage). The system vm must be in a "Stopped" state for this command to take effect.'}, 'serviceforrouter': {'name': 'changeServiceForRouter', 'related': ['startRouter', 'listInternalLoadBalancerVMs'], 'isasync': False, 'params': [{'name': 'serviceofferingid', 'required': True, 'related': ['listServiceOfferings', 'createServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'the service offering ID to apply to the domain router'}, {'name': 'id', 'required': True, 'related': ['startRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the router'}], 'requiredparams': ['serviceofferingid', 'id'], 'response': [{'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}], 'name': 'nic'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}], 'description': 'Upgrades domain router to a new service offering'}}, 'ldap': {'createaccount': {'name': 'ldapCreateAccount', 'related': ['disableAccount', 'listAccounts', 'listAccounts', 'createAccount', 'markDefaultZoneForAccount'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Creates the user under the specified account. If no account is specified, the username will be used as the account name.'}, {'name': 'accountdetails', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'details for account used to store specific parameters'}, {'name': 'accounttype', 'required': True, 'related': [], 'length': 255, 'type': 'short', 'description': 'Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin'}, {'name': 'accountid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Account UUID, required for adding account from external provisioning system'}, {'name': 'timezone', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "Network domain for the account's networks"}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Unique username.'}, {'name': 'userid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'User UUID, required for adding account from external provisioning system'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'Creates the user under the specified domain.'}], 'requiredparams': ['accounttype', 'username'], 'response': [{'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}], 'name': 'user'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}], 'description': 'Creates an account from an LDAP user'}}, 'destroy': {'systemvm': {'name': 'destroySystemVm', 'related': ['rebootSystemVm', 'startSystemVm', 'changeServiceForSystemVm', 'listSystemVms', 'stopSystemVm', 'scaleSystemVm', 'migrateSystemVm'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['rebootSystemVm', 'startSystemVm', 'changeServiceForSystemVm', 'listSystemVms', 'destroySystemVm', 'stopSystemVm', 'scaleSystemVm', 'migrateSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the system virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}], 'description': 'Destroyes a system virtual machine.'}, 'router': {'name': 'destroyRouter', 'related': ['startRouter', 'rebootRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['startRouter', 'rebootRouter', 'destroyRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the router'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}], 'name': 'nic'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}], 'description': 'Destroys a router.'}, 'virtualmachine': {'name': 'destroyVirtualMachine', 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'expunge', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'If true is passed, the vm is expunged immediately. False by default.'}, {'name': 'id', 'required': True, 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}], 'name': 'egressrule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}], 'name': 'securitygroup'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}], 'description': 'Destroys a virtual machine. Once destroyed, only the administrator can recover it.'}}, 'get': {'virtualmachineuserdata': {'name': 'getVirtualMachineUserData', 'related': [], 'isasync': False, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['virtualmachineid'], 'response': [{'type': 'string', 'name': 'userdata', 'description': 'Base 64 encoded VM user data'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the ID of the virtual machine'}], 'description': 'Returns user data associated with the VM'}, 'spmetadata': {'name': 'getSPMetadata', 'related': [], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'metadata', 'description': 'The Metadata XML'}], 'description': 'Returns SAML2 CloudStack Service Provider MetaData'}, 'uploadparamsforvolume': {'name': 'getUploadParamsForVolume', 'related': ['getUploadParamsForTemplate'], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject', 'suspendProject'], 'length': 255, 'type': 'uuid', 'description': 'Upload volume/template for the project'}, {'name': 'diskofferingid', 'required': False, 'related': ['updateDiskOffering', 'createDiskOffering', 'listDiskOfferings'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk offering. This must be a custom sized offering since during upload of volume/template size is unknown.'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone the volume/template is to be hosted on'}, {'name': 'checksum', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the MD5 checksum value of this volume/template'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the volume/template'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId. If the account parameter is used, domainId must also be used.'}, {'name': 'imagestoreuuid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Image store uuid'}, {'name': 'format', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the format for the volume/template. Possible values include QCOW2, OVA, and VHD.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional accountName. Must be used with domainId.'}], 'requiredparams': ['zoneid', 'name', 'format'], 'response': [{'type': 'uuid', 'name': 'id', 'description': 'the template/volume ID'}, {'type': 'string', 'name': 'expires', 'description': 'the timestamp after which the signature expires'}, {'type': 'string', 'name': 'signature', 'description': 'signature to be sent in the POST request.'}, {'type': 'url', 'name': 'postURL', 'description': 'POST url to upload the file to'}, {'type': 'string', 'name': 'metadata', 'description': 'encrypted data to be sent in the POST request.'}], 'description': 'Upload a data disk to the cloudstack cloud.'}, 'vmpassword': {'name': 'getVMPassword', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'encryptedpassword', 'description': 'The base64 encoded encrypted password of the VM'}], 'description': 'Returns an encrypted password for the VM'}, 'uploadparamsfortemplate': {'name': 'getUploadParamsForTemplate', 'related': [], 'isasync': False, 'params': [{'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template is available to all accounts; default is true'}, {'name': 'isrouting', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template type is routing i.e., if template is used to deploy router'}, {'name': 'checksum', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the MD5 checksum value of this volume/template'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId. If the account parameter is used, domainId must also be used.'}, {'name': 'bits', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': '32 or 64 bits support. 64 by default'}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'Upload volume/template for the project'}, {'name': 'sshkeyenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template supports the sshkey upload feature; default is false'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the display text of the template. This is usually used for display purposes.'}, {'name': 'ostypeid', 'required': True, 'related': ['addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the OS Type that best represents the OS of this template.'}, {'name': 'templatetag', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the tag for this template.'}, {'name': 'requireshvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this template requires HVM'}, {'name': 'isfeatured', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this template is a featured template, false otherwise'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Template details in key/value pairs.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional accountName. Must be used with domainId.'}, {'name': 'isdynamicallyscalable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'name': 'zoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone the volume/template is to be hosted on'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the volume/template'}, {'name': 'format', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the format for the volume/template. Possible values include QCOW2, OVA, and VHD.'}, {'name': 'hypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the target hypervisor for the template'}, {'name': 'isextractable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template or its derivatives are extractable; default is false'}, {'name': 'passwordenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template supports the password reset feature; default is false'}], 'requiredparams': ['displaytext', 'ostypeid', 'zoneid', 'name', 'format', 'hypervisor'], 'response': [{'type': 'string', 'name': 'metadata', 'description': 'encrypted data to be sent in the POST request.'}, {'type': 'url', 'name': 'postURL', 'description': 'POST url to upload the file to'}, {'type': 'string', 'name': 'signature', 'description': 'signature to be sent in the POST request.'}, {'type': 'string', 'name': 'expires', 'description': 'the timestamp after which the signature expires'}, {'type': 'uuid', 'name': 'id', 'description': 'the template/volume ID'}], 'description': 'upload an existing template into the CloudStack cloud. '}, 'cloudidentifier': {'name': 'getCloudIdentifier', 'related': [], 'isasync': False, 'params': [{'name': 'userid', 'required': True, 'related': ['lockUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'the user ID for the cloud identifier'}], 'requiredparams': ['userid'], 'response': [{'type': 'string', 'name': 'cloudidentifier', 'description': 'the cloud identifier'}, {'type': 'string', 'name': 'signature', 'description': 'the signed response for the cloud identifier'}, {'type': 'string', 'name': 'userid', 'description': 'the user ID for the cloud identifier'}], 'description': 'Retrieves a cloud identifier.'}, 'solidfirevolumeaccessgroupid': {'name': 'getSolidFireVolumeAccessGroupId', 'related': [], 'isasync': False, 'params': [{'name': 'storageid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Storage Pool UUID'}, {'name': 'clusterid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Cluster UUID'}], 'requiredparams': ['storageid', 'clusterid'], 'response': [{'type': 'long', 'name': 'solidFireVolumeAccessGroupId', 'description': 'SolidFire Volume Access Group Id'}], 'description': 'Get the SF Volume Access Group ID'}, 'user': {'name': 'getUser', 'related': ['disableUser', 'lockUser', 'updateUser', 'listUsers'], 'isasync': False, 'params': [{'name': 'userapikey', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'API key of the user'}], 'requiredparams': ['userapikey'], 'response': [{'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}], 'description': 'Find user account by API key'}, 'apilimit': {'name': 'getApiLimit', 'related': ['resetApiLimit'], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'int', 'name': 'apiIssued', 'description': 'number of api already issued'}, {'type': 'int', 'name': 'apiAllowed', 'description': 'currently allowed number of apis'}, {'type': 'long', 'name': 'expireAfter', 'description': 'seconds left to reset counters'}, {'type': 'string', 'name': 'accountid', 'description': 'the account uuid of the api remaining count'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the api remaining count'}], 'description': 'Get API limit count for the caller'}, 'solidfireaccountid': {'name': 'getSolidFireAccountId', 'related': [], 'isasync': False, 'params': [{'name': 'storageid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Storage Pool UUID'}, {'name': 'accountid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'CloudStack Account UUID'}], 'requiredparams': ['storageid', 'accountid'], 'response': [{'type': 'long', 'name': 'solidFireAccountId', 'description': 'SolidFire Account ID'}], 'description': 'Get SolidFire Account ID'}, 'solidfirevolumeiscsiname': {'name': 'getSolidFireVolumeIscsiName', 'related': [], 'isasync': False, 'params': [{'name': 'volumeid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'CloudStack Volume UUID'}], 'requiredparams': ['volumeid'], 'response': [{'type': 'string', 'name': 'solidFireVolumeIscsiName', 'description': 'SolidFire Volume Iscsi Name'}], 'description': "Get SolidFire Volume's Iscsi Name"}, 'solidfirevolumesize': {'name': 'getSolidFireVolumeSize', 'related': [], 'isasync': False, 'params': [{'name': 'volumeid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Volume UUID'}, {'name': 'storageid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Storage Pool UUID'}], 'requiredparams': ['volumeid', 'storageid'], 'response': [{'type': 'long', 'name': 'solidFireVolumeSize', 'description': 'SolidFire Volume Size Including Hypervisor Snapshot Reserve'}], 'description': 'Get the SF volume size including Hypervisor Snapshot Reserve'}}, 'issue': {'nuagevspresourcerequest': {'name': 'issueNuageVspResourceRequest', 'related': [], 'isasync': False, 'params': [{'name': 'method', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the Nuage VSP REST API method type'}, {'name': 'childresource', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the child resource in Nuage VSP'}, {'name': 'networkofferingid', 'required': True, 'related': ['createNetworkOffering', 'updateNetworkOffering'], 'length': 255, 'type': 'uuid', 'description': 'the network offering id'}, {'name': 'resource', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the resource in Nuage VSP'}, {'name': 'resourcefilter', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the resource filter in Nuage VSP'}, {'name': 'physicalnetworkid', 'required': False, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the physical network in to which Nuage VSP Controller is added'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the Zone ID for the network'}, {'name': 'resourceid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ID of the resource in Nuage VSP'}], 'requiredparams': ['method', 'networkofferingid', 'resource', 'zoneid'], 'response': [{'type': 'string', 'name': 'resourceinfo', 'description': 'the details of the Nuage VSP resource'}], 'description': 'Issues a Nuage VSP REST API resource request'}}, 'start': {'systemvm': {'name': 'startSystemVm', 'related': ['rebootSystemVm', 'changeServiceForSystemVm', 'listSystemVms', 'scaleSystemVm', 'migrateSystemVm'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['rebootSystemVm', 'startSystemVm', 'changeServiceForSystemVm', 'listSystemVms', 'scaleSystemVm', 'migrateSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the system virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}], 'description': 'Starts a system virtual machine.'}, 'router': {'name': 'startRouter', 'related': ['listInternalLoadBalancerVMs'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['startRouter', 'listInternalLoadBalancerVMs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the router'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}], 'description': 'Starts a router.'}, 'internalloadbalancervm': {'name': 'startInternalLoadBalancerVM', 'related': ['startRouter', 'rebootRouter', 'destroyRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['startRouter', 'rebootRouter', 'destroyRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM', 'startInternalLoadBalancerVM'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the internal lb vm'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}], 'description': 'Starts an existing internal lb vm.'}, 'virtualmachine': {'name': 'startVirtualMachine', 'related': ['detachIso', 'restoreVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}, {'name': 'deploymentplanner', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Deployment planner to use for vm allocation. Available to ROOT admin only'}, {'name': 'hostid', 'required': False, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'destination Host ID to deploy the VM to - parameter available for root admin only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}], 'name': 'securitygroup'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}], 'name': 'nic'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}], 'description': 'Starts a virtual machine.'}}, 'count': 516, 'enable': {'account': {'name': 'enableAccount', 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'listAccounts', 'updateAccount', 'lockAccount', 'createAccount', 'markDefaultZoneForAccount'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Enables specified account.'}, {'name': 'id', 'required': False, 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'enableAccount', 'listAccounts', 'updateAccount', 'lockAccount', 'createAccount', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'Account id'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'Enables specified account in this domain.'}], 'requiredparams': [], 'response': [{'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}], 'name': 'user'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}], 'description': 'Enables an account'}, 'storagemaintenance': {'name': 'enableStorageMaintenance', 'related': ['createStoragePool', 'updateStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'cancelStorageMaintenance'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createStoragePool', 'updateStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'enableStorageMaintenance', 'cancelStorageMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'Primary storage ID'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'scope', 'description': 'the scope of the storage pool'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the storage pool'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this pool is suitable to migrate a volume, false otherwise'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor type of the storage pool'}, {'type': 'string', 'name': 'name', 'description': 'the name of the storage pool'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the storage pool'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the storage pool'}, {'type': 'string', 'name': 'type', 'description': 'the storage pool type'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the storage pool'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the storage pool'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the storage pool'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the storage pool'}, {'type': 'map', 'name': 'storagecapabilities', 'description': 'the storage pool capabilities'}, {'type': 'storagepoolstatus', 'name': 'state', 'description': 'the state of the storage pool'}, {'type': 'string', 'name': 'overprovisionfactor', 'description': 'the overprovisionfactor for the storage pool'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster for the storage pool'}, {'type': 'long', 'name': 'capacityiops', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster for the storage pool'}, {'type': 'string', 'name': 'path', 'description': 'the storage pool path'}, {'type': 'long', 'name': 'disksizeused', 'description': "the host's currently used disk size"}, {'type': 'string', 'name': 'id', 'description': 'the ID of the storage pool'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the storage pool was created'}], 'description': 'Puts storage pool into maintenance state'}, 'cisconexusvsm': {'name': 'enableCiscoNexusVSM', 'related': ['disableCiscoNexusVSM'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['disableCiscoNexusVSM', 'enableCiscoNexusVSM'], 'length': 255, 'type': 'uuid', 'description': 'Id of the Cisco Nexus 1000v VSM device to be enabled'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'vsmconfigstate', 'description': 'The Config State (Primary/Standby) of the VSM'}, {'type': 'int', 'name': 'vsmpktvlanid', 'description': 'packet vlan id of the VSM'}, {'type': 'string', 'name': 'vsmdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'vsmdeviceid', 'description': 'device id of the Cisco N1KV VSM device'}, {'type': 'int', 'name': 'vsmstoragevlanid', 'description': 'storage vlan id of the VSM'}, {'type': 'int', 'name': 'vsmctrlvlanid', 'description': 'control vlan id of the VSM'}, {'type': 'string', 'name': 'vsmdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'vsmdevicestate', 'description': 'The Device State (Enabled/Disabled) of the VSM'}, {'type': 'string', 'name': 'vsmdomainid', 'description': "The VSM is a switch supervisor. This is the VSM's switch domain id"}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external Cisco Nexus 1000v Virtual Supervisor Module'}, {'type': 'string', 'name': 'vsmconfigmode', 'description': 'The mode of the VSM (standalone/HA)'}, {'type': 'string', 'name': 'vsmmgmtvlanid', 'description': 'management vlan id of the VSM'}], 'description': 'Enable a Cisco Nexus VSM device'}, 'staticnat': {'name': 'enableStaticNat', 'related': [], 'isasync': False, 'params': [{'name': 'networkid', 'required': False, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listF5LoadBalancerNetworks', 'listPaloAltoFirewallNetworks', 'updateNetwork', 'listNetworks', 'listBrocadeVcsDeviceNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The network of the VM the static NAT will be enabled for. Required when public IP address is not associated with any guest network yet (VPC case)'}, {'name': 'virtualmachineid', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine for enabling static NAT feature'}, {'name': 'ipaddressid', 'required': True, 'related': ['associateIpAddress', 'updateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the public IP address ID for which static NAT feature is being enabled'}, {'name': 'vmguestip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'VM guest NIC secondary IP address for the port forwarding rule'}], 'requiredparams': ['virtualmachineid', 'ipaddressid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Enables static NAT for given IP address'}, 'user': {'name': 'enableUser', 'related': ['disableUser', 'getUser', 'lockUser', 'updateUser', 'createUser', 'listUsers'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['enableUser', 'disableUser', 'getUser', 'lockUser', 'updateUser', 'createUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'Enables user by user ID.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}], 'description': 'Enables a user account'}, 'autoscalevmgroup': {'name': 'enableAutoScaleVmGroup', 'related': ['updateAutoScaleVmGroup'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['enableAutoScaleVmGroup', 'updateAutoScaleVmGroup'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale group'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'fordisplay', 'description': 'is group for display to the regular user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {'type': 'string', 'name': 'state', 'description': 'the current state of the AutoScale Vm Group'}, {'type': 'int', 'name': 'interval', 'description': 'the frequency at which the conditions have to be evaluated'}, {'type': 'int', 'name': 'minmembers', 'description': 'the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.'}, {'type': 'list', 'name': 'scaledownpolicies', 'description': 'list of scaledown autoscale policies'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}, {'type': 'string', 'name': 'vmprofileid', 'description': 'the autoscale profile that contains information about the vms in the vm group.'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale vm group ID'}, {'type': 'int', 'name': 'maxmembers', 'description': 'the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.'}, {'type': 'list', 'name': 'scaleuppolicies', 'description': 'list of scaleup autoscale policies'}], 'description': 'Enables an AutoScale Vm Group'}}, 'configure': {'netscalerloadbalancer': {'name': 'configureNetscalerLoadBalancer', 'related': ['listNetscalerLoadBalancers'], 'isasync': True, 'params': [{'name': 'lbdevicecapacity', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'capacity of the device, Capacity will be interpreted as number of networks device can handle'}, {'name': 'inline', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if netscaler load balancer is intended to be used in in-line with firewall, false if netscaler load balancer will side-by-side with firewall'}, {'name': 'lbdeviceid', 'required': True, 'related': ['listNetscalerLoadBalancers', 'configureNetscalerLoadBalancer'], 'length': 255, 'type': 'uuid', 'description': 'Netscaler load balancer device ID'}, {'name': 'podids', 'required': False, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'list', 'description': "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device."}, {'name': 'lbdevicededicated', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this netscaler device to dedicated for a account, false if the netscaler device will be shared by multiple accounts'}], 'requiredparams': ['lbdeviceid'], 'response': [{'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the load balancer'}, {'type': 'string', 'name': 'lbdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this netscaler device belongs to'}, {'type': 'boolean', 'name': 'isexclusivegslbprovider', 'description': 'true if NetScaler device is provisioned exclusively to be a GSLB service provider'}, {'type': 'long', 'name': 'lbdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external load balancer'}, {'type': 'list', 'name': 'podids', 'description': "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device."}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the load balancer'}, {'type': 'string', 'name': 'gslbproviderprivateip', 'description': 'private IP of the NetScaler representing GSLB site'}, {'type': 'boolean', 'name': 'lbdevicededicated', 'description': 'true if device is dedicated for an account'}, {'type': 'boolean', 'name': 'gslbprovider', 'description': 'true if NetScaler device is provisioned to be a GSLB service provider'}, {'type': 'string', 'name': 'gslbproviderpublicip', 'description': 'public IP of the NetScaler representing GSLB site'}, {'type': 'string', 'name': 'lbdeviceid', 'description': 'device id of the netscaler load balancer'}, {'type': 'string', 'name': 'lbdevicename', 'description': 'device name'}], 'description': 'configures a netscaler load balancer device'}, 'paloaltofirewall': {'name': 'configurePaloAltoFirewall', 'related': [], 'isasync': True, 'params': [{'name': 'fwdevicecapacity', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'capacity of the firewall device, Capacity will be interpreted as number of networks device can handle'}, {'name': 'fwdeviceid', 'required': True, 'related': ['configurePaloAltoFirewall'], 'length': 255, 'type': 'uuid', 'description': 'Palo Alto firewall device ID'}], 'requiredparams': ['fwdeviceid'], 'response': [{'type': 'string', 'name': 'fwdeviceid', 'description': 'device id of the Palo Alto firewall'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this Palo Alto firewall belongs to'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}, {'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'string', 'name': 'fwdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}, {'type': 'string', 'name': 'fwdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}, {'type': 'long', 'name': 'fwdevicecapacity', 'description': 'device capacity'}], 'description': 'Configures a Palo Alto firewall device'}, 'ovselement': {'name': 'configureOvsElement', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['configureOvsElement'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the ovs provider'}, {'name': 'enabled', 'required': True, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Enabled/Disabled the service provider'}], 'requiredparams': ['id', 'enabled'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the id of the ovs'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the provider'}, {'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the provider'}, {'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the service provider'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the provider'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the provider'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}], 'description': 'Configures an ovs element.'}, 'f5loadbalancer': {'name': 'configureF5LoadBalancer', 'related': ['addF5LoadBalancer'], 'isasync': True, 'params': [{'name': 'lbdevicecapacity', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'capacity of the device, Capacity will be interpreted as number of networks device can handle'}, {'name': 'lbdeviceid', 'required': True, 'related': ['configureF5LoadBalancer', 'addF5LoadBalancer'], 'length': 255, 'type': 'uuid', 'description': 'F5 load balancer device ID'}], 'requiredparams': ['lbdeviceid'], 'response': [{'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the load balancer'}, {'type': 'long', 'name': 'lbdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'lbdeviceid', 'description': 'device id of the F5 load balancer'}, {'type': 'string', 'name': 'lbdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external load balancer'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the load balancer'}, {'type': 'string', 'name': 'lbdevicename', 'description': 'device name'}, {'type': 'boolean', 'name': 'lbdevicededicated', 'description': 'true if device is dedicated for an account'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this F5 device belongs to'}], 'description': 'configures a F5 load balancer device'}, 'virtualrouterelement': {'name': 'configureVirtualRouterElement', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['configureVirtualRouterElement'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual router provider'}, {'name': 'enabled', 'required': True, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Enabled/Disabled the service provider'}], 'requiredparams': ['id', 'enabled'], 'response': [{'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the provider'}, {'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the service provider'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the provider'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the provider'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the provider'}], 'description': 'Configures a virtual router element.'}, 'srxfirewall': {'name': 'configureSrxFirewall', 'related': ['listSrxFirewalls'], 'isasync': True, 'params': [{'name': 'fwdevicecapacity', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'capacity of the firewall device, Capacity will be interpreted as number of networks device can handle'}, {'name': 'fwdeviceid', 'required': True, 'related': ['listSrxFirewalls', 'configureSrxFirewall'], 'length': 255, 'type': 'uuid', 'description': 'SRX firewall device ID'}], 'requiredparams': ['fwdeviceid'], 'response': [{'type': 'long', 'name': 'fwdevicecapacity', 'description': 'device capacity'}, {'type': 'string', 'name': 'numretries', 'description': 'the number of times to retry requests to the external firewall'}, {'type': 'string', 'name': 'timeout', 'description': 'the timeout (in seconds) for requests to the external firewall'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external firewall'}, {'type': 'string', 'name': 'fwdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this SRX firewall belongs to'}, {'type': 'string', 'name': 'privatezone', 'description': 'the private security zone of the external firewall'}, {'type': 'string', 'name': 'username', 'description': "the username that's used to log in to the external firewall"}, {'type': 'string', 'name': 'fwdeviceid', 'description': 'device id of the SRX firewall'}, {'type': 'string', 'name': 'publicinterface', 'description': 'the public interface of the external firewall'}, {'type': 'string', 'name': 'fwdevicestate', 'description': 'device state'}, {'type': 'string', 'name': 'usageinterface', 'description': 'the usage interface of the external firewall'}, {'type': 'string', 'name': 'provider', 'description': 'name of the provider'}, {'type': 'string', 'name': 'privateinterface', 'description': 'the private interface of the external firewall'}, {'type': 'string', 'name': 'publiczone', 'description': 'the public security zone of the external firewall'}, {'type': 'string', 'name': 'zoneid', 'description': 'the zone ID of the external firewall'}], 'description': 'Configures a SRX firewall device'}, 'internalloadbalancerelement': {'name': 'configureInternalLoadBalancerElement', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['configureInternalLoadBalancerElement'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the internal lb provider'}, {'name': 'enabled', 'required': True, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Enables/Disables the Internal Load Balancer element'}], 'requiredparams': ['id', 'enabled'], 'response': [{'type': 'boolean', 'name': 'enabled', 'description': 'Enabled/Disabled the element'}, {'type': 'string', 'name': 'id', 'description': 'the id of the internal load balancer element'}, {'type': 'string', 'name': 'nspid', 'description': 'the physical network service provider id of the element'}], 'description': 'Configures an Internal Load Balancer element.'}}, 'associate': {'ucsprofiletoblade': {'name': 'associateUcsProfileToBlade', 'related': ['listUcsBlades'], 'isasync': True, 'params': [{'name': 'ucsmanagerid', 'required': True, 'related': ['addUcsManager'], 'length': 255, 'type': 'uuid', 'description': 'ucs manager id'}, {'name': 'bladeid', 'required': True, 'related': ['associateUcsProfileToBlade', 'listUcsBlades'], 'length': 255, 'type': 'uuid', 'description': 'blade id'}, {'name': 'profiledn', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'profile dn'}], 'requiredparams': ['ucsmanagerid', 'bladeid', 'profiledn'], 'response': [{'type': 'string', 'name': 'ucsmanagerid', 'description': 'ucs manager id'}, {'type': 'string', 'name': 'hostid', 'description': 'cloudstack host id this blade associates to'}, {'type': 'string', 'name': 'id', 'description': 'ucs blade id'}, {'type': 'string', 'name': 'profiledn', 'description': 'associated ucs profile dn'}, {'type': 'string', 'name': 'bladedn', 'description': 'ucs blade dn'}], 'description': 'associate a profile to a blade'}, 'ipaddress': {'name': 'associateIpAddress', 'related': ['associateIpAddress', 'listPublicIpAddresses'], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the IP to the end user or not'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the domain to associate with this IP address'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the availability zone you want to acquire an public IP address from'}, {'name': 'networkid', 'required': False, 'related': ['listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The network this IP address should be associated to.'}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'Deploy VM for the project'}, {'name': 'regionid', 'required': False, 'related': ['addRegion'], 'length': 255, 'type': 'integer', 'description': 'region ID from where portable IP is to be associated.'}, {'name': 'vpcid', 'required': False, 'related': ['updateVPC', 'listVPCs', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'the VPC you want the IP address to be associated with'}, {'name': 'isportable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'should be set to true if public IP is required to be transferable across zones, if not specified defaults to false'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account to associate with this IP address'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'purpose', 'description': 'purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'account', 'description': 'the account the public IP address is associated with'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is public ip for display to the regular user'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the Network where ip belongs to'}, {'type': 'string', 'name': 'id', 'description': 'public IP address id'}, {'type': 'boolean', 'name': 'isportable', 'description': 'is public IP portable across the zones'}, {'type': 'string', 'name': 'ipaddress', 'description': 'public IP address'}, {'type': 'boolean', 'name': 'issourcenat', 'description': 'true if the IP address is a source nat address, false otherwise'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'virutal machine name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'associatednetworkname', 'description': 'the name of the Network associated with the IP address'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if this ip is system ip (was allocated as a part of deployVm or createLbRule)'}, {'type': 'string', 'name': 'state', 'description': 'State of the ip address. Can be: Allocatin, Allocated and Releasing'}, {'description': 'the list of resource tags associated with ip address', 'type': 'list', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the IP address'}, {'type': 'string', 'name': 'vlanname', 'description': 'the VLAN associated with the IP address'}, {'type': 'boolean', 'name': 'isstaticnat', 'description': 'true if this ip is for static nat, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'virutal machine id the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'vmipaddress', 'description': 'virutal machine (dnat) ip address (not null only for static nat Ip)'}, {'type': 'date', 'name': 'allocated', 'description': 'date the public IP address was acquired'}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'virutal machine display name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'vlanid', 'description': 'the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the ip belongs to'}, {'type': 'string', 'name': 'associatednetworkid', 'description': 'the ID of the Network associated with the IP address'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'domain', 'description': 'the domain the public IP address is associated with'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID the public IP address is associated with'}], 'description': 'Acquires and associates a public IP to an account.'}}, 'stop': {'systemvm': {'name': 'stopSystemVm', 'related': ['rebootSystemVm', 'startSystemVm', 'changeServiceForSystemVm', 'listSystemVms', 'scaleSystemVm', 'migrateSystemVm'], 'isasync': True, 'params': [{'name': 'forced', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force stop the VM.  The caller knows the VM is stopped.'}, {'name': 'id', 'required': True, 'related': ['rebootSystemVm', 'startSystemVm', 'changeServiceForSystemVm', 'listSystemVms', 'stopSystemVm', 'scaleSystemVm', 'migrateSystemVm'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the system virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'privatemacaddress', 'description': 'the private MAC address for the system VM'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the system VM'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the system VM'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the system VM'}, {'type': 'string', 'name': 'jobid', 'description': 'the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the system VM'}, {'type': 'string', 'name': 'privateip', 'description': 'the private IP address for the system VM'}, {'type': 'integer', 'name': 'activeviewersessions', 'description': 'the number of active console sessions for the console proxy system vm'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the system VM'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the system vm'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the system VM'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the system VM'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the system VM'}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.'}, {'type': 'string', 'name': 'privatenetmask', 'description': 'the private netmask for the system VM'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the system vm'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the system VM was created'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the system VM'}, {'type': 'string', 'name': 'state', 'description': 'the state of the system VM'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'the system VM type'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the system VM'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the system VM'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the system VM'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the system VM'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the system VM'}, {'type': 'string', 'name': 'name', 'description': 'the name of the system VM'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the system vm'}], 'description': 'Stops a system VM.'}, 'router': {'name': 'stopRouter', 'related': ['startRouter', 'rebootRouter', 'destroyRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM', 'startInternalLoadBalancerVM'], 'isasync': True, 'params': [{'name': 'forced', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force stop the VM. The caller knows the VM is stopped.'}, {'name': 'id', 'required': True, 'related': ['startRouter', 'rebootRouter', 'destroyRouter', 'stopRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM', 'startInternalLoadBalancerVM'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the router'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}], 'description': 'Stops a router.'}, 'internalloadbalancervm': {'name': 'stopInternalLoadBalancerVM', 'related': ['startRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['startRouter', 'changeServiceForRouter', 'listInternalLoadBalancerVMs', 'stopInternalLoadBalancerVM'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the internal lb vm'}, {'name': 'forced', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force stop the VM. The caller knows the VM is stopped.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'linklocalip', 'description': 'the link local IP address for the router'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'state', 'name': 'state', 'description': 'the state of the router'}, {'type': 'string', 'name': 'linklocalmacaddress', 'description': 'the link local MAC address for the router'}, {'type': 'string', 'name': 'guestmacaddress', 'description': 'the guest MAC address for the router'}, {'type': 'string', 'name': 'guestnetmask', 'description': 'the guest netmask for the router'}, {'type': 'string', 'name': 'scriptsversion', 'description': 'the version of scripts'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'linklocalnetmask', 'description': 'the link local netmask for the router'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'version', 'description': 'the version of template'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID associated with the router'}, {'type': 'string', 'name': 'hostname', 'description': 'the hostname for the router'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain for the router'}, {'type': 'string', 'name': 'linklocalnetworkid', 'description': 'the ID of the corresponding link local network'}, {'type': 'string', 'name': 'publicnetworkid', 'description': 'the ID of the corresponding public network'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the router was created'}, {'type': 'boolean', 'name': 'isredundantrouter', 'description': 'if this router is an redundant virtual router'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the router'}, {'type': 'boolean', 'name': 'requiresupgrade', 'description': 'true if the router template requires upgrader'}, {'type': 'string', 'name': 'id', 'description': 'the id of the router'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address for the router'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name for the router'}, {'type': 'string', 'name': 'guestnetworkid', 'description': 'the ID of the corresponding guest network'}, {'type': 'string', 'name': 'templateid', 'description': 'the template ID for the router'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway for the router'}, {'type': 'string', 'name': 'hostid', 'description': 'the host ID for the router'}, {'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the router'}, {'type': 'string', 'name': 'publicmacaddress', 'description': 'the public MAC address for the router'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the router'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the router'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the router'}, {'type': 'string', 'name': 'publicnetmask', 'description': 'the public netmask for the router'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the router'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the router belongs to'}, {'type': 'string', 'name': 'role', 'description': 'role of the domain router'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID for the router'}, {'type': 'string', 'name': 'name', 'description': 'the name of the router'}, {'description': 'the list of nics associated with the router', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'guestipaddress', 'description': 'the guest IP address for the router'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the router'}, {'type': 'string', 'name': 'redundantstate', 'description': 'the state of redundant virtual router'}], 'description': 'Stops an Internal LB vm.'}, 'virtualmachine': {'name': 'stopVirtualMachine', 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}, {'name': 'forced', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend).  The caller knows the VM is stopped.'}], 'requiredparams': ['id'], 'response': [{'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'name': 'ingressrule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}], 'name': 'egressrule'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}], 'name': 'nic'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}], 'description': 'Stops a virtual machine.'}}, 'update': {'loadbalancerrule': {'name': 'updateLoadBalancerRule', 'related': ['listLoadBalancerRules', 'createLoadBalancerRule'], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'description', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the description of the load balancer rule'}, {'name': 'id', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule to update'}, {'name': 'algorithm', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'load balancer algorithm (source, roundrobin, leastconn)'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the load balancer rule'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the rule belongs to'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'publicport', 'description': 'the public port'}, {'type': 'string', 'name': 'privateport', 'description': 'the private port'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'id', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}, {'type': 'string', 'name': 'name', 'description': 'the name of the load balancer'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address'}, {'type': 'string', 'name': 'description', 'description': 'the description of the load balancer'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address id'}, {'description': 'the list of resource tags associated with load balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the loadbalanacer rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the lb rule belongs to'}], 'description': 'Updates load balancer'}, 'domain': {'name': 'updateDomain', 'related': ['listDomains', 'listDomainChildren'], 'isasync': False, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'updates domain with this name'}, {'name': 'id', 'required': True, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'ID of domain to update'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "Network domain for the domain's networks; empty string will update domainName with NULL value"}], 'requiredparams': ['id'], 'response': [{'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by domain'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this domain'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this domain'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by domain'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by domain'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the domain'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this domain to acquire'}, {'type': 'string', 'name': 'state', 'description': 'the state of the domain'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this domain'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by domain'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by domain'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the domain can own'}, {'type': 'string', 'name': 'name', 'description': 'the name of the domain'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this domain to acquire'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this domain'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this domain'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this domain'}, {'type': 'string', 'name': 'path', 'description': 'the path of the domain'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the domain can own'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this domain'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this domain'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this domain'}, {'type': 'integer', 'name': 'level', 'description': 'the level of the domain'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this domain'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the domain can own'}, {'type': 'boolean', 'name': 'haschild', 'description': 'whether the domain has one or more sub-domains'}, {'type': 'string', 'name': 'parentdomainname', 'description': 'the domain name of the parent domain'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this domain'}, {'type': 'string', 'name': 'parentdomainid', 'description': 'the domain ID of the parent domain'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the domain can own'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this domain can acquire'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this domain'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this domain'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this domain'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by domain'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the domain can own'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this domain'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this domain'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this domain'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the domain can own'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the domain can own'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this domain'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this domain'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this domain'}], 'description': 'Updates a domain with a new name'}, 'projectinvitation': {'name': 'updateProjectInvitation', 'related': [], 'isasync': True, 'params': [{'name': 'token', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'list invitations for specified account; this parameter has to be specified with domainId'}, {'name': 'accept', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true, accept the invitation, decline if false. True by default'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'account that is joining the project'}, {'name': 'projectid', 'required': True, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'id of the project to join'}], 'requiredparams': ['projectid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Accepts or declines project invitation'}, 'snapshotpolicy': {'name': 'updateSnapshotPolicy', 'related': ['listSnapshotPolicies', 'createSnapshotPolicy'], 'isasync': True, 'params': [{'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the snapshot policy to the end user or not.'}, {'name': 'id', 'required': False, 'related': ['listSnapshotPolicies', 'createSnapshotPolicy', 'updateSnapshotPolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the snapshot policy'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the snapshot policy'}, {'type': 'string', 'name': 'volumeid', 'description': 'the ID of the disk volume'}, {'type': 'string', 'name': 'timezone', 'description': 'the time zone of the snapshot policy'}, {'type': 'int', 'name': 'maxsnaps', 'description': 'maximum number of snapshots retained'}, {'type': 'string', 'name': 'schedule', 'description': 'time the snapshot is scheduled to be taken.'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is this policy for display to the regular user'}, {'type': 'short', 'name': 'intervaltype', 'description': 'the interval type of the snapshot policy'}], 'description': 'Updates the snapshot policy.'}, 'diskoffering': {'name': 'updateDiskOffering', 'related': ['createDiskOffering', 'listDiskOfferings'], 'isasync': False, 'params': [{'name': 'sortkey', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'sort key of the disk offering, integer'}, {'name': 'displayoffering', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to display the offering to the end user or not.'}, {'name': 'id', 'required': True, 'related': ['updateDiskOffering', 'createDiskOffering', 'listDiskOfferings'], 'length': 255, 'type': 'uuid', 'description': 'ID of the disk offering'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'updates alternate display text of the disk offering with this value'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'updates name of the disk offering with this value'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'displayoffering', 'description': 'whether to display the offering to the end user or not.'}, {'type': 'integer', 'name': 'hypervisorsnapshotreserve', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'type': 'string', 'name': 'cacheMode', 'description': 'the cache mode to use for this disk offering. none, writeback or writethrough'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk offering'}, {'type': 'long', 'name': 'miniops', 'description': 'the min iops of the disk offering'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk offering'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk offering'}, {'type': 'string', 'name': 'id', 'description': 'unique ID of the disk offering'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the disk offering.'}, {'type': 'string', 'name': 'name', 'description': 'the name of the disk offering'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.'}, {'type': 'date', 'name': 'created', 'description': 'the date this disk offering was created'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the disk offering'}, {'type': 'boolean', 'name': 'iscustomizediops', 'description': 'true if disk offering uses custom iops, false otherwise'}, {'type': 'long', 'name': 'disksize', 'description': 'the size of the disk offering in GB'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk offering'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'type': 'boolean', 'name': 'iscustomized', 'description': 'true if disk offering uses custom size, false otherwise'}, {'type': 'string', 'name': 'storagetype', 'description': 'the storage type for this disk offering'}, {'type': 'long', 'name': 'maxiops', 'description': 'the max iops of the disk offering'}], 'description': 'Updates a disk offering.'}, 'virtualmachine': {'name': 'updateVirtualMachine', 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}, {'name': 'isdynamicallyscalable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if VM contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'name': 'group', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'group of the virtual machine'}, {'name': 'displayname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'user generated name'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'userdata', 'required': False, 'related': [], 'length': 32768, 'type': 'string', 'description': 'an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Details in key/value pairs.'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'new host name of the vm. The VM has to be stopped/started for this update to take affect'}, {'name': 'haenable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if high-availability is enabled for the virtual machine, false otherwise'}, {'name': 'displayvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vm to the end user or not.'}, {'name': 'instancename', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'instance name of the user vm'}, {'name': 'ostypeid', 'required': False, 'related': ['addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the OS type that best represents this VM.'}], 'requiredparams': ['id'], 'response': [{'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}], 'name': 'nic'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}], 'description': 'Updates properties of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect. UpdateVirtualMachine does not first check whether the VM is stopped. Therefore, stop the VM manually before issuing this call.'}, 'portforwardingrule': {'name': 'updatePortForwardingRule', 'related': ['listIpForwardingRules', 'createPortForwardingRule', 'listPortForwardingRules'], 'isasync': True, 'params': [{'name': 'vmguestip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'VM guest nic Secondary ip address for the port forwarding rule'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'privateport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the private port of the port forwarding rule'}, {'name': 'id', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the port forwarding rule'}, {'name': 'virtualmachineid', 'required': False, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine for the port forwarding rule'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the port forwarding rule belongs to'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'privateport', 'description': "the starting port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the port forwarding rule'}, {'type': 'string', 'name': 'publicport', 'description': "the starting port of port forwarding rule's public port range"}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'the VM name for the port forwarding rule'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is firewall for display to the regular user'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the port forwarding rule'}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the port forwarding rule'}, {'type': 'string', 'name': 'privateendport', 'description': "the ending port of port forwarding rule's private port range"}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'the VM ID for the port forwarding rule'}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'the VM display name for the port forwarding rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'vmguestip', 'description': 'the vm ip address for the port forwarding rule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the port forwarding rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'publicendport', 'description': "the ending port of port forwarding rule's private port range"}], 'description': 'Updates a port forwarding rule. Only the private port and the virtual machine can be updated.'}, 'cluster': {'name': 'updateCluster', 'related': [], 'isasync': False, 'params': [{'name': 'clustername', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the cluster name'}, {'name': 'managedstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'whether this cluster is managed by cloudstack'}, {'name': 'hypervisor', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'hypervisor type of the cluster'}, {'name': 'id', 'required': True, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Cluster'}, {'name': 'clustertype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'hypervisor type of the cluster'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this cluster for allocation of new resources'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'hypervisortype', 'description': 'the hypervisor type of the cluster'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the cluster'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the cluster'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the cluster'}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the cluster'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the cluster'}, {'type': 'string', 'name': 'memoryovercommitratio', 'description': 'The memory overcommit ratio of the cluster'}, {'type': 'string', 'name': 'managedstate', 'description': 'whether this cluster is managed by cloudstack'}, {'type': 'string', 'name': 'id', 'description': 'the cluster ID'}, {'description': 'the capacity of the Cluster', 'type': 'list', 'response': [{'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}, {'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}], 'name': 'capacity'}, {'type': 'string', 'name': 'name', 'description': 'the cluster name'}, {'type': 'string', 'name': 'cpuovercommitratio', 'description': 'The cpu overcommit ratio of the cluster'}, {'type': 'string', 'name': 'ovm3vip', 'description': 'Ovm3 VIP to use for pooling and/or clustering'}, {'type': 'string', 'name': 'clustertype', 'description': 'the type of the cluster'}], 'description': 'Updates an existing cluster'}, 'guestos': {'name': 'updateGuestOs', 'related': ['listOsTypes', 'addGuestOs'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listOsTypes', 'updateGuestOs', 'addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'UUID of the Guest OS'}, {'name': 'osdisplayname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Unique display name for Guest OS'}], 'requiredparams': ['id', 'osdisplayname'], 'response': [{'type': 'string', 'name': 'oscategoryid', 'description': 'the ID of the OS category'}, {'type': 'string', 'name': 'isuserdefined', 'description': 'is the guest OS user defined'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the OS type'}, {'type': 'string', 'name': 'description', 'description': 'the name/description of the OS type'}], 'description': 'Updates the information about Guest OS'}, 'hostpassword': {'name': 'updateHostPassword', 'related': [], 'isasync': False, 'params': [{'name': 'clusterid', 'required': False, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the cluster ID'}, {'name': 'update_passwd_on_host', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if the password should also be updated on the hosts'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the new password for the host/cluster'}, {'name': 'hostid', 'required': False, 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the host ID'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the username for the host/cluster'}], 'requiredparams': ['password', 'username'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Update password of a host/pool on management server.'}, 'pod': {'name': 'updatePod', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Pod'}, {'name': 'startip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the starting IP address for the Pod'}, {'name': 'gateway', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the gateway for the Pod'}, {'name': 'netmask', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask of the Pod'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this cluster for allocation of new resources'}, {'name': 'endip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IP address for the Pod'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the Pod'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the Pod'}, {'description': 'the capacity of the Pod', 'type': 'list', 'response': [{'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}], 'name': 'capacity'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the Pod'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Pod'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the Pod'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the Pod'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the Pod'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the Pod'}, {'type': 'string', 'name': 'startip', 'description': 'the starting IP for the Pod'}, {'type': 'string', 'name': 'endip', 'description': 'the ending IP for the Pod'}], 'description': 'Updates a Pod.'}, 'vpnconnection': {'name': 'updateVpnConnection', 'related': ['listVpnConnections', 'resetVpnConnection'], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpn to the end user or not'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'id', 'required': True, 'related': ['updateVpnConnection', 'listVpnConnections', 'resetVpnConnection'], 'length': 255, 'type': 'uuid', 'description': 'id of vpn connection'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'gateway', 'description': 'public ip address id of the customer gateway'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is connection for display to the regular user'}, {'type': 'boolean', 'name': 'dpd', 'description': 'if DPD is enabled for customer gateway'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 's2svpngatewayid', 'description': 'the vpn gateway ID'}, {'type': 'string', 'name': 'cidrlist', 'description': 'guest cidr list of the customer gateway'}, {'type': 'string', 'name': 'esppolicy', 'description': 'ESP policy of the customer gateway'}, {'type': 'long', 'name': 'ikelifetime', 'description': 'Lifetime of IKE SA of customer gateway'}, {'type': 'boolean', 'name': 'passive', 'description': 'State of vpn connection'}, {'type': 'string', 'name': 'state', 'description': 'State of vpn connection'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address'}, {'type': 'string', 'name': 's2scustomergatewayid', 'description': 'the customer gateway ID'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'id', 'description': 'the connection ID'}, {'type': 'string', 'name': 'ipsecpsk', 'description': 'IPsec Preshared-Key of the customer gateway'}, {'type': 'long', 'name': 'esplifetime', 'description': 'Lifetime of ESP SA of customer gateway'}, {'type': 'string', 'name': 'ikepolicy', 'description': 'IKE policy of the customer gateway'}], 'description': 'Updates site to site vpn connection'}, 'isopermissions': {'name': 'updateIsoPermissions', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the template ID'}, {'name': 'isextractable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template/iso is extractable, false other wise. Can be set only by root admin'}, {'name': 'op', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'permission operator (add, remove, reset)'}, {'name': 'isfeatured', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true for featured template/iso, false otherwise'}, {'name': 'projectids', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'list', 'description': 'a comma delimited list of projects. If specified, "op" parameter has to be passed in.'}, {'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true for public template/iso, false for private templates/isos'}, {'name': 'accounts', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'a comma delimited list of accounts. If specified, "op" parameter has to be passed in.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Updates ISO permissions'}, 'resourcelimit': {'name': 'updateResourceLimit', 'related': ['listResourceLimits'], 'isasync': False, 'params': [{'name': 'max', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': '  Maximum resource limit.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'Update resource limits for all accounts in specified domain. If used with the account parameter, updates resource limits for a specified account in specified domain.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'Update resource limits for project'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Update resource for a specified account. Must be used with the domainId parameter.'}, {'name': 'resourcetype', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Type of resource to update. Values are 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 and 11. 0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create. 3 - Snapshot. Number of snapshots a user can create. 4 - Template. Number of templates that a user can register/create. 6 - Network. Number of guest network a user can create. 7 - VPC. Number of VPC a user can create. 8 - CPU. Total number of CPU cores a user can use. 9 - Memory. Total Memory (in MB) a user can use. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. '}], 'requiredparams': ['resourcetype'], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the resource limit'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the resource limit'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the resource limit'}, {'type': 'string', 'name': 'account', 'description': 'the account of the resource limit'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the resource limit'}, {'type': 'long', 'name': 'max', 'description': 'the maximum number of the resource. A -1 means the resource currently has no limit.'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.'}], 'description': 'Updates resource limits for an account or domain.'}, 'lbstickinesspolicy': {'name': 'updateLBStickinessPolicy', 'related': ['createLBStickinessPolicy', 'listLBStickinessPolicies'], 'isasync': True, 'params': [{'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'id', 'required': True, 'related': ['createLBStickinessPolicy', 'updateLBStickinessPolicy', 'listLBStickinessPolicies'], 'length': 255, 'type': 'uuid', 'description': 'id of lb stickiness policy'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the policy to the end user or not'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain of the Stickiness policy'}, {'description': 'the list of stickinesspolicies', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'fordisplay', 'description': 'is policy for display to the regular user'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Stickiness policy'}, {'type': 'string', 'name': 'id', 'description': 'the LB Stickiness policy ID'}, {'type': 'string', 'name': 'methodname', 'description': 'the method name of the Stickiness policy'}, {'type': 'map', 'name': 'params', 'description': 'the params of the policy'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Stickiness policy'}], 'name': 'stickinesspolicy'}, {'type': 'string', 'name': 'account', 'description': 'the account of the Stickiness policy'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the Stickiness policy belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the Stickiness policy'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the LB rule ID'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Stickiness policy'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Stickiness policy'}], 'description': 'Updates load balancer stickiness policy'}, 'vpcoffering': {'name': 'updateVPCOffering', 'related': ['listVPCOfferings', 'createVPCOffering'], 'isasync': True, 'params': [{'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the VPC offering'}, {'name': 'id', 'required': True, 'related': ['listVPCOfferings', 'createVPCOffering', 'updateVPCOffering'], 'length': 255, 'type': 'uuid', 'description': 'the id of the VPC offering'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'update state for the VPC offering; supported states - Enabled/Disabled'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the VPC offering'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the vpc offering.'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if vpc offering is default, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the vpc offering'}, {'type': 'boolean', 'name': 'supportsregionLevelvpc', 'description': ' indicated if the offering can support region level vpc'}, {'type': 'string', 'name': 'id', 'description': 'the id of the vpc offering'}, {'type': 'boolean', 'name': 'distributedvpcrouter', 'description': ' indicates if the vpc offering supports distributed router for one-hop forwarding'}, {'type': 'string', 'name': 'state', 'description': 'state of the vpc offering. Can be Disabled/Enabled'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'date', 'name': 'created', 'description': 'the date this vpc offering was created'}], 'description': 'Updates VPC offering'}, 'network': {'name': 'updateNetwork', 'related': ['listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'listNetworks'], 'isasync': True, 'params': [{'name': 'changecidr', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force update even if CIDR type is different'}, {'name': 'id', 'required': True, 'related': ['listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the new name for the network'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'network domain'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the new display text for the network'}, {'name': 'displaynetwork', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'name': 'guestvmcidr', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'CIDR for guest VMs, CloudStack allocates IPs to guest VMs only from this CIDR'}, {'name': 'networkofferingid', 'required': False, 'related': ['updateNetworkOffering'], 'length': 255, 'type': 'uuid', 'description': 'network offering ID'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}], 'name': 'service'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}], 'description': 'Updates a network'}, 'cloudtouseobjectstore': {'name': 'updateCloudToUseObjectStore', 'related': ['addSecondaryStorage', 'listImageStores', 'addS3', 'listSwifts', 'listSecondaryStagingStores', 'listS3s', 'addImageStore', 'addSwift', 'createSecondaryStagingStore'], 'isasync': False, 'params': [{'name': 'provider', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the image store provider name'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name for the image store'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss'}, {'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL for the image store'}], 'requiredparams': ['provider'], 'response': [{'type': 'scopetype', 'name': 'scope', 'description': 'the scope of the image store'}, {'type': 'string', 'name': 'url', 'description': 'the url of the image store'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the image store'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the image store'}, {'type': 'string', 'name': 'providername', 'description': 'the provider name of the image store'}, {'type': 'string', 'name': 'name', 'description': 'the name of the image store'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the image store'}, {'type': 'set', 'name': 'details', 'description': 'the details of the image store'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the image store'}], 'description': 'Migrate current NFS secondary storages to use object store.'}, 'remoteaccessvpn': {'name': 'updateRemoteAccessVpn', 'related': ['createRemoteAccessVpn', 'listRemoteAccessVpns'], 'isasync': True, 'params': [{'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpn to the end user or not'}, {'name': 'id', 'required': True, 'related': ['updateRemoteAccessVpn', 'createRemoteAccessVpn', 'listRemoteAccessVpns'], 'length': 255, 'type': 'uuid', 'description': 'id of the remote access vpn'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address of the vpn server'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpn for display to the regular user'}, {'type': 'string', 'name': 'iprange', 'description': 'the range of ips to allocate to the clients'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'presharedkey', 'description': 'the ipsec preshared key'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the account of the remote access vpn'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address of the vpn server'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the account of the remote access vpn'}, {'type': 'string', 'name': 'account', 'description': 'the account of the remote access vpn'}, {'type': 'string', 'name': 'id', 'description': 'the id of the remote access vpn'}], 'description': 'Updates remote access vpn'}, 'guestosmapping': {'name': 'updateGuestOsMapping', 'related': ['addGuestOsMapping'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateGuestOsMapping', 'addGuestOsMapping'], 'length': 255, 'type': 'uuid', 'description': 'UUID of the Guest OS to hypervisor name Mapping'}, {'name': 'osnameforhypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hypervisor specific name for this Guest OS'}], 'requiredparams': ['id', 'osnameforhypervisor'], 'response': [{'type': 'string', 'name': 'osnameforhypervisor', 'description': 'hypervisor specific name for the Guest OS'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the Guest OS mapping'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the Guest OS type'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'version of the hypervisor for mapping'}, {'type': 'string', 'name': 'isuserdefined', 'description': 'is the mapping user defined'}, {'type': 'string', 'name': 'osdisplayname', 'description': 'standard display name for the Guest OS'}], 'description': 'Updates the information about Guest OS to Hypervisor specific name mapping'}, 'instancegroup': {'name': 'updateInstanceGroup', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['updateInstanceGroup'], 'length': 255, 'type': 'uuid', 'description': 'Instance group ID'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'new instance group name'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the instance group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the instance group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the instance group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project ID of the instance group'}, {'type': 'date', 'name': 'created', 'description': 'time and date the instance group was created'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the instance group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the instance group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}], 'description': 'Updates a vm group'}, 'autoscalepolicy': {'name': 'updateAutoScalePolicy', 'related': ['createAutoScalePolicy'], 'isasync': True, 'params': [{'name': 'duration', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the duration for which the conditions have to be true before action is taken'}, {'name': 'quiettime', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the cool down period for which the policy should not be evaluated after the action has been taken'}, {'name': 'id', 'required': True, 'related': ['updateAutoScalePolicy', 'createAutoScalePolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale policy'}, {'name': 'conditionids', 'required': False, 'related': ['listConditions'], 'length': 255, 'type': 'list', 'description': 'the list of IDs of the conditions that are being evaluated on every interval'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id autoscale policy'}, {'type': 'integer', 'name': 'duration', 'description': 'the duration for which the conditions have to be true before action is taken'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the autoscale policy'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the autoscale policy'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the autoscale policy'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the autoscale policy'}, {'type': 'list', 'name': 'conditions', 'description': 'the list of IDs of the conditions that are being evaluated on every interval'}, {'type': 'integer', 'name': 'quiettime', 'description': 'the cool down period for which the policy should not be evaluated after the action has been taken'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale policy ID'}, {'type': 'string', 'name': 'action', 'description': 'the action to be executed if all the conditions evaluate to true for the specified duration.'}], 'description': 'Updates an existing autoscale policy.'}, 'globalloadbalancerrule': {'name': 'updateGlobalLoadBalancerRule', 'related': ['listGlobalLoadBalancerRules'], 'isasync': True, 'params': [{'name': 'gslbstickysessionmethodname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'session sticky method (sourceip) if not specified defaults to sourceip'}, {'name': 'gslblbmethod', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "load balancer algorithm (roundrobin, leastconn, proximity) that is used to distributed traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'"}, {'name': 'description', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the description of the load balancer rule'}, {'name': 'id', 'required': True, 'related': ['updateGlobalLoadBalancerRule', 'listGlobalLoadBalancerRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the global load balancer rule'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'gslblbmethod', 'description': 'Load balancing method used for the global load balancer'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'name', 'description': 'name of the global load balancer rule'}, {'type': 'string', 'name': 'gslbdomainname', 'description': 'DNS domain name given for the global load balancer'}, {'description': 'List of load balancer rules that are part of GSLB rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'description', 'description': 'the description of the load balancer'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the load balancer rule'}, {'type': 'string', 'name': 'publicport', 'description': 'the public port'}, {'type': 'string', 'name': 'id', 'description': 'the load balancer rule ID'}, {'type': 'string', 'name': 'privateport', 'description': 'the private port'}, {'type': 'string', 'name': 'name', 'description': 'the name of the load balancer'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the loadbalanacer rule'}, {'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the rule belongs to'}, {'type': 'string', 'name': 'publicip', 'description': 'the public ip address'}, {'type': 'string', 'name': 'networkid', 'description': 'the id of the guest network the lb rule belongs to'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'description': 'the list of resource tags associated with load balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'publicipid', 'description': 'the public ip address id'}], 'name': 'loadbalancerrule'}, {'type': 'string', 'name': 'gslbstickysessionmethodname', 'description': 'session persistence method used for the global load balancer'}, {'type': 'string', 'name': 'gslbservicetype', 'description': 'GSLB service type'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the load balancer'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the load balancer rule'}, {'type': 'string', 'name': 'account', 'description': 'the account of the load balancer rule'}, {'type': 'string', 'name': 'id', 'description': 'global load balancer rule ID'}, {'type': 'integer', 'name': 'regionid', 'description': 'Region Id in which global load balancer is created'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the load balancer'}, {'type': 'string', 'name': 'description', 'description': 'the description of the global load balancer rule'}], 'description': 'update global load balancer rules.'}, 'serviceoffering': {'name': 'updateServiceOffering', 'related': ['listServiceOfferings', 'createServiceOffering'], 'isasync': False, 'params': [{'name': 'sortkey', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'sort key of the service offering, integer'}, {'name': 'id', 'required': True, 'related': ['listServiceOfferings', 'createServiceOffering', 'updateServiceOffering'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the service offering to be updated'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the service offering to be updated'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the service offering to be updated'}], 'requiredparams': ['id'], 'response': [{'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the service offering'}, {'type': 'string', 'name': 'storagetype', 'description': 'the storage type for this service offering'}, {'type': 'boolean', 'name': 'limitcpuuse', 'description': 'restrict the CPU usage to committed service offering'}, {'type': 'boolean', 'name': 'isvolatile', 'description': 'true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk'}, {'type': 'integer', 'name': 'hypervisorsnapshotreserve', 'description': 'Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)'}, {'type': 'boolean', 'name': 'iscustomized', 'description': 'is true if the offering is customized'}, {'type': 'boolean', 'name': 'offerha', 'description': 'the ha support in the service offering'}, {'type': 'boolean', 'name': 'iscustomizediops', 'description': 'true if disk offering uses custom iops, false otherwise'}, {'type': 'long', 'name': 'maxiops', 'description': 'the max iops of the disk offering'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the service offering'}, {'type': 'string', 'name': 'systemvmtype', 'description': 'is this a the systemvm type for system vm offering'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory in MB'}, {'type': 'boolean', 'name': 'defaultuse', 'description': 'is this a  default system vm offering'}, {'type': 'string', 'name': 'hosttags', 'description': 'the host tag for the service offering'}, {'type': 'string', 'name': 'deploymentplanner', 'description': 'deployment strategy used to deploy VM.'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the service offering'}, {'type': 'date', 'name': 'created', 'description': 'the date this service offering was created'}, {'type': 'string', 'name': 'id', 'description': 'the id of the service offering'}, {'type': 'integer', 'name': 'networkrate', 'description': 'data transfer rate in megabits per second allowed.'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes. Valid values are thin, sparse, fat.'}, {'type': 'boolean', 'name': 'issystem', 'description': 'is this a system vm offering'}, {'type': 'string', 'name': 'name', 'description': 'the name of the service offering'}, {'type': 'long', 'name': 'miniops', 'description': 'the min iops of the disk offering'}, {'type': 'string', 'name': 'domain', 'description': 'Domain name for the offering'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of CPU'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the service offering'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the service offering'}, {'type': 'map', 'name': 'serviceofferingdetails', 'description': 'additional key/value details tied with this service offering'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the service offering'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the clock rate CPU speed in Mhz'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the service offering.'}], 'description': 'Updates a service offering.'}, 'storagepool': {'name': 'updateStoragePool', 'related': ['createStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'cancelStorageMaintenance'], 'isasync': False, 'params': [{'name': 'capacitybytes', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'bytes CloudStack can provision from this storage pool'}, {'name': 'id', 'required': True, 'related': ['createStoragePool', 'updateStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'cancelStorageMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the Id of the storage pool'}, {'name': 'capacityiops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'comma-separated list of tags for the storage pool'}, {'name': 'enabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'false to disable the pool for allocation of new volumes, true to enable it back.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the storage pool'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the storage pool'}, {'type': 'string', 'name': 'type', 'description': 'the storage pool type'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the storage pool'}, {'type': 'string', 'name': 'path', 'description': 'the storage pool path'}, {'type': 'string', 'name': 'name', 'description': 'the name of the storage pool'}, {'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster for the storage pool'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the storage pool'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this pool is suitable to migrate a volume, false otherwise'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor type of the storage pool'}, {'type': 'long', 'name': 'disksizeused', 'description': "the host's currently used disk size"}, {'type': 'map', 'name': 'storagecapabilities', 'description': 'the storage pool capabilities'}, {'type': 'storagepoolstatus', 'name': 'state', 'description': 'the state of the storage pool'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'long', 'name': 'capacityiops', 'description': 'IOPS CloudStack can provision from this storage pool'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the storage pool was created'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the storage pool'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the storage pool'}, {'type': 'string', 'name': 'overprovisionfactor', 'description': 'the overprovisionfactor for the storage pool'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the storage pool'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the storage pool'}, {'type': 'string', 'name': 'scope', 'description': 'the scope of the storage pool'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster for the storage pool'}], 'description': 'Updates a storage pool.'}, 'vpngateway': {'name': 'updateVpnGateway', 'related': [], 'isasync': True, 'params': [{'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'id', 'required': True, 'related': ['updateVpnGateway'], 'length': 255, 'type': 'uuid', 'description': 'id of customer gateway'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpn to the end user or not'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the vpn gateway ID'}, {'type': 'string', 'name': 'vpcid', 'description': 'the vpc id of this gateway'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpn gateway for display to the regular user'}], 'description': 'Updates site to site vpn local gateway'}, 'networkacllist': {'name': 'updateNetworkACLList', 'related': [], 'isasync': True, 'params': [{'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network ACL'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the list to the end user or not'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Updates network ACL list'}, 'hypervisorcapabilities': {'name': 'updateHypervisorCapabilities', 'related': ['listHypervisorCapabilities'], 'isasync': False, 'params': [{'name': 'securitygroupenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'set true to enable security group for this hypervisor.'}, {'name': 'id', 'required': False, 'related': ['updateHypervisorCapabilities', 'listHypervisorCapabilities'], 'length': 255, 'type': 'uuid', 'description': 'ID of the hypervisor capability'}, {'name': 'maxguestslimit', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'the max number of Guest VMs per host for this hypervisor.'}], 'requiredparams': [], 'response': [{'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the hypervisor type'}, {'type': 'long', 'name': 'maxguestslimit', 'description': 'the maximum number of guest vms recommended for this hypervisor'}, {'type': 'boolean', 'name': 'storagemotionenabled', 'description': 'true if storage motion is supported'}, {'type': 'integer', 'name': 'maxhostspercluster', 'description': 'the maximum number of Hosts per cluster for this hypervisor'}, {'type': 'boolean', 'name': 'securitygroupenabled', 'description': 'true if security group is supported'}, {'type': 'integer', 'name': 'maxdatavolumeslimit', 'description': 'the maximum number of Data Volumes that can be attached for this hypervisor'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the hypervisor capabilities row'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}], 'description': 'Updates a hypervisor capabilities.'}, 'template': {'name': 'updateTemplate', 'related': ['listIsos', 'copyIso', 'registerTemplate', 'registerIso', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': False, 'params': [{'name': 'isrouting', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template type is routing i.e., if template is used to deploy router'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the image file'}, {'name': 'requireshvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template requres HVM, false otherwise; available only for updateTemplate API'}, {'name': 'passwordenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the image supports the password reset feature; default is false'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the display text of the image'}, {'name': 'ostypeid', 'required': False, 'related': ['listOsTypes', 'addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the OS type that best represents the OS of this image.'}, {'name': 'id', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the image file'}, {'name': 'format', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the format for the image'}, {'name': 'sortkey', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'sort key of the template, integer'}, {'name': 'isdynamicallyscalable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'name': 'bootable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if image is bootable, false otherwise; available only for updateIso API'}], 'requiredparams': ['id'], 'response': [{'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}], 'description': 'Updates attributes of a template.'}, 'defaultnicforvirtualmachine': {'name': 'updateDefaultNicForVirtualMachine', 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'Virtual Machine ID'}, {'name': 'nicid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'NIC ID'}], 'requiredparams': ['virtualmachineid', 'nicid'], 'response': [{'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}], 'name': 'egressrule'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}], 'description': 'Changes the default NIC on a VM'}, 'volume': {'name': 'updateVolume', 'related': ['createVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': True, 'params': [{'name': 'chaininfo', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The chain info of the volume'}, {'name': 'id', 'required': False, 'related': ['updateVolume', 'createVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}, {'name': 'path', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The path of the volume'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The state of the volume'}, {'name': 'displayvolume', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the volume to the end user or not.'}, {'name': 'storageid', 'required': False, 'related': ['createStoragePool', 'updateStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'cancelStorageMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'Destination storage pool UUID for the volume'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}], 'description': 'Updates the volume.'}, 'host': {'name': 'updateHost', 'related': ['listHosts', 'listExternalLoadBalancers', 'prepareHostForMaintenance'], 'isasync': False, 'params': [{'name': 'oscategoryid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the id of Os category to update the host with'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Change resource state of host, valid values are [Enable, Disable]. Operation may failed if host in states not allowing Enable/Disable'}, {'name': 'url', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the new uri for the secondary storage: nfs://host/path'}, {'name': 'hosttags', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list of tags to be added to the host'}, {'name': 'id', 'required': True, 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the host to update'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the IP address of the host'}, {'type': 'string', 'name': 'oscategoryid', 'description': 'the OS category ID of the host'}, {'type': 'boolean', 'name': 'hahost', 'description': 'true if the host is Ha host (dedicated to vms started by HA process; false otherwise'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'date', 'name': 'lastpinged', 'description': 'the date and time the host was last pinged'}, {'type': 'long', 'name': 'memoryused', 'description': "the amount of the host's memory currently used"}, {'type': 'long', 'name': 'memorytotal', 'description': 'the memory total of the host'}, {'type': 'string', 'name': 'clustername', 'description': 'the cluster name of the host'}, {'type': 'long', 'name': 'cpuspeed', 'description': 'the CPU speed of the host'}, {'type': 'long', 'name': 'managementserverid', 'description': 'the management server ID of the host'}, {'type': 'long', 'name': 'disksizetotal', 'description': 'the total disk size of the host'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the CPU number of the host'}, {'type': 'map', 'name': 'details', 'description': 'Host details in key/value pairs.'}, {'type': 'string', 'name': 'hosttags', 'description': 'comma-separated list of tags for the host'}, {'type': 'date', 'name': 'disconnected', 'description': 'true if the host is disconnected. False otherwise.'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the host'}, {'type': 'boolean', 'name': 'hasenoughcapacity', 'description': 'true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise'}, {'type': 'string', 'name': 'oscategoryname', 'description': 'the OS category name of the host'}, {'type': 'long', 'name': 'disksizeallocated', 'description': "the host's currently allocated disk size"}, {'type': 'string', 'name': 'clustertype', 'description': 'the cluster type of the cluster that host belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the name of the host'}, {'type': 'string', 'name': 'cpuallocated', 'description': "the amount of the host's CPU currently allocated"}, {'type': 'type', 'name': 'type', 'description': 'the host type'}, {'type': 'string', 'name': 'resourcestate', 'description': 'the resource state of the host'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'cpuwithoverprovisioning', 'description': "the amount of the host's CPU after applying the cpu.overprovisioning.factor "}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the host's CPU currently used"}, {'type': 'integer', 'name': 'cpusockets', 'description': 'the number of CPU sockets on the host'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID of the host'}, {'type': 'long', 'name': 'averageload', 'description': 'the cpu average load on the host'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the host'}, {'type': 'status', 'name': 'state', 'description': 'the state of the host'}, {'type': 'hypervisortype', 'name': 'hypervisor', 'description': 'the host hypervisor'}, {'type': 'string', 'name': 'capabilities', 'description': 'capabilities of the host'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the host'}, {'type': 'string', 'name': 'hypervisorversion', 'description': 'the hypervisor version'}, {'type': 'string', 'name': 'clusterid', 'description': 'the cluster ID of the host'}, {'description': 'GPU cards present in the host', 'type': 'list', 'response': [{'description': 'the list of enabled vGPUs', 'type': 'list', 'response': [{'type': 'long', 'name': 'videoram', 'description': 'Video RAM for this vGPU type'}, {'type': 'long', 'name': 'maxresolutionx', 'description': 'Maximum X resolution per display'}, {'type': 'long', 'name': 'maxheads', 'description': 'Maximum displays per user'}, {'type': 'string', 'name': 'vgputype', 'description': 'Model Name of vGPU'}, {'type': 'long', 'name': 'remainingcapacity', 'description': 'Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type'}, {'type': 'long', 'name': 'maxresolutiony', 'description': 'Maximum Y resolution per display'}, {'type': 'long', 'name': 'maxvgpuperpgpu', 'description': 'Maximum no. of vgpu per gpu card (pgpu)'}, {'type': 'long', 'name': 'maxcapacity', 'description': 'Maximum vgpu can be created with this vgpu type on the given gpu group'}], 'name': 'vgpu'}, {'type': 'string', 'name': 'gpugroupname', 'description': 'GPU cards present in the host'}], 'name': 'gpugroup'}, {'type': 'long', 'name': 'memoryallocated', 'description': "the amount of the host's memory currently allocated"}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name of the host'}, {'type': 'string', 'name': 'events', 'description': 'events available for the host'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name of the host'}, {'type': 'boolean', 'name': 'suitableformigration', 'description': 'true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise'}, {'type': 'string', 'name': 'version', 'description': 'the host version'}, {'type': 'boolean', 'name': 'islocalstorageactive', 'description': 'true if local storage is active, false otherwise'}], 'description': 'Updates a host.'}, 'networkaclitem': {'name': 'updateNetworkACLItem', 'related': ['createNetworkACL'], 'isasync': True, 'params': [{'name': 'icmpcode', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'error code for this ICMP message'}, {'name': 'traffictype', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the traffic type for the ACL,can be Ingress or Egress, defaulted to Ingress if not specified'}, {'name': 'id', 'required': True, 'related': ['updateNetworkACLItem', 'createNetworkACL'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network ACL item'}, {'name': 'startport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the starting port of ACL'}, {'name': 'number', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'The network of the vm the ACL will be created for'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'protocol', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number'}, {'name': 'endport', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the ending port of ACL'}, {'name': 'icmptype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'type of the ICMP message being sent'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'cidrlist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the cidr list to allow traffic from/to'}, {'name': 'action', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'scl entry action, allow or deny'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'description': 'the list of resource tags associated with the network ACLs', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of ACL's port range"}, {'type': 'integer', 'name': 'number', 'description': 'Number of the ACL Item'}, {'type': 'string', 'name': 'action', 'description': 'Action of ACL Item. Allow/Deny'}, {'type': 'string', 'name': 'aclid', 'description': 'the ID of the ACL this item belongs to'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the ACL Item'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type for the ACL'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the ACL'}, {'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of ACL's port range"}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}], 'description': 'Updates ACL item with specified ID'}, 'vpc': {'name': 'updateVPC', 'related': ['updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the vpc to the end user or not'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the VPC'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the VPC'}, {'name': 'id', 'required': True, 'related': ['updateVPC', 'updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'the id of the VPC'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'regionlevelvpc', 'description': 'true if VPC is region level'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the VPC'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain of the VPC'}, {'type': 'boolean', 'name': 'redundantvpcrouter', 'description': 'if this VPC has redundant router'}, {'type': 'boolean', 'name': 'distributedvpcrouter', 'description': "is VPC uses distributed router for one hop forwarding and host based network ACL's"}, {'description': 'the list of resource tags associated with the project', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the cidr the VPC'}, {'type': 'string', 'name': 'vpcofferingid', 'description': 'vpc offering id the VPC is created from'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the VPC.'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpc for display to the regular user'}, {'description': 'the list of networks belongign to the VPC', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}], 'name': 'service'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}], 'name': 'network'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the VPC'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the VPC'}, {'type': 'string', 'name': 'id', 'description': 'the id of the VPC'}, {'type': 'string', 'name': 'state', 'description': 'state of the VPC. Can be Inactive/Enabled'}, {'type': 'date', 'name': 'created', 'description': 'the date this VPC was created'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the VPC owner'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the VPC belongs to'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true VPC requires restart'}, {'type': 'string', 'name': 'name', 'description': 'the name of the VPC'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the vpc'}], 'description': 'Updates a VPC'}, 'resourcecount': {'name': 'updateResourceCount', 'related': [], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'Update resource limits for project'}, {'name': 'domainid', 'required': True, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'If account parameter specified then updates resource counts for a specified account in this domain else update resource counts for all accounts & child domains in specified domain.'}, {'name': 'resourcetype', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Type of resource to update. If specifies valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 and 11. If not specified will update all resource counts0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create. 3 - Snapshot. Number of snapshots a user can create. 4 - Template. Number of templates that a user can register/create. 5 - Project. Number of projects that a user can create. 6 - Network. Number of guest network a user can create. 7 - VPC. Number of VPC a user can create. 8 - CPU. Total number of CPU cores a user can use. 9 - Memory. Total Memory (in MB) a user can use. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. '}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Update resource count for a specified account. Must be used with the domainId parameter.'}], 'requiredparams': ['domainid'], 'response': [{'type': 'string', 'name': 'project', 'description': "the project name for which resource count's are updated"}, {'type': 'long', 'name': 'resourcecount', 'description': 'resource count'}, {'type': 'string', 'name': 'domainid', 'description': "the domain ID for which resource count's are updated"}, {'type': 'string', 'name': 'domain', 'description': "the domain name for which resource count's are updated"}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type. Values include 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.'}, {'type': 'string', 'name': 'projectid', 'description': "the project id for which resource count's are updated"}, {'type': 'string', 'name': 'account', 'description': "the account for which resource count's are updated"}], 'description': 'Recalculate and update resource count for an account or domain.'}, 'storagenetworkiprange': {'name': 'updateStorageNetworkIpRange', 'related': ['listStorageNetworkIpRange'], 'isasync': True, 'params': [{'name': 'netmask', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the netmask for storage network'}, {'name': 'endip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the ending IP address'}, {'name': 'startip', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the beginning IP address'}, {'name': 'id', 'required': True, 'related': ['updateStorageNetworkIpRange', 'listStorageNetworkIpRange'], 'length': 255, 'type': 'uuid', 'description': 'UUID of storage network ip range'}, {'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Optional. the vlan the ip range sits on'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'podid', 'description': 'the Pod uuid for the storage network IP range'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the storage network IP range'}, {'type': 'string', 'name': 'endip', 'description': 'the end ip of the storage network IP range'}, {'type': 'integer', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the storage network IP range'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the storage network IP range'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone uuid of the storage network IP range'}, {'type': 'string', 'name': 'networkid', 'description': 'the network uuid of storage network IP range'}, {'type': 'string', 'name': 'id', 'description': 'the uuid of storage network IP range.'}], 'description': 'Update a Storage network IP range, only allowed when no IPs in this range have been allocated.'}, 'configuration': {'name': 'updateConfiguration', 'related': ['listConfigurations'], 'isasync': False, 'params': [{'name': 'clusterid', 'required': False, 'related': ['listClusters', 'updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Cluster to update the parameter value for corresponding cluster'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the configuration'}, {'name': 'value', 'required': False, 'related': [], 'length': 4095, 'type': 'string', 'description': 'the value of the configuration'}, {'name': 'storageid', 'required': False, 'related': ['createStoragePool', 'updateStoragePool', 'findStoragePoolsForMigration', 'listStoragePools', 'enableStorageMaintenance', 'cancelStorageMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Storage pool to update the parameter value for corresponding storage pool'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Zone to update the parameter value for corresponding zone'}, {'name': 'accountid', 'required': False, 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'enableAccount', 'listAccounts', 'updateAccount', 'lockAccount', 'createAccount', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Account to update the parameter value for corresponding account'}], 'requiredparams': ['name'], 'response': [{'type': 'string', 'name': 'category', 'description': 'the category of the configuration'}, {'type': 'string', 'name': 'description', 'description': 'the description of the configuration'}, {'type': 'string', 'name': 'scope', 'description': 'scope(zone/cluster/pool/account) of the parameter that needs to be updated'}, {'type': 'string', 'name': 'name', 'description': 'the name of the configuration'}, {'type': 'long', 'name': 'id', 'description': 'the value of the configuration'}, {'type': 'string', 'name': 'value', 'description': 'the value of the configuration'}], 'description': 'Updates a configuration.'}, 'ipaddress': {'name': 'updateIpAddress', 'related': ['associateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'isasync': True, 'params': [{'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'id', 'required': True, 'related': ['associateIpAddress', 'updateIpAddress', 'associateIpAddress', 'restartNetwork', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the public IP address to update'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the IP to the end user or not'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the IP address'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID the public IP address is associated with'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'vmipaddress', 'description': 'virutal machine (dnat) ip address (not null only for static nat Ip)'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'virutal machine display name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'boolean', 'name': 'isstaticnat', 'description': 'true if this ip is for static nat, false otherwise'}, {'type': 'string', 'name': 'associatednetworkid', 'description': 'the ID of the Network associated with the IP address'}, {'type': 'boolean', 'name': 'issourcenat', 'description': 'true if the IP address is a source nat address, false otherwise'}, {'type': 'boolean', 'name': 'isportable', 'description': 'is public IP portable across the zones'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'virutal machine id the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'domain', 'description': 'the domain the public IP address is associated with'}, {'type': 'string', 'name': 'purpose', 'description': 'purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the Network where ip belongs to'}, {'description': 'the list of resource tags associated with ip address', 'type': 'list', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'the account the public IP address is associated with'}, {'type': 'string', 'name': 'ipaddress', 'description': 'public IP address'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the ip belongs to'}, {'type': 'string', 'name': 'associatednetworkname', 'description': 'the name of the Network associated with the IP address'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is public ip for display to the regular user'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'virutal machine name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'state', 'description': 'State of the ip address. Can be: Allocatin, Allocated and Releasing'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if this ip is system ip (was allocated as a part of deployVm or createLbRule)'}, {'type': 'string', 'name': 'id', 'description': 'public IP address id'}, {'type': 'string', 'name': 'vlanid', 'description': 'the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'vlanname', 'description': 'the VLAN associated with the IP address'}, {'type': 'date', 'name': 'allocated', 'description': 'date the public IP address was acquired'}], 'description': 'Updates an IP address'}, 'templatepermissions': {'name': 'updateTemplatePermissions', 'related': [], 'isasync': False, 'params': [{'name': 'isfeatured', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true for featured template/iso, false otherwise'}, {'name': 'accounts', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'a comma delimited list of accounts. If specified, "op" parameter has to be passed in.'}, {'name': 'op', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'permission operator (add, remove, reset)'}, {'name': 'isextractable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template/iso is extractable, false other wise. Can be set only by root admin'}, {'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true for public template/iso, false for private templates/isos'}, {'name': 'id', 'required': True, 'related': ['listIsos', 'registerTemplate', 'registerIso', 'listTemplates', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the template ID'}, {'name': 'projectids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'a comma delimited list of projects. If specified, "op" parameter has to be passed in.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Updates a template visibility permissions. A public template is visible to all accounts within the same domain. A private template is visible only to the owner of the template. A priviledged template is a private template with account permissions added. Only accounts specified under the template permissions are visible to them.'}, 'autoscalevmprofile': {'name': 'updateAutoScaleVmProfile', 'related': ['listAutoScaleVmProfiles'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listAutoScaleVmProfiles', 'updateAutoScaleVmProfile'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale vm profile'}, {'name': 'autoscaleuserid', 'required': False, 'related': ['enableUser', 'disableUser', 'getUser', 'lockUser', 'updateUser', 'createUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the user used to launch and destroy the VMs'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the profile to the end user or not'}, {'name': 'counterparam', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161'}, {'name': 'destroyvmgraceperiod', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the time allowed for existing connections to get closed before a vm is destroyed'}, {'name': 'templateid', 'required': False, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the template of the auto deployed virtual machine'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the availability zone to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'string', 'name': 'otherdeployparams', 'description': 'parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the service offering to be used while deploying a virtual machine'}, {'type': 'string', 'name': 'autoscaleuserid', 'description': 'the ID of the user used to launch and destroy the VMs'}, {'type': 'string', 'name': 'templateid', 'description': 'the template to be used while deploying a virtual machine'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is profile for display to the regular user'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale vm profile ID'}, {'type': 'integer', 'name': 'destroyvmgraceperiod', 'description': 'the time allowed for existing connections to get closed before a vm is destroyed'}], 'description': 'Updates an existing autoscale vm profile.'}, 'traffictype': {'name': 'updateTrafficType', 'related': ['addTrafficType'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['addTrafficType', 'updateTrafficType'], 'length': 255, 'type': 'uuid', 'description': 'traffic type id'}, {'name': 'vmwarenetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a VMware host'}, {'name': 'xennetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a XenServer host'}, {'name': 'kvmnetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a KVM host'}, {'name': 'ovm3networklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name of the physical device dedicated to this traffic on an OVM3 host'}, {'name': 'hypervnetworklabel', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The network name label of the physical device dedicated to this traffic on a Hyperv host'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'ovm3networklabel', 'description': 'The network name of the physical device dedicated to this traffic on an OVM3 host'}, {'type': 'string', 'name': 'id', 'description': 'id of the network provider'}, {'type': 'string', 'name': 'traffictype', 'description': 'the trafficType to be added to the physical network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'vmwarenetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a VMware host'}, {'type': 'string', 'name': 'hypervnetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a HyperV host'}, {'type': 'string', 'name': 'kvmnetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a KVM host'}, {'type': 'string', 'name': 'xennetworklabel', 'description': 'The network name label of the physical device dedicated to this traffic on a XenServer host'}], 'description': 'Updates traffic type of a physical network'}, 'account': {'name': 'updateAccount', 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'listAccounts', 'lockAccount', 'createAccount', 'markDefaultZoneForAccount'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the current account name'}, {'name': 'accountdetails', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'details for account used to store specific parameters'}, {'name': 'id', 'required': False, 'related': ['disableAccount', 'ldapCreateAccount', 'listAccounts', 'listAccounts', 'updateAccount', 'lockAccount', 'createAccount', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'Account id'}, {'name': 'newname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'new name for the account'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the domain where the account exists'}, {'name': 'networkdomain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': "Network domain for the account's networks; empty string will update domainName with NULL value"}], 'requiredparams': ['newname'], 'response': [{'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}], 'name': 'user'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}], 'description': 'Updates account information for the authenticated user'}, 'zone': {'name': 'updateZone', 'related': ['listZones', 'createZone', 'listZones'], 'isasync': False, 'params': [{'name': 'internaldns2', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the second internal DNS for the Zone'}, {'name': 'allocationstate', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Allocation state of this cluster for allocation of new resources'}, {'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'updates a private zone to public if set, but not vice-versa'}, {'name': 'dns2', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the second DNS for the Zone'}, {'name': 'ip6dns2', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the second DNS for IPv6 network in the Zone'}, {'name': 'domain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Network domain name for the networks in the zone; empty string will update domain with NULL value'}, {'name': 'dhcpprovider', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the dhcp Provider for the Zone'}, {'name': 'internaldns1', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the first internal DNS for the Zone'}, {'name': 'id', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Zone'}, {'name': 'localstorageenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if local storage offering enabled, false otherwise'}, {'name': 'ip6dns1', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the first DNS for IPv6 network in the Zone'}, {'name': 'guestcidraddress', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the guest CIDR address for the Zone'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'the details for the Zone'}, {'name': 'dnssearchorder', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the dns search order list'}, {'name': 'dns1', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the first DNS for the Zone'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the Zone'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'ip6dns1', 'description': 'the first IPv6 DNS for the Zone'}, {}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the Zone'}, {'type': 'map', 'name': 'resourcedetails', 'description': 'Meta data associated with the zone (key/value pairs)'}, {'description': 'the list of resource tags associated with zone.', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'networktype', 'description': 'the network type of the zone; can be Basic or Advanced'}, {'type': 'string', 'name': 'name', 'description': 'Zone name'}, {'type': 'string', 'name': 'description', 'description': 'Zone description'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the Zone'}, {'type': 'string', 'name': 'allocationstate', 'description': 'the allocation state of the cluster'}, {'type': 'boolean', 'name': 'localstorageenabled', 'description': 'true if local storage offering enabled, false otherwise'}, {'type': 'string', 'name': 'domain', 'description': 'Network domain name for the networks in the zone'}, {'type': 'string', 'name': 'ip6dns2', 'description': 'the second IPv6 DNS for the Zone'}, {'type': 'string', 'name': 'internaldns1', 'description': 'the first internal DNS for the Zone'}, {'type': 'boolean', 'name': 'securitygroupsenabled', 'description': 'true if security groups support is enabled, false otherwise'}, {'type': 'string', 'name': 'dhcpprovider', 'description': 'the dhcp Provider for the Zone'}, {'type': 'string', 'name': 'zonetoken', 'description': 'Zone Token'}, {'type': 'string', 'name': 'displaytext', 'description': 'the display text of the zone'}, {'type': 'string', 'name': 'internaldns2', 'description': 'the second internal DNS for the Zone'}, {'type': 'string', 'name': 'guestcidraddress', 'description': 'the guest CIDR address for the Zone'}, {'type': 'string', 'name': 'domainid', 'description': 'the UUID of the containing domain, null for public zones'}, {'description': 'the capacity of the Zone', 'type': 'list', 'response': [{'type': 'long', 'name': 'capacitytotal', 'description': 'the total capacity available'}, {'type': 'string', 'name': 'clustername', 'description': 'the Cluster name'}, {'type': 'string', 'name': 'clusterid', 'description': 'the Cluster ID'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID'}, {'type': 'string', 'name': 'zonename', 'description': 'the Zone name'}, {'type': 'short', 'name': 'type', 'description': 'the capacity type'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID'}, {'type': 'string', 'name': 'percentused', 'description': 'the percentage of capacity currently in use'}, {'type': 'long', 'name': 'capacityused', 'description': 'the capacity currently in use'}], 'name': 'capacity'}, {'type': 'string', 'name': 'id', 'description': 'Zone id'}, {'type': 'string', 'name': 'domainname', 'description': 'the name of the containing domain, null for public zones'}], 'description': 'Updates a Zone.'}, 'firewallrule': {'name': 'updateFirewallRule', 'related': ['createFirewallRule', 'listEgressFirewallRules'], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'id', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the firewall rule'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the firewall rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of firewall rule's port range"}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the firewall rule'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of the firewall rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of firewall rule's port range"}, {'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}, {'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the firewall rule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the firewall rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}], 'description': 'Updates firewall rule '}, 'vmaffinitygroup': {'name': 'updateVMAffinityGroup', 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'affinitygroupnames', 'required': False, 'related': ['listAffinityGroups'], 'length': 255, 'type': 'list', 'description': 'comma separated list of affinity groups names that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter'}, {'name': 'affinitygroupids', 'required': False, 'related': ['listAffinityGroups'], 'length': 255, 'type': 'list', 'description': 'comma separated list of affinity groups id that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter'}, {'name': 'id', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}], 'name': 'ingressrule'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}], 'description': 'Updates the affinity/anti-affinity group associations of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect.'}, 'physicalnetwork': {'name': 'updatePhysicalNetwork', 'related': ['listPhysicalNetworks', 'createPhysicalNetwork'], 'isasync': True, 'params': [{'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Enabled/Disabled'}, {'name': 'vlan', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the VLAN for the physical network'}, {'name': 'networkspeed', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the speed for the physical network[1G/10G]'}, {'name': 'id', 'required': True, 'related': ['listPhysicalNetworks', 'createPhysicalNetwork', 'updatePhysicalNetwork'], 'length': 255, 'type': 'uuid', 'description': 'physical network id'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'Tag the physical network'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain id of the physical network owner'}, {'type': 'string', 'name': 'broadcastdomainrange', 'description': 'Broadcast domain range of the physical network'}, {'type': 'string', 'name': 'networkspeed', 'description': 'the speed of the physical network'}, {'type': 'string', 'name': 'vlan', 'description': 'the vlan of the physical network'}, {'type': 'string', 'name': 'id', 'description': 'the uuid of the physical network'}, {'type': 'string', 'name': 'name', 'description': 'name of the physical network'}, {'type': 'string', 'name': 'tags', 'description': 'comma separated tag'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the physical network'}, {'type': 'string', 'name': 'isolationmethods', 'description': 'isolation methods'}, {'type': 'string', 'name': 'state', 'description': 'state of the physical network'}], 'description': 'Updates a physical network'}, 'region': {'name': 'updateRegion', 'related': ['addRegion', 'listRegions'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Id of region to update'}, {'name': 'endpoint', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'updates region with this end point'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'updates region with this name'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'gslbserviceenabled', 'description': 'true if GSLB service is enabled in the region, false otherwise'}, {'type': 'string', 'name': 'endpoint', 'description': 'the end point of the region'}, {'type': 'boolean', 'name': 'portableipserviceenabled', 'description': 'true if security groups support is enabled, false otherwise'}, {'type': 'integer', 'name': 'id', 'description': 'the ID of the region'}, {'type': 'string', 'name': 'name', 'description': 'the name of the region'}], 'description': 'Updates a region'}, 'networkoffering': {'name': 'updateNetworkOffering', 'related': [], 'isasync': False, 'params': [{'name': 'maxconnections', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'maximum number of concurrent connections supported by the network offering'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the display text of the network offering'}, {'name': 'availability', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the availability of network offering. Default value is Required for Guest Virtual network offering; Optional for Guest Direct network offering'}, {'name': 'id', 'required': False, 'related': ['updateNetworkOffering'], 'length': 255, 'type': 'uuid', 'description': 'the id of the network offering'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the network offering'}, {'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'update state for the network offering'}, {'name': 'keepaliveenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'if true keepalive will be turned on in the loadbalancer. At the time of writing this has only an effect on haproxy; the mode http and httpclose options are unset in the haproxy conf file.'}, {'name': 'sortkey', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'sort key of the network offering, integer'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'supportsstrechedl2subnet', 'description': 'true if network offering supports network that span multiple zones'}, {'type': 'boolean', 'name': 'conservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network offering'}, {'type': 'string', 'name': 'state', 'description': 'state of the network offering. Can be Disabled/Enabled/Inactive'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}], 'name': 'service'}, {'type': 'string', 'name': 'tags', 'description': 'the tags for the network offering'}, {'type': 'date', 'name': 'created', 'description': 'the date this network offering was created'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network offering supports specifying ip ranges, false otherwise'}, {'type': 'boolean', 'name': 'forvpc', 'description': 'true if network offering can be used by VPC networks only'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'true if network offering supports persistent networks, false otherwise'}, {'type': 'boolean', 'name': 'specifyvlan', 'description': 'true if network offering supports vlans, false otherwise'}, {'type': 'string', 'name': 'availability', 'description': 'availability of the network offering'}, {'type': 'integer', 'name': 'networkrate', 'description': 'data transfer rate in megabits per second allowed.'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with network offering'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network offering is default, false otherwise'}, {'type': 'string', 'name': 'guestiptype', 'description': 'guest type of the network offering, can be Shared or Isolated'}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the network offering.'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering used by virtual router provider'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network offering'}, {'type': 'boolean', 'name': 'egressdefaultpolicy', 'description': 'true if guest network default egress policy is allow; false if default egress policy is deny'}, {'type': 'integer', 'name': 'maxconnections', 'description': 'maximum number of concurrents connections to be handled by lb'}], 'description': 'Updates a network offering.'}, 'lbhealthcheckpolicy': {'name': 'updateLBHealthCheckPolicy', 'related': [], 'isasync': True, 'params': [{'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the policy to the end user or not'}, {'name': 'id', 'required': True, 'related': ['updateLBHealthCheckPolicy'], 'length': 255, 'type': 'uuid', 'description': 'ID of load balancer health check policy'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the id of the zone the HealthCheck policy belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account of the HealthCheck policy'}, {'description': 'the list of healthcheckpolicies', 'type': 'list', 'response': [{'type': 'int', 'name': 'healthcheckinterval', 'description': 'Amount of time between health checks'}, {'type': 'int', 'name': 'responsetime', 'description': 'Time to wait when receiving a response from the health check'}, {'type': 'string', 'name': 'id', 'description': 'the LB HealthCheck policy ID'}, {'type': 'string', 'name': 'pingpath', 'description': 'the pingpath  of the healthcheck policy'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is policy for display to the regular user'}, {'type': 'int', 'name': 'unhealthcheckthresshold', 'description': 'Number of consecutive health check failures before declaring an instance unhealthy.'}, {'type': 'int', 'name': 'healthcheckthresshold', 'description': 'Number of consecutive health check success before declaring an instance healthy'}, {'type': 'string', 'name': 'state', 'description': 'the state of the policy'}, {'type': 'string', 'name': 'description', 'description': 'the description of the healthcheck policy'}], 'name': 'healthcheckpolicy'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the LB rule ID'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the HealthCheck policy'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the HealthCheck policy'}], 'description': 'Updates load balancer health check policy'}, 'project': {'name': 'updateProject', 'related': ['createProject'], 'isasync': True, 'params': [{'name': 'displaytext', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'display text of the project'}, {'name': 'id', 'required': True, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'id of the project to be modified'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'new Admin account for the project'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the project'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this project'}, {'description': 'the list of resource tags associated with vm', 'type': 'list', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id the project belongs to'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by project'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this project'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this project'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this project'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this project'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this project'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the project can own'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the project can own'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this project'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this project to acquire'}, {'type': 'string', 'name': 'state', 'description': 'the state of the project'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this project'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this project'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the project can own'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this project'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this project can acquire'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by project'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this project'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this project'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the project'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the project can own'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name where the project belongs to'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this project'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by project'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by project'}, {'type': 'string', 'name': 'id', 'description': 'the id of the project'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this project'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the project can own'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this project'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this project'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this project to acquire'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by project'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the project can own'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this project'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this project'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this project'}, {'type': 'string', 'name': 'account', 'description': "the account name of the project's owner"}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this project'}], 'description': 'Updates a project'}, 'vpncustomergateway': {'name': 'updateVpnCustomerGateway', 'related': [], 'isasync': True, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account associated with the gateway. Must be used with the domainId parameter.'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of this customer gateway'}, {'name': 'esppolicy', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'ESP policy of the customer gateway'}, {'name': 'id', 'required': True, 'related': ['updateVpnCustomerGateway'], 'length': 255, 'type': 'uuid', 'description': 'id of customer gateway'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.'}, {'name': 'dpd', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'If DPD is enabled for VPN connection'}, {'name': 'ikelifetime', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Lifetime of phase 1 VPN connection to the customer gateway, in seconds'}, {'name': 'gateway', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'public ip address id of the customer gateway'}, {'name': 'ikepolicy', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'IKE policy of the customer gateway'}, {'name': 'ipsecpsk', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'IPsec Preshared-Key of the customer gateway'}, {'name': 'cidrlist', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'guest cidr of the customer gateway'}, {'name': 'esplifetime', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'Lifetime of phase 2 VPN connection to the customer gateway, in seconds'}], 'requiredparams': ['esppolicy', 'id', 'gateway', 'ikepolicy', 'ipsecpsk', 'cidrlist'], 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'string', 'name': 'name', 'description': 'name of the customer gateway'}, {'type': 'string', 'name': 'ipsecpsk', 'description': 'IPsec preshared-key of customer gateway'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'esppolicy', 'description': 'IPsec policy of customer gateway'}, {'type': 'string', 'name': 'ikepolicy', 'description': 'IKE policy of customer gateway'}, {'type': 'long', 'name': 'ikelifetime', 'description': 'Lifetime of IKE SA of customer gateway'}, {'type': 'string', 'name': 'id', 'description': 'the vpn gateway ID'}, {'type': 'boolean', 'name': 'dpd', 'description': 'if DPD is enabled for customer gateway'}, {'type': 'string', 'name': 'ipaddress', 'description': 'guest ip of the customer gateway'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'string', 'name': 'gateway', 'description': 'public ip address id of the customer gateway'}, {'type': 'long', 'name': 'esplifetime', 'description': 'Lifetime of ESP SA of customer gateway'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'cidrlist', 'description': 'guest cidr list of the customer gateway'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}], 'description': 'Update site to site vpn customer gateway'}, 'iso': {'name': 'updateIso', 'related': ['listIsos', 'registerTemplate', 'registerIso', 'listTemplates', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': False, 'params': [{'name': 'isdynamicallyscalable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'name': 'passwordenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the image supports the password reset feature; default is false'}, {'name': 'ostypeid', 'required': False, 'related': ['addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the OS type that best represents the OS of this image.'}, {'name': 'format', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the format for the image'}, {'name': 'id', 'required': True, 'related': ['listIsos', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the image file'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the image file'}, {'name': 'sortkey', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'sort key of the template, integer'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61'}, {'name': 'displaytext', 'required': False, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the display text of the image'}, {'name': 'requireshvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template requres HVM, false otherwise; available only for updateTemplate API'}, {'name': 'isrouting', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template type is routing i.e., if template is used to deploy router'}, {'name': 'bootable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if image is bootable, false otherwise; available only for updateIso API'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}], 'description': 'Updates an ISO file.'}, 'egressfirewallrule': {'name': 'updateEgressFirewallRule', 'related': ['listFirewallRules', 'createFirewallRule', 'updateFirewallRule', 'listEgressFirewallRules'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the egress firewall rule'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'ipaddressid', 'description': 'the public ip address id for the firewall rule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the firewall rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the firewall rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'list', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of the firewall rule'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'error code for this icmp message'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the public ip address for the firewall rule'}, {'type': 'string', 'name': 'cidrlist', 'description': 'the cidr list to forward traffic from'}, {'type': 'string', 'name': 'endport', 'description': "the ending port of firewall rule's port range"}, {'type': 'string', 'name': 'state', 'description': 'the state of the rule'}, {'type': 'string', 'name': 'startport', 'description': "the starting port of firewall rule's port range"}, {'type': 'integer', 'name': 'icmptype', 'description': 'type of the icmp message being sent'}], 'description': 'Updates egress firewall rule '}, 'networkserviceprovider': {'name': 'updateNetworkServiceProvider', 'related': [], 'isasync': True, 'params': [{'name': 'state', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Enabled/Disabled/Shutdown the physical network service provider'}, {'name': 'id', 'required': True, 'related': ['updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'network service provider id'}, {'name': 'servicelist', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the list of services to be enabled for this physical network service provider'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'description': 'Updates a network serviceProvider of a physical network'}, 'autoscalevmgroup': {'name': 'updateAutoScaleVmGroup', 'related': [], 'isasync': True, 'params': [{'name': 'maxmembers', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.'}, {'name': 'scaleuppolicyids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list of scaleup autoscale policies'}, {'name': 'interval', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the frequency at which the conditions have to be evaluated'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the group to the end user or not'}, {'name': 'id', 'required': True, 'related': ['updateAutoScaleVmGroup'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale group'}, {'name': 'scaledownpolicyids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list of scaledown autoscale policies'}, {'name': 'minmembers', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'int', 'name': 'interval', 'description': 'the frequency at which the conditions have to be evaluated'}, {'type': 'string', 'name': 'state', 'description': 'the current state of the AutoScale Vm Group'}, {'type': 'list', 'name': 'scaleuppolicies', 'description': 'list of scaleup autoscale policies'}, {'type': 'string', 'name': 'id', 'description': 'the autoscale vm group ID'}, {'type': 'string', 'name': 'vmprofileid', 'description': 'the autoscale profile that contains information about the vms in the vm group.'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is group for display to the regular user'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {'type': 'int', 'name': 'minmembers', 'description': 'the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.'}, {'type': 'int', 'name': 'maxmembers', 'description': 'the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the load balancer rule ID'}, {'type': 'list', 'name': 'scaledownpolicies', 'description': 'list of scaledown autoscale policies'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}], 'description': 'Updates an existing autoscale vm group.'}, 'loadbalancer': {'name': 'updateLoadBalancer', 'related': ['createLoadBalancer'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer'}, {'name': 'customid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only'}, {'name': 'fordisplay', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'an optional field, whether to the display the rule to the end user or not'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'networkid', 'description': 'Load Balancer network id'}, {'description': 'the list of resource tags associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'the account of the Load Balancer'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the Load Balancer'}, {'type': 'string', 'name': 'id', 'description': 'the Load Balancer ID'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the Load Balancer'}, {'description': 'the list of rules associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'integer', 'name': 'sourceport', 'description': 'source port of the load balancer rule'}, {'type': 'integer', 'name': 'instanceport', 'description': 'instance port of the load balancer rule'}, {'type': 'string', 'name': 'state', 'description': 'the state of the load balancer rule'}], 'name': 'loadbalancerrule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the Load Balancer'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is rule for display to the regular user'}, {'type': 'string', 'name': 'name', 'description': 'the name of the Load Balancer'}, {'type': 'string', 'name': 'sourceipaddress', 'description': 'Load Balancer source ip'}, {'type': 'string', 'name': 'domain', 'description': 'the domain of the Load Balancer'}, {'type': 'string', 'name': 'sourceipaddressnetworkid', 'description': 'Load Balancer source ip network id'}, {'description': 'the list of instances associated with the Load Balancer', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the instance'}, {'type': 'string', 'name': 'id', 'description': 'the instance ID'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the instance'}, {'type': 'string', 'name': 'state', 'description': 'the state of the instance'}], 'name': 'loadbalancerinstance'}, {'type': 'string', 'name': 'description', 'description': 'the description of the Load Balancer'}, {'type': 'string', 'name': 'algorithm', 'description': 'the load balancer algorithm (source, roundrobin, leastconn)'}], 'description': 'Updates a load balancer'}, 'user': {'name': 'updateUser', 'related': ['disableUser', 'lockUser', 'listUsers'], 'isasync': False, 'params': [{'name': 'userapikey', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The API key for the user. Must be specified with userSecretKey'}, {'name': 'firstname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'first name'}, {'name': 'usersecretkey', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The secret key for the user. Must be specified with userSecretKey'}, {'name': 'username', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Unique username'}, {'name': 'lastname', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'last name'}, {'name': 'password', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Clear text password (default hashed to SHA256SALT). If you wish to use any other hasing algorithm, you would need to write a custom authentication adapter'}, {'name': 'email', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'email'}, {'name': 'timezone', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.'}, {'name': 'id', 'required': True, 'related': ['disableUser', 'lockUser', 'updateUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'User uuid'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}], 'description': 'Updates a user account'}}, 'upload': {'volume': {'name': 'uploadVolume', 'related': ['createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': True, 'params': [{'name': 'format', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the format for the volume. Possible values include QCOW2, OVA, and VHD.'}, {'name': 'zoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone the volume is to be hosted on'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional accountName. Must be used with domainId.'}, {'name': 'imagestoreuuid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Image store uuid'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId. If the account parameter is used, domainId must also be used.'}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'Upload volume for the project'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the volume'}, {'name': 'diskofferingid', 'required': False, 'related': ['createDiskOffering'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk offering. This must be a custom sized offering since during uploadVolume volume size is unknown.'}, {'name': 'checksum', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the MD5 checksum value of this volume'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL of where the volume is hosted. Possible URL include http:// and https://'}], 'requiredparams': ['format', 'zoneid', 'name', 'url'], 'response': [{'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}, {'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}], 'description': 'Uploads a data disk.'}, 'customcertificate': {'name': 'uploadCustomCertificate', 'related': [], 'isasync': True, 'params': [{'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'A name / alias for the certificate.'}, {'name': 'domainsuffix', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'DNS domain suffix that the certificate is granted for.'}, {'name': 'privatekey', 'required': False, 'related': [], 'length': 65535, 'type': 'string', 'description': 'The private key for the attached certificate.'}, {'name': 'certificate', 'required': True, 'related': [], 'length': 65535, 'type': 'string', 'description': 'The certificate to be uploaded.'}, {'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': 'An integer providing the location in a chain that the certificate will hold. Usually, this can be left empty. When creating a chain, the top level certificate should have an ID of 1, with each step in the chain incrementing by one. Example, CA with id = 1, Intermediate CA with id = 2, Site certificate with ID = 3'}], 'requiredparams': ['domainsuffix', 'certificate'], 'response': [{'type': 'string', 'name': 'message', 'description': 'message of the certificate upload operation'}], 'description': 'Uploads a custom certificate for the console proxy VMs to use for SSL. Can be used to upload a single certificate signed by a known CA. Can also be used, through multiple calls, to upload a chain of certificates from CA to the custom certificate itself.'}, 'sslcert': {'name': 'uploadSslCert', 'related': ['listSslCerts'], 'isasync': False, 'params': [{'name': 'certchain', 'required': False, 'related': [], 'length': 2097152, 'type': 'string', 'description': 'Certificate chain of trust'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'account that will own the SSL certificate'}, {'name': 'privatekey', 'required': True, 'related': [], 'length': 16384, 'type': 'string', 'description': 'Private key'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'an optional project for the SSL certificate'}, {'name': 'certificate', 'required': True, 'related': [], 'length': 16384, 'type': 'string', 'description': 'SSL certificate'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'domain ID of the account owning the SSL certificate'}, {'name': 'password', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Password for the private key'}], 'requiredparams': ['privatekey', 'certificate'], 'response': [{'type': 'list', 'name': 'loadbalancerrulelist', 'description': 'List of loabalancers this certificate is bound to'}, {'type': 'string', 'name': 'id', 'description': 'SSL certificate ID'}, {'type': 'string', 'name': 'certificate', 'description': 'certificate'}, {'type': 'string', 'name': 'certchain', 'description': 'certificate chain'}, {'type': 'string', 'name': 'account', 'description': 'account for the certificate'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'fingerprint', 'description': 'certificate fingerprint'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the certificate'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the certificate'}], 'description': 'Upload a certificate to CloudStack'}}, 'upgrade': {'routertemplate': {'name': 'upgradeRouterTemplate', 'related': [], 'isasync': False, 'params': [{'name': 'clusterid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'upgrades all routers within the specified cluster'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'upgrades all routers within the specified zone'}, {'name': 'podid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'upgrades all routers within the specified pod'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'upgrades all routers owned by the specified account'}, {'name': 'domainid', 'required': False, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'upgrades all routers owned by the specified domain'}, {'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'upgrades router with the specified Id'}], 'requiredparams': [], 'response': [{}, {'type': 'integer', 'name': 'jobstatus', 'description': 'the current status of the latest async job acting on this object'}, {'type': 'string', 'name': 'jobid', 'description': 'the UUID of the latest async job acting on this object'}, {}], 'description': 'Upgrades router to use newer template'}}, 'disable': {'account': {'name': 'disableAccount', 'related': ['listAccounts', 'listAccounts', 'markDefaultZoneForAccount'], 'isasync': True, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Disables specified account.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'Disables specified account in this domain.'}, {'name': 'lock', 'required': True, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'If true, only lock the account; else disable the account'}, {'name': 'id', 'required': False, 'related': ['disableAccount', 'listAccounts', 'listAccounts', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'Account id'}], 'requiredparams': ['lock'], 'response': [{'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}], 'name': 'user'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}, {'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}, {'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}], 'description': 'Disables an account'}, 'autoscalevmgroup': {'name': 'disableAutoScaleVmGroup', 'related': ['enableAutoScaleVmGroup', 'updateAutoScaleVmGroup'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['disableAutoScaleVmGroup', 'enableAutoScaleVmGroup', 'updateAutoScaleVmGroup'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale group'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the autoscale vm group ID'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is group for display to the regular user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the vm profile'}, {'type': 'int', 'name': 'maxmembers', 'description': 'the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.'}, {'type': 'string', 'name': 'state', 'description': 'the current state of the AutoScale Vm Group'}, {'type': 'list', 'name': 'scaledownpolicies', 'description': 'list of scaledown autoscale policies'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id vm profile'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm profile'}, {'type': 'list', 'name': 'scaleuppolicies', 'description': 'list of scaleup autoscale policies'}, {'type': 'string', 'name': 'lbruleid', 'description': 'the load balancer rule ID'}, {'type': 'int', 'name': 'interval', 'description': 'the frequency at which the conditions have to be evaluated'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the vm profile'}, {'type': 'string', 'name': 'vmprofileid', 'description': 'the autoscale profile that contains information about the vms in the vm group.'}, {'type': 'int', 'name': 'minmembers', 'description': 'the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the instance group'}], 'description': 'Disables an AutoScale Vm Group'}, 'cisconexusvsm': {'name': 'disableCiscoNexusVSM', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['disableCiscoNexusVSM'], 'length': 255, 'type': 'uuid', 'description': 'Id of the Cisco Nexus 1000v VSM device to be deleted'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'vsmconfigstate', 'description': 'The Config State (Primary/Standby) of the VSM'}, {'type': 'string', 'name': 'vsmdevicename', 'description': 'device name'}, {'type': 'string', 'name': 'vsmdevicestate', 'description': 'The Device State (Enabled/Disabled) of the VSM'}, {'type': 'string', 'name': 'vsmdevicestate', 'description': 'device state'}, {'type': 'int', 'name': 'vsmctrlvlanid', 'description': 'control vlan id of the VSM'}, {'type': 'string', 'name': 'vsmconfigmode', 'description': 'The mode of the VSM (standalone/HA)'}, {'type': 'string', 'name': 'vsmmgmtvlanid', 'description': 'management vlan id of the VSM'}, {'type': 'int', 'name': 'vsmpktvlanid', 'description': 'packet vlan id of the VSM'}, {'type': 'string', 'name': 'vsmdeviceid', 'description': 'device id of the Cisco N1KV VSM device'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the management IP address of the external Cisco Nexus 1000v Virtual Supervisor Module'}, {'type': 'int', 'name': 'vsmstoragevlanid', 'description': 'storage vlan id of the VSM'}, {'type': 'string', 'name': 'vsmdomainid', 'description': "The VSM is a switch supervisor. This is the VSM's switch domain id"}], 'description': 'disable a Cisco Nexus VSM device'}, 'staticnat': {'name': 'disableStaticNat', 'related': [], 'isasync': True, 'params': [{'name': 'ipaddressid', 'required': True, 'related': ['associateIpAddress', 'associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'the public IP address ID for which static NAT feature is being disabled'}], 'requiredparams': ['ipaddressid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Disables static rule for given IP address'}, 'user': {'name': 'disableUser', 'related': ['lockUser', 'listUsers'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['disableUser', 'lockUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'Disables user by user ID.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}], 'description': 'Disables a user account'}}, 'logout': {'': {'name': 'logout', 'related': [], 'isasync': False, 'params': [], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'description', 'description': 'Response description'}], 'description': 'Logs out the user'}}, 'import': {'ldapusers': {'name': 'importLdapUsers', 'related': ['listLdapUsers', 'searchLdap'], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Creates the user under the specified account. If no account is specified, the username will be used as the account name.'}, {'name': 'timezone', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.'}, {'name': 'group', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Specifies the group name from which the ldap users are to be imported. If no group is specified, all the users will be imported.'}, {'name': 'accounttype', 'required': True, 'related': [], 'length': 255, 'type': 'short', 'description': 'Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin'}, {'name': 'page', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'Specifies the domain to which the ldap users are to be imported. If no domain is specified, a domain will created using group parameter. If the group is also not specified, a domain name based on the OU information will be created. If no OU hierarchy exists, will be defaulted to ROOT domain'}, {'name': 'pagesize', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': ''}, {'name': 'keyword', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'List by keyword'}, {'name': 'accountdetails', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'details for account used to store specific parameters'}], 'requiredparams': ['accounttype'], 'response': [{'type': 'string', 'name': 'lastname', 'description': "The user's lastname"}, {'type': 'string', 'name': 'principal', 'description': "The user's principle"}, {'type': 'string', 'name': 'firstname', 'description': "The user's firstname"}, {'type': 'string', 'name': 'domain', 'description': "The user's domain"}, {'type': 'string', 'name': 'username', 'description': "The user's username"}, {'type': 'string', 'name': 'email', 'description': "The user's email"}], 'description': 'Import LDAP users'}}, 'detach': {'volume': {'name': 'detachVolume', 'related': ['createVolume', 'createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': True, 'params': [{'name': 'id', 'required': False, 'related': ['createVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}, {'name': 'deviceid', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'the device ID on the virtual machine where volume is detached from'}, {'name': 'virtualmachineid', 'required': False, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the virtual machine where the volume is detached from'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}, {'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}], 'description': 'Detaches a disk volume from a virtual machine.'}, 'iso': {'name': 'detachIso', 'related': ['restoreVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['virtualmachineid'], 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}], 'name': 'egressrule'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}], 'name': 'nic'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}], 'description': 'Detaches any ISO file (if any) currently attached to a virtual machine.'}}, 'generate': {'usagerecords': {'name': 'generateUsageRecords', 'related': [], 'isasync': False, 'params': [{'name': 'startdate', 'required': True, 'related': [], 'length': 255, 'type': 'date', 'description': 'Start date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-01.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'List events for the specified domain.'}, {'name': 'enddate', 'required': True, 'related': [], 'length': 255, 'type': 'date', 'description': 'End date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-03.'}], 'requiredparams': ['startdate', 'enddate'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Generates usage records. This will generate records only if there any records to be generated, i.e if the scheduled usage job was not run or failed'}, 'alert': {'name': 'generateAlert', 'related': [], 'isasync': True, 'params': [{'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the alert'}, {'name': 'type', 'required': True, 'related': [], 'length': 255, 'type': 'short', 'description': 'Type of the alert'}, {'name': 'zoneid', 'required': False, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'Zone id for which alert is generated'}, {'name': 'description', 'required': True, 'related': [], 'length': 999, 'type': 'string', 'description': 'Alert description'}, {'name': 'podid', 'required': False, 'related': ['updatePod'], 'length': 255, 'type': 'uuid', 'description': 'Pod id for which alert is generated'}], 'requiredparams': ['name', 'type', 'description'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Generates an alert'}}, 'restart': {'network': {'name': 'restartNetwork', 'related': ['associateIpAddress', 'associateIpAddress', 'listPublicIpAddresses'], 'isasync': True, 'params': [{'name': 'cleanup', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'If cleanup old network elements'}, {'name': 'id', 'required': True, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the network to restart.'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'fordisplay', 'description': 'is public ip for display to the regular user'}, {'type': 'boolean', 'name': 'isportable', 'description': 'is public IP portable across the zones'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'virtualmachinename', 'description': 'virutal machine name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'boolean', 'name': 'isstaticnat', 'description': 'true if this ip is for static nat, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'virutal machine id the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the IP address'}, {'type': 'string', 'name': 'virtualmachinedisplayname', 'description': 'virutal machine display name the ip address is assigned to (not null only for static nat Ip)'}, {'type': 'string', 'name': 'associatednetworkid', 'description': 'the ID of the Network associated with the IP address'}, {'type': 'string', 'name': 'account', 'description': 'the account the public IP address is associated with'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the public IP address belongs to'}, {'type': 'string', 'name': 'id', 'description': 'public IP address id'}, {'type': 'string', 'name': 'state', 'description': 'State of the ip address. Can be: Allocatin, Allocated and Releasing'}, {'type': 'date', 'name': 'allocated', 'description': 'date the public IP address was acquired'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'ipaddress', 'description': 'public IP address'}, {'type': 'string', 'name': 'vlanname', 'description': 'the VLAN associated with the IP address'}, {'type': 'string', 'name': 'vmipaddress', 'description': 'virutal machine (dnat) ip address (not null only for static nat Ip)'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the Network where ip belongs to'}, {'type': 'string', 'name': 'purpose', 'description': 'purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain the public IP address is associated with'}, {'type': 'string', 'name': 'associatednetworkname', 'description': 'the name of the Network associated with the IP address'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the ip belongs to'}, {'type': 'boolean', 'name': 'issourcenat', 'description': 'true if the IP address is a source nat address, false otherwise'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID the public IP address is associated with'}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if this ip is system ip (was allocated as a part of deployVm or createLbRule)'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'description': 'the list of resource tags associated with ip address', 'type': 'list', 'response': [{'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'vlanid', 'description': 'the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only'}], 'description': 'Restarts the network; includes 1) restarting network elements - virtual routers, DHCP servers 2) reapplying all public IPs 3) reapplying loadBalancing/portForwarding rules'}, 'vpc': {'name': 'restartVPC', 'related': ['updateVPC', 'createVPC', 'listVPCs'], 'isasync': True, 'params': [{'name': 'cleanup', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'If cleanup old network elements'}, {'name': 'id', 'required': True, 'related': ['updateVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'the id of the VPC'}, {'name': 'makeredundant', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Turn a single VPC into a redundant one.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the id of the VPC'}, {'type': 'date', 'name': 'created', 'description': 'the date this VPC was created'}, {'description': 'the list of networks belongign to the VPC', 'type': 'list', 'response': [{'description': 'the list of resource tags associated with network', 'type': 'list', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'strechedl2subnet', 'description': 'true if network can span multiple zones'}, {'type': 'string', 'name': 'vpcid', 'description': 'VPC the network belongs to'}, {'type': 'string', 'name': 'cidr', 'description': 'Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR'}, {'type': 'string', 'name': 'networkofferingdisplaytext', 'description': 'display text of the network offering the network is created from'}, {'type': 'string', 'name': 'dns2', 'description': 'the second DNS for the network'}, {'type': 'string', 'name': 'broadcastdomaintype', 'description': 'Broadcast domain type of the network'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network id'}, {'type': 'string', 'name': 'gateway', 'description': "the network's gateway"}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the ipaddress'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the network belongs to'}, {'type': 'string', 'name': 'state', 'description': 'state of the network'}, {'type': 'set', 'name': 'zonesnetworkspans', 'description': "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans"}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if network is default, false otherwise'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true network requires restart'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the address'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the network owner'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'boolean', 'name': 'subdomainaccess', 'description': 'true if users from subdomains can access the domain level network'}, {'type': 'string', 'name': 'reservediprange', 'description': "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes"}, {'type': 'string', 'name': 'networkofferingname', 'description': 'name of the network offering the network is created from'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the network owner'}, {'type': 'string', 'name': 'networkofferingid', 'description': 'network offering id the network is created from'}, {'type': 'string', 'name': 'netmask', 'description': "the network's netmask"}, {'type': 'boolean', 'name': 'issystem', 'description': 'true if network is system, false otherwise'}, {'type': 'string', 'name': 'type', 'description': 'the type of the network'}, {'type': 'boolean', 'name': 'displaynetwork', 'description': 'an optional field, whether to the display the network to the end user or not.'}, {'type': 'string', 'name': 'name', 'description': 'the name of the network'}, {'type': 'string', 'name': 'related', 'description': 'related to what other network configuration'}, {'type': 'boolean', 'name': 'specifyipranges', 'description': 'true if network supports specifying ip ranges, false otherwise'}, {'description': 'the list of services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'value', 'description': 'the capability value'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'name', 'description': 'the capability name'}], 'name': 'capability'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}], 'name': 'provider'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}], 'name': 'service'}, {'type': 'boolean', 'name': 'networkofferingconservemode', 'description': 'true if network offering is ip conserve mode enabled'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'displaytext', 'description': 'the displaytext of the network'}, {'type': 'string', 'name': 'id', 'description': 'the id of the network'}, {'type': 'string', 'name': 'dns1', 'description': 'the first DNS for the network'}, {'type': 'boolean', 'name': 'canusefordeploy', 'description': 'list networks available for vm deployment'}, {'type': 'string', 'name': 'networkcidr', 'description': 'the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'broadcast uri of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'acltype', 'description': 'acl type - access type to the network'}, {'type': 'string', 'name': 'vlan', 'description': 'The vlan of the network. This parameter is visible to ROOT admins only'}, {'type': 'string', 'name': 'aclid', 'description': 'ACL Id associated with the VPC network'}, {'type': 'boolean', 'name': 'ispersistent', 'description': 'list networks that are persistent'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the network'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the network'}, {'type': 'string', 'name': 'networkofferingavailability', 'description': 'availability of the network offering the network is created from'}], 'name': 'network'}, {'description': 'the list of supported services', 'type': 'list', 'response': [{'description': 'the list of capabilities', 'type': 'list', 'response': [{'type': 'string', 'name': 'name', 'description': 'the capability name'}, {'type': 'boolean', 'name': 'canchooseservicecapability', 'description': 'can this service capability value can be choosable while creatine network offerings'}, {'type': 'string', 'name': 'value', 'description': 'the capability value'}], 'name': 'capability'}, {'type': 'string', 'name': 'name', 'description': 'the service name'}, {'description': 'the service provider name', 'type': 'list', 'response': [{'type': 'string', 'name': 'id', 'description': 'uuid of the network provider'}, {'type': 'boolean', 'name': 'canenableindividualservice', 'description': 'true if individual services can be enabled/disabled'}, {'type': 'string', 'name': 'destinationphysicalnetworkid', 'description': 'the destination physical network'}, {'type': 'string', 'name': 'state', 'description': 'state of the network provider'}, {'type': 'string', 'name': 'name', 'description': 'the provider name'}, {'type': 'list', 'name': 'servicelist', 'description': 'services for this provider'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}], 'name': 'provider'}], 'name': 'service'}, {'type': 'boolean', 'name': 'restartrequired', 'description': 'true VPC requires restart'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is vpc for display to the regular user'}, {'type': 'boolean', 'name': 'distributedvpcrouter', 'description': "is VPC uses distributed router for one hop forwarding and host based network ACL's"}, {'type': 'string', 'name': 'displaytext', 'description': 'an alternate display text of the VPC.'}, {'type': 'string', 'name': 'vpcofferingid', 'description': 'vpc offering id the VPC is created from'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the VPC owner'}, {'description': 'the list of resource tags associated with the project', 'type': 'list', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain of the VPC'}, {'type': 'boolean', 'name': 'regionlevelvpc', 'description': 'true if VPC is region level'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the VPC'}, {'type': 'string', 'name': 'zoneid', 'description': 'zone id of the vpc'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the VPC'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone the VPC belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the name of the VPC'}, {'type': 'string', 'name': 'cidr', 'description': 'the cidr the VPC'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the VPC'}, {'type': 'boolean', 'name': 'redundantvpcrouter', 'description': 'if this VPC has redundant router'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'string', 'name': 'state', 'description': 'state of the VPC. Can be Inactive/Enabled'}], 'description': 'Restarts a VPC'}}, 'reset': {'apilimit': {'name': 'resetApiLimit', 'related': [], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': ['listAccounts', 'listAccounts', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the acount whose limit to be reset'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'accountid', 'description': 'the account uuid of the api remaining count'}, {'type': 'int', 'name': 'apiAllowed', 'description': 'currently allowed number of apis'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the api remaining count'}, {'type': 'long', 'name': 'expireAfter', 'description': 'seconds left to reset counters'}, {'type': 'int', 'name': 'apiIssued', 'description': 'number of api already issued'}], 'description': 'Reset api count'}, 'sshkeyforvirtualmachine': {'name': 'resetSSHKeyForVirtualMachine', 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'resetSSHKeyForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'recoverVirtualMachine', 'revertToVMSnapshot', 'deployVirtualMachine', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the ssh key. Must be used with domainId.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'an optional project for the ssh key'}, {'name': 'keypair', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the ssh key pair used to login to the virtual machine'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.'}], 'requiredparams': ['id', 'keypair'], 'response': [{'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}], 'name': 'ingressrule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}], 'name': 'nic'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}], 'description': 'Resets the SSH Key for virtual machine. The virtual machine must be in a "Stopped" state. [async]'}, 'passwordforvirtualmachine': {'name': 'resetPasswordForVirtualMachine', 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}], 'name': 'nic'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}], 'description': 'Resets the password for virtual machine. The virtual machine must be in a "Stopped" state and the template must already support this feature for this command to take effect. [async]'}, 'vpnconnection': {'name': 'resetVpnConnection', 'related': ['listVpnConnections'], 'isasync': True, 'params': [{'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for connection. If the account parameter is used, domainId must also be used.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for connection. Must be used with domainId.'}, {'name': 'id', 'required': True, 'related': ['listVpnConnections', 'resetVpnConnection'], 'length': 255, 'type': 'uuid', 'description': 'id of vpn connection'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 's2svpngatewayid', 'description': 'the vpn gateway ID'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id'}, {'type': 'string', 'name': 'publicip', 'description': 'the public IP address'}, {'type': 'string', 'name': 'account', 'description': 'the owner'}, {'type': 'string', 'name': 'state', 'description': 'State of vpn connection'}, {'type': 'string', 'name': 'cidrlist', 'description': 'guest cidr list of the customer gateway'}, {'type': 'string', 'name': 'ikepolicy', 'description': 'IKE policy of the customer gateway'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the owner'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the host was created'}, {'type': 'string', 'name': 'ipsecpsk', 'description': 'IPsec Preshared-Key of the customer gateway'}, {'type': 'long', 'name': 'esplifetime', 'description': 'Lifetime of ESP SA of customer gateway'}, {'type': 'string', 'name': 'project', 'description': 'the project name'}, {'type': 'string', 'name': 'gateway', 'description': 'public ip address id of the customer gateway'}, {'type': 'string', 'name': 'esppolicy', 'description': 'ESP policy of the customer gateway'}, {'type': 'boolean', 'name': 'dpd', 'description': 'if DPD is enabled for customer gateway'}, {'type': 'string', 'name': 'id', 'description': 'the connection ID'}, {'type': 'date', 'name': 'removed', 'description': 'the date and time the host was removed'}, {'type': 'boolean', 'name': 'passive', 'description': 'State of vpn connection'}, {'type': 'boolean', 'name': 'fordisplay', 'description': 'is connection for display to the regular user'}, {'type': 'string', 'name': 's2scustomergatewayid', 'description': 'the customer gateway ID'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the owner'}, {'type': 'long', 'name': 'ikelifetime', 'description': 'Lifetime of IKE SA of customer gateway'}], 'description': 'Reset site to site vpn connection'}}, 'expunge': {'virtualmachine': {'name': 'expungeVirtualMachine', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['attachIso', 'detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'rebootVirtualMachine', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the virtual machine'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Expunge a virtual machine. Once expunged, it cannot be recoverd.'}}, 'register': {'userkeys': {'name': 'registerUserKeys', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['lockUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'User id'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'apikey', 'description': 'the api key of the registered user'}, {'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the registered user'}], 'description': 'This command allows a user to register for the developer API, returning a secret key and an API key. This request is made through the integration API port, so it is a privileged command and must be made on behalf of a user. It is up to the implementer just how the username and password are entered, and then how that translates to an integration API request. Both secret key and API key should be returned to the user'}, 'iso': {'name': 'registerIso', 'related': ['listIsos', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': False, 'params': [{'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if you want to register the ISO to be publicly available to all users, false otherwise.'}, {'name': 'bootable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this ISO is bootable. If not passed explicitly its assumed to be true'}, {'name': 'isfeatured', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if you want this ISO to be featured'}, {'name': 'projectid', 'required': False, 'related': ['createProject'], 'length': 255, 'type': 'uuid', 'description': 'Register ISO for the project'}, {'name': 'ostypeid', 'required': False, 'related': ['addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the OS type that best represents the OS of this ISO. If the ISO is bootable this parameter needs to be passed'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the display text of the ISO. This is usually used for display purposes.'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL to where the ISO is currently being hosted'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account name. Must be used with domainId.'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'listZones'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone you wish to register the ISO to.'}, {'name': 'isextractable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the ISO or its derivatives are extractable; default is false'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the ISO'}, {'name': 'isdynamicallyscalable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if ISO contains XS/VMWare tools inorder to support dynamic scaling of VM CPU/memory'}, {'name': 'checksum', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the MD5 checksum value of this ISO'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId. If the account parameter is used, domainId must also be used.'}, {'name': 'imagestoreuuid', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Image store UUID'}], 'requiredparams': ['displaytext', 'url', 'zoneid', 'name'], 'response': [{'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'string', 'name': 'status', 'description': 'the status of the template'}], 'description': 'Registers an existing ISO into the CloudStack Cloud.'}, 'sshkeypair': {'name': 'registerSSHKeyPair', 'related': ['listSSHKeyPairs'], 'isasync': False, 'params': [{'name': 'publickey', 'required': True, 'related': [], 'length': 5120, 'type': 'string', 'description': 'Public key material of the keypair'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'listProjects', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'an optional project for the ssh key'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the ssh key. Must be used with domainId.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the keypair'}], 'requiredparams': ['publickey', 'name'], 'response': [{'type': 'string', 'name': 'fingerprint', 'description': 'Fingerprint of the public key'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain id of the keypair owner'}, {'type': 'string', 'name': 'name', 'description': 'Name of the keypair'}, {'type': 'string', 'name': 'account', 'description': 'the owner of the keypair'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the keypair owner'}], 'description': 'Register a public key in a keypair under a certain name'}, 'template': {'name': 'registerTemplate', 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'isasync': False, 'params': [{'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'Register template for the project'}, {'name': 'hypervisor', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the target hypervisor for the template'}, {'name': 'details', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Template details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61'}, {'name': 'checksum', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the MD5 checksum value of this template'}, {'name': 'isrouting', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template type is routing i.e., if template is used to deploy router'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId. If the account parameter is used, domainId must also be used.'}, {'name': 'isdynamicallyscalable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional accountName. Must be used with domainId.'}, {'name': 'templatetag', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the tag for this template.'}, {'name': 'bits', 'required': False, 'related': [], 'length': 255, 'type': 'integer', 'description': '32 or 64 bits support. 64 by default'}, {'name': 'requireshvm', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this template requires HVM'}, {'name': 'sshkeyenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template supports the sshkey upload feature; default is false'}, {'name': 'passwordenabled', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template supports the password reset feature; default is false'}, {'name': 'url', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the URL of where the template is hosted. Possible URL include http:// and https://'}, {'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone the template is to be hosted on'}, {'name': 'format', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the format for the template. Possible values include QCOW2, RAW, VHD and OVA.'}, {'name': 'isextractable', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template or its derivatives are extractable; default is false'}, {'name': 'isfeatured', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if this template is a featured template, false otherwise'}, {'name': 'ispublic', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if the template is available to all accounts; default is true'}, {'name': 'ostypeid', 'required': True, 'related': ['listOsTypes', 'updateGuestOs', 'addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the OS Type that best represents the OS of this template.'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the template'}, {'name': 'displaytext', 'required': True, 'related': [], 'length': 4096, 'type': 'string', 'description': 'the display text of the template. This is usually used for display purposes.'}], 'requiredparams': ['hypervisor', 'url', 'zoneid', 'format', 'ostypeid', 'name', 'displaytext'], 'response': [{'type': 'string', 'name': 'status', 'description': 'the status of the template'}, {'type': 'boolean', 'name': 'sshkeyenabled', 'description': 'true if template is sshkey enabled, false otherwise'}, {'type': 'boolean', 'name': 'ispublic', 'description': 'true if this template is a public template, false otherwise'}, {'description': 'the list of resource tags associated with tempate', 'type': 'set', 'response': [{'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the template is extractable, false otherwise'}, {'type': 'string', 'name': 'ostypename', 'description': 'the name of the OS type for this template.'}, {'type': 'imageformat', 'name': 'format', 'description': 'the format of the template.'}, {'type': 'string', 'name': 'account', 'description': 'the account name to which the template belongs'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the zone for this template'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the reset password feature is enabled, false otherwise'}, {'type': 'string', 'name': 'displaytext', 'description': 'the template display text'}, {'type': 'boolean', 'name': 'isready', 'description': 'true if the template is ready to be deployed from, false otherwise.'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the template'}, {'type': 'boolean', 'name': 'bootable', 'description': 'true if the ISO is bootable, false otherwise'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the template'}, {'type': 'boolean', 'name': 'isfeatured', 'description': 'true if this template is a featured template, false otherwise'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the secondary storage host for the template'}, {'type': 'string', 'name': 'checksum', 'description': 'checksum of the template'}, {'type': 'string', 'name': 'templatetype', 'description': 'the type of the template'}, {'type': 'string', 'name': 'ostypeid', 'description': 'the ID of the OS type for this template.'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the zone for this template'}, {'type': 'string', 'name': 'name', 'description': 'the template name'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain to which the template belongs'}, {'type': 'string', 'name': 'accountid', 'description': 'the account id to which the template belongs'}, {'type': 'boolean', 'name': 'crossZones', 'description': 'true if the template is managed across all Zones, false otherwise'}, {'type': 'long', 'name': 'size', 'description': 'the size of the template'}, {'type': 'date', 'name': 'created', 'description': 'the date this template was created'}, {'type': 'string', 'name': 'id', 'description': 'the template ID'}, {'type': 'map', 'name': 'details', 'description': 'additional key/value details tied with template'}, {'type': 'string', 'name': 'templatetag', 'description': 'the tag of this template'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the secondary storage host for the template'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'date', 'name': 'removed', 'description': 'the date this template was removed'}, {'type': 'string', 'name': 'sourcetemplateid', 'description': 'the template ID of the parent template if present'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain to which the template belongs'}], 'description': 'Registers an existing template into the CloudStack cloud. '}}, 'revert': {'tovmsnapshot': {'name': 'revertToVMSnapshot', 'related': ['listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'vmsnapshotid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'The ID of the vm snapshot'}], 'requiredparams': ['vmsnapshotid'], 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}], 'name': 'egressrule'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}], 'name': 'securitygroup'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}], 'name': 'nic'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}], 'description': 'Revert VM from a vmsnapshot.'}, 'snapshot': {'name': 'revertSnapshot', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['revertSnapshot'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the snapshot'}], 'requiredparams': ['id'], 'response': [{'type': 'state', 'name': 'state', 'description': 'the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage'}, {'type': 'string', 'name': 'domainid', 'description': "the domain ID of the snapshot's account"}, {'type': 'string', 'name': 'id', 'description': 'ID of the snapshot'}, {'type': 'string', 'name': 'intervaltype', 'description': 'valid types are hourly, daily, weekly, monthy, template, and none.'}, {'type': 'string', 'name': 'volumeid', 'description': 'ID of the disk volume'}, {'description': 'the list of resource tags associated with snapshot', 'type': 'list', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'string', 'name': 'domain', 'description': "the domain name of the snapshot's account"}, {'type': 'string', 'name': 'snapshottype', 'description': 'the type of the snapshot'}, {'type': 'boolean', 'name': 'revertable', 'description': 'indicates whether the underlying storage supports reverting the volume to this snapshot'}, {'type': 'string', 'name': 'zoneid', 'description': 'id of the availability zone'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the snapshot'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the snapshot'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the snapshot'}, {'type': 'string', 'name': 'volumename', 'description': 'name of the disk volume'}, {'type': 'long', 'name': 'physicalsize', 'description': 'physical size of backedup snapshot on image store'}, {'type': 'date', 'name': 'created', 'description': '  the date the snapshot was created'}, {'type': 'string', 'name': 'volumetype', 'description': 'type of the disk volume'}, {'type': 'string', 'name': 'name', 'description': 'name of the snapshot'}], 'description': 'revert a volume snapshot.'}}, 'dedicate': {'publiciprange': {'name': 'dedicatePublicIpRange', 'related': ['listVlanIpRanges'], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listVlanIpRanges', 'dedicatePublicIpRange'], 'length': 255, 'type': 'uuid', 'description': 'the id of the VLAN IP range'}, {'name': 'domainid', 'required': True, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'domain ID of the account owning a VLAN'}, {'name': 'projectid', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'project who will own the VLAN'}, {'name': 'account', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'account who will own the VLAN'}], 'requiredparams': ['id', 'domainid', 'account'], 'response': [{'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the VLAN IP range'}, {'type': 'string', 'name': 'startipv6', 'description': 'the start ipv6 of the VLAN IP range'}, {'type': 'string', 'name': 'endip', 'description': 'the end ip of the VLAN IP range'}, {'type': 'string', 'name': 'vlan', 'description': 'the ID or VID of the VLAN.'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the VLAN IP range'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vlan range'}, {'type': 'string', 'name': 'networkid', 'description': 'the network id of vlan range'}, {'type': 'string', 'name': 'podid', 'description': 'the Pod ID for the VLAN IP range'}, {'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network this belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vlan range'}, {'type': 'string', 'name': 'zoneid', 'description': 'the Zone ID of the VLAN IP range'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the VLAN IP range'}, {'type': 'string', 'name': 'startip', 'description': 'the start ip of the VLAN IP range'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the VLAN IP range'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the VLAN IP range'}, {'type': 'string', 'name': 'account', 'description': 'the account of the VLAN IP range'}, {'type': 'string', 'name': 'endipv6', 'description': 'the end ipv6 of the VLAN IP range'}, {'type': 'string', 'name': 'podname', 'description': 'the Pod name for the VLAN IP range'}, {'type': 'string', 'name': 'description', 'description': 'the description of the VLAN IP range'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the VLAN IP range'}], 'description': 'Dedicates a Public IP range to an account'}, 'zone': {'name': 'dedicateZone', 'related': ['listDedicatedZones'], 'isasync': True, 'params': [{'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone'}, {'name': 'domainid', 'required': True, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the containing domain'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account which needs dedication. Must be used with domainId.'}], 'requiredparams': ['zoneid', 'domainid'], 'response': [{'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}, {'type': 'string', 'name': 'zonename', 'description': 'the Name of the Zone'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the Zone'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account Id to which the Zone is dedicated'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID to which the Zone is dedicated'}, {'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the zone'}], 'description': 'Dedicates a zones.'}, 'guestvlanrange': {'name': 'dedicateGuestVlanRange', 'related': [], 'isasync': False, 'params': [{'name': 'domainid', 'required': True, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'domain ID of the account owning a VLAN'}, {'name': 'account', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'account who will own the VLAN'}, {'name': 'physicalnetworkid', 'required': True, 'related': ['listPhysicalNetworks'], 'length': 255, 'type': 'uuid', 'description': 'physical network ID of the vlan'}, {'name': 'vlanrange', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'guest vlan range to be dedicated'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'project who will own the VLAN'}], 'requiredparams': ['domainid', 'account', 'physicalnetworkid', 'vlanrange'], 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id of the guest vlan range'}, {'type': 'string', 'name': 'account', 'description': 'the account of the guest VLAN range'}, {'type': 'long', 'name': 'zoneid', 'description': 'the zone of the guest vlan range'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the guest VLAN range'}, {'type': 'long', 'name': 'physicalnetworkid', 'description': 'the physical network of the guest vlan range'}, {'type': 'string', 'name': 'guestvlanrange', 'description': 'the guest VLAN range'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the guest VLAN range'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the guest vlan range'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the guest VLAN range'}], 'description': 'Dedicates a guest vlan range to an account'}, 'cluster': {'name': 'dedicateCluster', 'related': [], 'isasync': True, 'params': [{'name': 'clusterid', 'required': True, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Cluster'}, {'name': 'domainid', 'required': True, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the containing domain'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account which needs dedication. Must be used with domainId.'}], 'requiredparams': ['clusterid', 'domainid'], 'response': [{'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the cluster'}, {'type': 'string', 'name': 'clusterid', 'description': 'the ID of the cluster'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the cluster'}, {'type': 'string', 'name': 'clustername', 'description': 'the name of the cluster'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account ID of the cluster'}], 'description': 'Dedicate an existing cluster'}, 'host': {'name': 'dedicateHost', 'related': [], 'isasync': True, 'params': [{'name': 'domainid', 'required': True, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the containing domain'}, {'name': 'hostid', 'required': True, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the host to update'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account which needs dedication. Must be used with domainId.'}], 'requiredparams': ['domainid', 'hostid'], 'response': [{'type': 'string', 'name': 'hostid', 'description': 'the ID of the host'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host'}, {'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the host'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the host'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account ID of the host'}], 'description': 'Dedicates a host.'}, 'pod': {'name': 'dedicatePod', 'related': [], 'isasync': True, 'params': [{'name': 'domainid', 'required': True, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the containing domain'}, {'name': 'podid', 'required': True, 'related': ['createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Pod'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the name of the account which needs dedication. Must be used with domainId.'}], 'requiredparams': ['domainid', 'podid'], 'response': [{'type': 'string', 'name': 'affinitygroupid', 'description': 'the Dedication Affinity Group ID of the pod'}, {'type': 'string', 'name': 'accountid', 'description': 'the Account Id to which the Pod is dedicated'}, {'type': 'string', 'name': 'podid', 'description': 'the ID of the Pod'}, {'type': 'string', 'name': 'podname', 'description': 'the Name of the Pod'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID to which the Pod is dedicated'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the dedicated resource'}], 'description': 'Dedicates a Pod.'}}, 'remove': {'fromgloballoadbalancerrule': {'name': 'removeFromGlobalLoadBalancerRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateGlobalLoadBalancerRule', 'listGlobalLoadBalancerRules', 'createGlobalLoadBalancerRule'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the load balancer rule'}, {'name': 'loadbalancerrulelist', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'list', 'description': 'the list load balancer rules that will be assigned to gloabal load balancer rule'}], 'requiredparams': ['id', 'loadbalancerrulelist'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Removes a load balancer rule association with global load balancer rule'}, 'fromloadbalancerrule': {'name': 'removeFromLoadBalancerRule', 'related': [], 'isasync': True, 'params': [{'name': 'vmidipmap', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75'}, {'name': 'id', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the load balancer rule'}, {'name': 'virtualmachineids', 'required': False, 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'list', 'description': 'the list of IDs of the virtual machines that are being removed from the load balancer rule (i.e. virtualMachineIds=1,2,3)'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Removes a virtual machine or a list of virtual machines from a load balancer rule.'}, 'resourcedetail': {'name': 'removeResourceDetail', 'related': [], 'isasync': True, 'params': [{'name': 'resourceid', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Delete details for resource id'}, {'name': 'key', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Delete details matching key/value pairs'}, {'name': 'resourcetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Delete detail by resource type'}], 'requiredparams': ['resourceid', 'resourcetype'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Removes detail for the Resource.'}, 'guestosmapping': {'name': 'removeGuestOsMapping', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateGuestOsMapping', 'addGuestOsMapping'], 'length': 255, 'type': 'uuid', 'description': 'ID of the guest OS mapping'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Removes a Guest OS Mapping.'}, 'nicfromvirtualmachine': {'name': 'removeNicFromVirtualMachine', 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': True, 'params': [{'name': 'virtualmachineid', 'required': True, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'updateDefaultNicForVirtualMachine', 'resetPasswordForVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'removeNicFromVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'Virtual Machine ID'}, {'name': 'nicid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'NIC ID'}], 'requiredparams': ['virtualmachineid', 'nicid'], 'response': [{'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}], 'name': 'nic'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}], 'name': 'affinitygroup'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}], 'name': 'tags'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}], 'name': 'egressrule'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}], 'name': 'tags'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}], 'name': 'ingressrule'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}], 'description': 'Removes VM from specified network by deleting a NIC'}, 'rawusagerecords': {'name': 'removeRawUsageRecords', 'related': [], 'isasync': False, 'params': [{'name': 'interval', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'Specify the number of days (greater than zero) to remove records that are older than those number of days from today. For example, specifying 10 would result in removing all the records created before 10 days from today'}], 'requiredparams': ['interval'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Safely removes raw records from cloud_usage table'}, 'vpnuser': {'name': 'removeVpnUser', 'related': [], 'isasync': True, 'params': [{'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'username for the vpn user'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'an optional account for the vpn user. Must be used with domainId.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'remove vpn user from the project'}], 'requiredparams': ['username'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Removes vpn user'}, 'vmwaredc': {'name': 'removeVmwareDc', 'related': [], 'isasync': False, 'params': [{'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'The id of Zone from which VMware datacenter has to be removed.'}], 'requiredparams': ['zoneid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Remove a VMware datacenter from a zone.'}, 'guestos': {'name': 'removeGuestOs', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listOsTypes', 'addGuestOs'], 'length': 255, 'type': 'uuid', 'description': 'ID of the guest OS'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Removes a Guest OS from listing.'}, 'certfromloadbalancer': {'name': 'removeCertFromLoadBalancer', 'related': [], 'isasync': True, 'params': [{'name': 'lbruleid', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}], 'requiredparams': ['lbruleid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Removes a certificate from a load balancer rule'}, 'region': {'name': 'removeRegion', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'integer', 'description': 'ID of the region to delete'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Removes specified region'}, 'ipfromnic': {'name': 'removeIpFromNic', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['addIpToNic'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the secondary ip address to nic'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Removes secondary IP from the NIC.'}}, 'mark': {'defaultzoneforaccount': {'name': 'markDefaultZoneForAccount', 'related': ['listAccounts'], 'isasync': True, 'params': [{'name': 'account', 'required': True, 'related': ['listAccounts', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'string', 'description': 'Name of the account that is to be marked.'}, {'name': 'domainid', 'required': True, 'related': ['listDomains'], 'length': 255, 'type': 'uuid', 'description': 'Marks the account that belongs to the specified domain.'}, {'name': 'zoneid', 'required': True, 'related': ['listZones'], 'length': 255, 'type': 'uuid', 'description': 'The Zone ID with which the account is to be marked.'}], 'requiredparams': ['account', 'domainid', 'zoneid'], 'response': [{'type': 'string', 'name': 'projectlimit', 'description': 'the total number of projects the account can own'}, {'type': 'string', 'name': 'vmavailable', 'description': 'the total number of virtual machines available for this account to acquire'}, {'type': 'long', 'name': 'networktotal', 'description': 'the total number of networks owned by account'}, {'type': 'string', 'name': 'name', 'description': 'the name of the account'}, {'type': 'long', 'name': 'vpctotal', 'description': 'the total number of vpcs owned by account'}, {'type': 'long', 'name': 'volumetotal', 'description': 'the total volume being used by this account'}, {'type': 'string', 'name': 'networkdomain', 'description': 'the network domain'}, {'type': 'long', 'name': 'iptotal', 'description': 'the total number of public ip addresses allocated for this account'}, {'type': 'string', 'name': 'projectavailable', 'description': 'the total number of projects available for administration by this account'}, {'type': 'long', 'name': 'primarystoragetotal', 'description': 'the total primary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'cpuavailable', 'description': 'the total number of cpu cores available to be created for this account'}, {'type': 'long', 'name': 'sentbytes', 'description': 'the total number of network traffic bytes sent'}, {'type': 'long', 'name': 'secondarystoragetotal', 'description': 'the total secondary storage space (in GiB) owned by account'}, {'type': 'string', 'name': 'secondarystorageavailable', 'description': 'the total secondary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'vmlimit', 'description': 'the total number of virtual machines that can be deployed by this account'}, {'type': 'string', 'name': 'domain', 'description': 'name of the Domain the account belongs too'}, {'type': 'string', 'name': 'secondarystoragelimit', 'description': 'the total secondary storage space (in GiB) the account can own'}, {'type': 'string', 'name': 'templatelimit', 'description': 'the total number of templates which can be created by this account'}, {'type': 'long', 'name': 'memorytotal', 'description': 'the total memory (in MB) owned by account'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if account is default, false otherwise'}, {'type': 'string', 'name': 'vpcavailable', 'description': 'the total number of vpcs available to be created for this account'}, {'type': 'string', 'name': 'memoryavailable', 'description': 'the total memory (in MB) available to be created for this account'}, {'type': 'string', 'name': 'iplimit', 'description': 'the total number of public ip addresses this account can acquire'}, {'type': 'string', 'name': 'networklimit', 'description': 'the total number of networks the account can own'}, {'type': 'integer', 'name': 'vmstopped', 'description': 'the total number of virtual machines stopped for this account'}, {'type': 'string', 'name': 'id', 'description': 'the id of the account'}, {'type': 'long', 'name': 'snapshottotal', 'description': 'the total number of snapshots stored by this account'}, {'description': 'the list of users associated with account', 'type': 'list', 'response': [{'type': 'string', 'name': 'secretkey', 'description': 'the secret key of the user'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the user'}, {'type': 'string', 'name': 'email', 'description': 'the user email address'}, {'type': 'short', 'name': 'accounttype', 'description': 'the account type of the user'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if user is default, false otherwise'}, {'type': 'boolean', 'name': 'iscallerchilddomain', 'description': "the boolean value representing if the updating target is in caller's child domain"}, {'type': 'string', 'name': 'accountid', 'description': 'the account ID of the user'}, {'type': 'string', 'name': 'username', 'description': 'the user name'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the user'}, {'type': 'string', 'name': 'id', 'description': 'the user ID'}, {'type': 'string', 'name': 'account', 'description': 'the account name of the user'}, {'type': 'string', 'name': 'firstname', 'description': 'the user firstname'}, {'type': 'string', 'name': 'lastname', 'description': 'the user lastname'}, {'type': 'string', 'name': 'timezone', 'description': 'the timezone user was created in'}, {'type': 'date', 'name': 'created', 'description': 'the date and time the user account was created'}, {'type': 'string', 'name': 'state', 'description': 'the user state'}, {'type': 'string', 'name': 'apikey', 'description': 'the api key of the user'}], 'name': 'user'}, {'type': 'long', 'name': 'templatetotal', 'description': 'the total number of templates which have been created by this account'}, {'type': 'long', 'name': 'vmtotal', 'description': 'the total number of virtual machines deployed by this account'}, {'type': 'string', 'name': 'memorylimit', 'description': 'the total memory (in MB) the account can own'}, {'type': 'string', 'name': 'volumeavailable', 'description': 'the total volume available for this account'}, {'type': 'integer', 'name': 'vmrunning', 'description': 'the total number of virtual machines running for this account'}, {'type': 'string', 'name': 'templateavailable', 'description': 'the total number of templates available to be created by this account'}, {'type': 'string', 'name': 'primarystorageavailable', 'description': 'the total primary storage space (in GiB) available to be used for this account'}, {'type': 'string', 'name': 'networkavailable', 'description': 'the total number of networks available to be created for this account'}, {'type': 'short', 'name': 'accounttype', 'description': 'account type (admin, domain-admin, user)'}, {'type': 'list', 'name': 'groups', 'description': 'the list of acl groups that account belongs to'}, {'type': 'map', 'name': 'accountdetails', 'description': 'details for the account'}, {'type': 'string', 'name': 'defaultzoneid', 'description': 'the default zone of the account'}, {'type': 'long', 'name': 'projecttotal', 'description': 'the total number of projects being administrated by this account'}, {'type': 'string', 'name': 'snapshotlimit', 'description': 'the total number of snapshots which can be stored by this account'}, {'type': 'string', 'name': 'state', 'description': 'the state of the account'}, {'type': 'string', 'name': 'ipavailable', 'description': 'the total number of public ip addresses available for this account to acquire'}, {'type': 'string', 'name': 'vpclimit', 'description': 'the total number of vpcs the account can own'}, {'type': 'string', 'name': 'domainid', 'description': 'id of the Domain the account belongs too'}, {'type': 'string', 'name': 'snapshotavailable', 'description': 'the total number of snapshots available for this account'}, {'type': 'string', 'name': 'primarystoragelimit', 'description': 'the total primary storage space (in GiB) the account can own'}, {'type': 'long', 'name': 'cputotal', 'description': 'the total number of cpu cores owned by account'}, {'type': 'string', 'name': 'volumelimit', 'description': 'the total volume which can be used by this account'}, {'type': 'string', 'name': 'cpulimit', 'description': 'the total number of cpu cores the account can own'}, {'type': 'long', 'name': 'receivedbytes', 'description': 'the total number of network traffic bytes received'}, {'type': 'boolean', 'name': 'iscleanuprequired', 'description': 'true if the account requires cleanup'}], 'description': 'Marks a default zone for this account'}}, 'asyncapis': ['reconnectHost', 'createCondition', 'copyTemplate', 'addNicToVirtualMachine', 'extractVolume', 'addAccountToProject', 'deleteCiscoNexusVSM', 'deleteEgressFirewallRule', 'createVpnConnection', 'suspendProject', 'deleteLoadBalancer', 'authorizeSecurityGroupIngress', 'addNetscalerLoadBalancer', 'deleteDomain', 'createPortableIpRange', 'configureNetscalerLoadBalancer', 'createTemplate', 'migrateVolume', 'deleteLBHealthCheckPolicy', 'updatePhysicalNetwork', 'deleteStaticRoute', 'deletePaloAltoFirewall', 'destroySystemVm', 'updateRemoteAccessVpn', 'enableStorageMaintenance', 'removeFromGlobalLoadBalancerRule', 'updateLoadBalancer', 'stopRouter', 'attachVolume', 'updateVPCOffering', 'resetSSHKeyForVirtualMachine', 'cleanVMReservations', 'createAffinityGroup', 'deleteTags', 'deleteAccountFromProject', 'addBaremetalPxePingServer', 'deletePortableIpRange', 'updateVolume', 'uploadCustomCertificate', 'createAutoScaleVmProfile', 'releaseDedicatedGuestVlanRange', 'cancelHostMaintenance', 'releaseDedicatedHost', 'addNuageVspDevice', 'deleteStorageNetworkIpRange', 'createInternalLoadBalancerElement', 'deleteFirewallRule', 'deleteNiciraNvpDevice', 'deleteProject', 'removeIpFromNic', 'deleteIpForwardingRule', 'createGlobalLoadBalancerRule', 'resizeVolume', 'deleteBrocadeVcsDevice', 'createStaticRoute', 'deleteGlobalLoadBalancerRule', 'activateProject', 'releaseDedicatedZone', 'createVMSnapshot', 'configureF5LoadBalancer', 'createIpForwardingRule', 'updateIpAddress', 'addPaloAltoFirewall', 'releaseDedicatedCluster', 'updateVPC', 'startInternalLoadBalancerVM', 'associateUcsProfileToBlade', 'updateAutoScaleVmProfile', 'updatePortForwardingRule', 'addBigSwitchBcfDevice', 'createStorageNetworkIpRange', 'addGloboDnsHost', 'createLoadBalancer', 'cancelStorageMaintenance', 'deployVirtualMachine', 'revokeSecurityGroupEgress', 'createNetworkACLList', 'deleteCondition', 'createPortForwardingRule', 'createVPCOffering', 'createEgressFirewallRule', 'destroyRouter', 'updateLBStickinessPolicy', 'updateSnapshotPolicy', 'assignToGlobalLoadBalancerRule', 'updateTrafficType', 'addSrxFirewall', 'addNiciraNvpDevice', 'updateNetworkACLItem', 'addIpToNic', 'deleteNetworkACLList', 'configureInternalLoadBalancerElement', 'releaseHostReservation', 'assignCertToLoadBalancer', 'deleteVpnGateway', 'expungeVirtualMachine', 'createAutoScaleVmGroup', 'rebootRouter', 'deleteNetworkServiceProvider', 'createLBHealthCheckPolicy', 'removeGuestOsMapping', 'deleteIso', 'createVpnCustomerGateway', 'deleteAutoScalePolicy', 'deleteSrxFirewall', 'updateNetworkACLList', 'detachVolume', 'deleteNetworkACL', 'deleteVPC', 'updateLoadBalancerRule', 'createPhysicalNetwork', 'deleteTemplate', 'deleteVpnCustomerGateway', 'createVirtualRouterElement', 'releaseDedicatedPod', 'updateAutoScalePolicy', 'dedicateZone', 'createVpnGateway', 'deleteCounter', 'dedicateCluster', 'updateStorageNetworkIpRange', 'addBrocadeVcsDevice', 'dedicatePod', 'addF5LoadBalancer', 'deleteAutoScaleVmGroup', 'updateGlobalLoadBalancerRule', 'createServiceInstance', 'deleteBaremetalRct', 'authorizeSecurityGroupEgress', 'disableAutoScaleVmGroup', 'prepareHostForMaintenance', 'addOpenDaylightController', 'updateEgressFirewallRule', 'deletePrivateGateway', 'updateGuestOs', 'stopInternalLoadBalancerVM', 'deleteTrafficType', 'deleteLoadBalancerRule', 'attachIso', 'deletePortForwardingRule', 'removeCertFromLoadBalancer', 'configureSrxFirewall', 'updateProjectInvitation', 'createTags', 'enableAutoScaleVmGroup', 'removeVpnUser', 'scaleVirtualMachine', 'updateVpnCustomerGateway', 'stopSystemVm', 'restartNetwork', 'removeGuestOs', 'rebootVirtualMachine', 'enableCiscoNexusVSM', 'updateVMAffinityGroup', 'configurePaloAltoFirewall', 'deleteVpnConnection', 'updateVpnConnection', 'updateVpnGateway', 'startSystemVm', 'deleteF5LoadBalancer', 'updateProject', 'deleteNetwork', 'deleteNetscalerLoadBalancer', 'addTrafficType', 'deleteNuageVspDevice', 'disableUser', 'configureVirtualRouterElement', 'deleteProjectInvitation', 'addBaremetalRct', 'migrateSystemVm', 'removeNicFromVirtualMachine', 'revokeSecurityGroupIngress', 'updateDefaultNicForVirtualMachine', 'disableStaticNat', 'createNetworkACL', 'createVPC', 'addBaremetalPxeKickStartServer', 'addResourceDetail', 'disassociateIpAddress', 'createVolume', 'resetPasswordForVirtualMachine', 'assignToLoadBalancerRule', 'startRouter', 'updateGuestOsMapping', 'extractIso', 'removeResourceDetail', 'deleteRemoteAccessVpn', 'resetVpnConnection', 'startVirtualMachine', 'createRemoteAccessVpn', 'extractTemplate', 'detachIso', 'deleteAccount', 'associateIpAddress', 'deleteBigSwitchBcfDevice', 'disableAccount', 'migrateVirtualMachine', 'removeFromLoadBalancerRule', 'addVpnUser', 'updateLBHealthCheckPolicy', 'updateFirewallRule', 'createPrivateGateway', 'deleteLBStickinessPolicy', 'disableCiscoNexusVSM', 'deleteVMSnapshot', 'deleteAutoScaleVmProfile', 'deleteSnapshot', 'createProject', 'createLoadBalancerRule', 'createAutoScalePolicy', 'restoreVirtualMachine', 'deleteAffinityGroup', 'copyIso', 'addGuestOsMapping', 'uploadVolume', 'createLBStickinessPolicy', 'migrateVirtualMachineWithVolume', 'stopVirtualMachine', 'createCounter', 'createSnapshot', 'configureOvsElement', 'destroyVirtualMachine', 'updateNetwork', 'dedicateHost', 'createFirewallRule', 'addNetworkServiceProvider', 'rebootSystemVm', 'revertToVMSnapshot', 'markDefaultZoneForAccount', 'restartVPC', 'replaceNetworkACLList', 'generateAlert', 'scaleSystemVm', 'updateAutoScaleVmGroup', 'deletePhysicalNetwork', 'addBaremetalDhcp', 'deleteVPCOffering', 'deleteOpenDaylightController', 'updateNetworkServiceProvider', 'addGuestOs', 'revertSnapshot'], 'resize': {'volume': {'name': 'resizeVolume', 'related': ['createVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createVolume', 'resizeVolume', 'createVolume', 'attachVolume', 'detachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the disk volume'}, {'name': 'maxiops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'New maximum number of IOPS'}, {'name': 'miniops', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'New minimum number of IOPS'}, {'name': 'size', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'New volume size in GB'}, {'name': 'diskofferingid', 'required': False, 'related': ['updateDiskOffering', 'createDiskOffering', 'listDiskOfferings'], 'length': 255, 'type': 'uuid', 'description': 'new disk offering id'}, {'name': 'shrinkok', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Verify OK to Shrink'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name of the vpn'}, {'type': 'long', 'name': 'diskIopsWriteRate', 'description': 'io requests write rate of the disk volume'}, {'type': 'string', 'name': 'storageid', 'description': 'id of the primary storage hosting the disk volume; returned to admin user only'}, {'type': 'boolean', 'name': 'displayvolume', 'description': 'an optional field whether to the display the volume to the end user or not.'}, {'type': 'string', 'name': 'status', 'description': 'the status of the volume'}, {'type': 'boolean', 'name': 'quiescevm', 'description': 'need quiesce vm or not when taking snapshot'}, {'type': 'string', 'name': 'zoneid', 'description': 'ID of the availability zone'}, {'type': 'long', 'name': 'diskIopsReadRate', 'description': 'io requests read rate of the disk volume'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the disk volume'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'name of the disk offering'}, {'type': 'string', 'name': 'vmdisplayname', 'description': 'display name of the virtual machine'}, {'type': 'string', 'name': 'state', 'description': 'the state of the disk volume'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the disk volume'}, {'type': 'date', 'name': 'attached', 'description': 'the date the volume was attached to a VM instance'}, {'type': 'string', 'name': 'name', 'description': 'name of the disk volume'}, {'type': 'long', 'name': 'deviceid', 'description': 'the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.'}, {'type': 'string', 'name': 'chaininfo', 'description': 'the chain info of the volume'}, {'type': 'string', 'name': 'storage', 'description': 'name of the primary storage hosting the disk volume'}, {'type': 'long', 'name': 'diskBytesWriteRate', 'description': 'bytes write rate of the disk volume'}, {'type': 'long', 'name': 'size', 'description': 'size of the disk volume'}, {'type': 'string', 'name': 'zonename', 'description': 'name of the availability zone'}, {'type': 'string', 'name': 'vmstate', 'description': 'state of the virtual machine'}, {'type': 'string', 'name': 'diskofferingdisplaytext', 'description': 'the display text of the disk offering'}, {'description': 'the list of resource tags associated with volume', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'name of the service offering for root disk'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'boolean', 'name': 'isextractable', 'description': 'true if the volume is extractable, false otherwise'}, {'type': 'string', 'name': 'storagetype', 'description': 'shared or local storage'}, {'type': 'string', 'name': 'hypervisor', 'description': 'Hypervisor the volume belongs to'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'id of the virtual machine'}, {'type': 'long', 'name': 'maxiops', 'description': 'max iops of the disk volume'}, {'type': 'string', 'name': 'snapshotid', 'description': 'ID of the snapshot from which this volume was created'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'ID of the service offering for root disk'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the disk volume'}, {'type': 'string', 'name': 'type', 'description': 'type of the disk volume (ROOT or DATADISK)'}, {'type': 'string', 'name': 'vmname', 'description': 'name of the virtual machine'}, {'type': 'string', 'name': 'id', 'description': 'ID of the disk volume'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'provisioningtype', 'description': 'provisioning type used to create volumes.'}, {'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vpn'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'ID of the disk offering'}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'boolean', 'name': 'destroyed', 'description': 'the boolean state of whether the volume is destroyed or not'}, {'type': 'long', 'name': 'diskBytesReadRate', 'description': 'bytes read rate of the disk volume'}, {'type': 'long', 'name': 'miniops', 'description': 'min iops of the disk volume'}, {'type': 'string', 'name': 'serviceofferingdisplaytext', 'description': 'the display text of the service offering for root disk'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'type': 'date', 'name': 'created', 'description': 'the date the disk volume was created'}, {'type': 'string', 'name': 'path', 'description': 'the path of the volume'}], 'description': 'Resizes a volume'}}, 'clean': {'vmreservations': {'name': 'cleanVMReservations', 'related': [], 'isasync': True, 'params': [], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Cleanups VM reservations in the database.'}}, 'login': {'': {'name': 'login', 'related': ['samlSso'], 'isasync': False, 'params': [{'name': 'domain', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'Path of the domain that the user belongs to. Example: domain=/com/cloud/internal. If no domain is passed in, the ROOT (/) domain is assumed.'}, {'name': 'password', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hashed password (Default is MD5). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.'}, {'name': 'domainId', 'required': False, 'related': [], 'length': 255, 'type': 'long', 'description': 'The id of the domain that the user belongs to. If both domain and domainId are passed in, "domainId" parameter takes precendence'}, {'name': 'username', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Username'}], 'requiredparams': ['password', 'username'], 'response': [{'type': 'string', 'name': 'account', 'description': 'the account name the user belongs to'}, {'type': 'string', 'name': 'sessionkey', 'description': 'Session key that can be passed in subsequent Query command calls'}, {'type': 'string', 'name': 'registered', 'description': 'Is user registered'}, {'type': 'string', 'name': 'username', 'description': 'Username'}, {'type': 'string', 'name': 'lastname', 'description': 'last name of the user'}, {'type': 'integer', 'name': 'timeout', 'description': 'the time period before the session has expired'}, {'type': 'string', 'name': 'timezone', 'description': 'user time zone'}, {'type': 'string', 'name': 'type', 'description': 'the account type (admin, domain-admin, read-only-admin, user)'}, {'type': 'string', 'name': 'firstname', 'description': 'first name of the user'}, {'type': 'string', 'name': 'userid', 'description': 'User ID'}, {'type': 'string', 'name': 'domainid', 'description': 'Domain ID that the user belongs to'}], 'description': 'Logs a user into the CloudStack. A successful login attempt will generate a JSESSIONID cookie value that can be passed in subsequent Query command calls until the "logout" command has been issued or the session has expired.'}}, 'delete': {'baremetalrct': {'name': 'deleteBaremetalRct', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listBaremetalRct', 'addBaremetalRct'], 'length': 255, 'type': 'uuid', 'description': 'RCT id'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'deletes baremetal rack configuration text'}, 'loadbalancerrule': {'name': 'deleteLoadBalancerRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a load balancer rule.'}, 'domain': {'name': 'deleteDomain', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren', 'createDomain'], 'length': 255, 'type': 'uuid', 'description': 'ID of domain to delete'}, {'name': 'cleanup', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'true if all domain resources (child domains, accounts) have to be cleaned up, false otherwise'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a specified domain'}, 'alerts': {'name': 'deleteAlerts', 'related': [], 'isasync': False, 'params': [{'name': 'startdate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'start date range to delete alerts (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'delete by alert type'}, {'name': 'ids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the IDs of the alerts'}, {'name': 'enddate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'end date range to delete alerts (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Delete one or more alerts.'}, 'ciscoasa1000vresource': {'name': 'deleteCiscoAsa1000vResource', 'related': [], 'isasync': False, 'params': [{'name': 'resourceid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'Cisco ASA 1000v resource ID'}], 'requiredparams': ['resourceid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a Cisco ASA 1000v appliance'}, 'diskoffering': {'name': 'deleteDiskOffering', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['createDiskOffering'], 'length': 255, 'type': 'uuid', 'description': 'ID of the disk offering'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Updates a disk offering.'}, 'nuagevspdevice': {'name': 'deleteNuageVspDevice', 'related': [], 'isasync': True, 'params': [{'name': 'vspdeviceid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'Nuage device ID'}], 'requiredparams': ['vspdeviceid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'delete a nuage vsp device'}, 'autoscalepolicy': {'name': 'deleteAutoScalePolicy', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateAutoScalePolicy', 'createAutoScalePolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale policy'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a autoscale policy.'}, 'externalloadbalancer': {'name': 'deleteExternalLoadBalancer', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['addBaremetalHost', 'listHosts', 'cancelHostMaintenance', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'Id of the external loadbalancer appliance.'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a F5 external load balancer appliance added in a zone.'}, 'securitygroup': {'name': 'deleteSecurityGroup', 'related': [], 'isasync': False, 'params': [{'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID of account owning the security group'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account of the security group. Must be specified with domain ID'}, {'name': 'id', 'required': False, 'related': ['listSecurityGroups'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the security group. Mutually exclusive with name parameter'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The ID of the security group. Mutually exclusive with id parameter'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'the project of the security group'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes security group'}, 'portforwardingrule': {'name': 'deletePortForwardingRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the port forwarding rule'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a port forwarding rule'}, 'cluster': {'name': 'deleteCluster', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the cluster ID'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a cluster.'}, 'accountfromproject': {'name': 'deleteAccountFromProject', 'related': [], 'isasync': True, 'params': [{'name': 'projectid', 'required': True, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'ID of the project to remove the account from'}, {'name': 'account', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'name of the account to be removed from the project'}], 'requiredparams': ['projectid', 'account'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes account from the project'}, 'opendaylightcontroller': {'name': 'deleteOpenDaylightController', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['deleteOpenDaylightController'], 'length': 255, 'type': 'uuid', 'description': 'OpenDaylight Controller ID'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'physicalnetworkid', 'description': 'the physical network to which this controller belongs to'}, {'type': 'string', 'name': 'name', 'description': 'the name assigned to the controller'}, {'type': 'string', 'name': 'url', 'description': 'the url of the controller api'}, {'type': 'string', 'name': 'id', 'description': 'device id of the controller'}, {'type': 'string', 'name': 'username', 'description': 'the username to authenticate to the controller'}], 'description': 'Removes an OpenDyalight controler'}, 'networkdevice': {'name': 'deleteNetworkDevice', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'Id of network device to delete'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes network device.'}, 'pod': {'name': 'deletePod', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listPods', 'createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Pod'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a Pod.'}, 'cisconexusvsm': {'name': 'deleteCiscoNexusVSM', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['disableCiscoNexusVSM', 'enableCiscoNexusVSM', 'listCiscoNexusVSMs'], 'length': 255, 'type': 'uuid', 'description': 'Id of the Cisco Nexus 1000v VSM device to be deleted'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': ' delete a Cisco Nexus VSM device'}, 'brocadevcsdevice': {'name': 'deleteBrocadeVcsDevice', 'related': [], 'isasync': True, 'params': [{'name': 'vcsdeviceid', 'required': True, 'related': ['addBrocadeVcsDevice', 'listBrocadeVcsDevices'], 'length': 255, 'type': 'uuid', 'description': 'Brocade Switch ID'}], 'requiredparams': ['vcsdeviceid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': ' delete a Brocade VCS Switch'}, 'secondarystagingstore': {'name': 'deleteSecondaryStagingStore', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['addS3', 'listSwifts', 'listSecondaryStagingStores', 'addImageStore', 'createSecondaryStagingStore'], 'length': 255, 'type': 'uuid', 'description': 'the staging store ID'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a secondary staging store .'}, 'project': {'name': 'deleteProject', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateProject', 'createProject', 'listProjectAccounts', 'activateProject'], 'length': 255, 'type': 'uuid', 'description': 'id of the project to be deleted'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a project'}, 'snapshotpolicies': {'name': 'deleteSnapshotPolicies', 'related': [], 'isasync': False, 'params': [{'name': 'ids', 'required': False, 'related': ['createSnapshotPolicy'], 'length': 255, 'type': 'list', 'description': 'list of snapshots policy IDs separated by comma'}, {'name': 'id', 'required': False, 'related': ['createSnapshotPolicy'], 'length': 255, 'type': 'uuid', 'description': 'the Id of the snapshot policy'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes snapshot policies for the account.'}, 'vpcoffering': {'name': 'deleteVPCOffering', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the VPC offering'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes VPC offering'}, 'network': {'name': 'deleteNetwork', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listSrxFirewallNetworks', 'listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network'}, {'name': 'forced', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': "Force delete a network. Network will be marked as 'Destroy' even when commands to shutdown and cleanup to the backend fails."}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a network'}, 'zone': {'name': 'deleteZone', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Zone'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a Zone.'}, 'remoteaccessvpn': {'name': 'deleteRemoteAccessVpn', 'related': [], 'isasync': True, 'params': [{'name': 'publicipid', 'required': True, 'related': ['associateIpAddress', 'associateIpAddress', 'listPublicIpAddresses'], 'length': 255, 'type': 'uuid', 'description': 'public ip address id of the vpn server'}], 'requiredparams': ['publicipid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Destroys a l2tp/ipsec remote access vpn'}, 'storagenetworkiprange': {'name': 'deleteStorageNetworkIpRange', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createStorageNetworkIpRange', 'updateStorageNetworkIpRange', 'listStorageNetworkIpRange'], 'length': 255, 'type': 'uuid', 'description': 'the uuid of the storage network ip range'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a storage network IP Range.'}, 'ipforwardingrule': {'name': 'deleteIpForwardingRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the forwarding rule'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes an IP forwarding rule'}, 'projectinvitation': {'name': 'deleteProjectInvitation', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'id of the invitation'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes project invitation'}, 'ciscovnmcresource': {'name': 'deleteCiscoVnmcResource', 'related': [], 'isasync': False, 'params': [{'name': 'resourceid', 'required': True, 'related': ['addCiscoVnmcResource'], 'length': 255, 'type': 'uuid', 'description': 'Cisco Vnmc resource ID'}], 'requiredparams': ['resourceid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a Cisco Vnmc controller'}, 'globalloadbalancerrule': {'name': 'deleteGlobalLoadBalancerRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateGlobalLoadBalancerRule', 'listGlobalLoadBalancerRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the global load balancer rule'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a global load balancer rule.'}, 'portableiprange': {'name': 'deletePortableIpRange', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listPortableIpRanges'], 'length': 255, 'type': 'uuid', 'description': 'Id of the portable ip range'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': "deletes a range of portable public IP's associated with a region"}, 'niciranvpdevice': {'name': 'deleteNiciraNvpDevice', 'related': [], 'isasync': True, 'params': [{'name': 'nvpdeviceid', 'required': True, 'related': ['addNiciraNvpDevice', 'listNiciraNvpDevices'], 'length': 255, 'type': 'uuid', 'description': 'Nicira device ID'}], 'requiredparams': ['nvpdeviceid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': ' delete a nicira nvp device'}, 'serviceoffering': {'name': 'deleteServiceOffering', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listServiceOfferings'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the service offering'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a service offering.'}, 'condition': {'name': 'deleteCondition', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listConditions'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the condition.'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Removes a condition'}, 'template': {'name': 'deleteTemplate', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the template'}, {'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of zone of the template'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a template from the system. All virtual machines using the deleted template will not be affected.'}, 'vpngateway': {'name': 'deleteVpnGateway', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createVpnGateway', 'updateVpnGateway'], 'length': 255, 'type': 'uuid', 'description': 'id of customer gateway'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Delete site to site vpn gateway'}, 'iso': {'name': 'deleteIso', 'related': [], 'isasync': True, 'params': [{'name': 'zoneid', 'required': False, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the zone of the ISO file. If not specified, the ISO will be deleted from all the zones'}, {'name': 'id', 'required': True, 'related': ['listIsos', 'updateTemplate', 'copyIso', 'registerTemplate', 'registerTemplate', 'registerIso', 'listTemplates', 'prepareTemplate', 'registerIso', 'listTemplates', 'updateIso', 'copyTemplate', 'copyIso', 'listIsos', 'createTemplate'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the ISO file'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes an ISO file.'}, 'networkacllist': {'name': 'deleteNetworkACLList', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network ACL'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a network ACL'}, 'events': {'name': 'deleteEvents', 'related': [], 'isasync': False, 'params': [{'name': 'enddate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'end date range to delete events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}, {'name': 'ids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'the IDs of the events'}, {'name': 'startdate', 'required': False, 'related': [], 'length': 255, 'type': 'date', 'description': 'start date range to delete events (including) this date (use format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")'}, {'name': 'type', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'delete by event type'}], 'requiredparams': [], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Delete one or more events.'}, 'autoscalevmgroup': {'name': 'deleteAutoScaleVmGroup', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['disableAutoScaleVmGroup', 'enableAutoScaleVmGroup', 'updateAutoScaleVmGroup'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale group'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a autoscale vm group.'}, 'vpnconnection': {'name': 'deleteVpnConnection', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateVpnConnection', 'listVpnConnections', 'resetVpnConnection'], 'length': 255, 'type': 'uuid', 'description': 'id of vpn connection'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Delete site to site vpn connection'}, 'trafficmonitor': {'name': 'deleteTrafficMonitor', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listHosts', 'listExternalLoadBalancers', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'Id of the Traffic Monitor Host.'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes an traffic monitor host.'}, 'networkacl': {'name': 'deleteNetworkACL', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createNetworkACL'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network ACL'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a network ACL'}, 'storagepool': {'name': 'deleteStoragePool', 'related': [], 'isasync': False, 'params': [{'name': 'forced', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force destroy storage pool (force expunge volumes in Destroyed state as a part of pool removal)'}, {'name': 'id', 'required': True, 'related': ['findStoragePoolsForMigration'], 'length': 255, 'type': 'uuid', 'description': 'Storage pool id'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a storage pool.'}, 'ldapconfiguration': {'name': 'deleteLdapConfiguration', 'related': ['addLdapConfiguration'], 'isasync': False, 'params': [{'name': 'hostname', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Hostname'}], 'requiredparams': ['hostname'], 'response': [{'type': 'string', 'name': 'hostname', 'description': 'hostname'}, {'type': 'int', 'name': 'port', 'description': 'port'}], 'description': 'Remove an Ldap Configuration'}, 'sslcert': {'name': 'deleteSslCert', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listSslCerts'], 'length': 255, 'type': 'uuid', 'description': 'Id of SSL certificate'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Delete a certificate to CloudStack'}, 'lbstickinesspolicy': {'name': 'deleteLBStickinessPolicy', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createLBStickinessPolicy'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the LB stickiness policy'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a load balancer stickiness policy.'}, 'staticroute': {'name': 'deleteStaticRoute', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createStaticRoute', 'listStaticRoutes'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the static route'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a static route'}, 'traffictype': {'name': 'deleteTrafficType', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['addTrafficType'], 'length': 255, 'type': 'uuid', 'description': 'traffic type id'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes traffic type of a physical network'}, 'host': {'name': 'deleteHost', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the host ID'}, {'name': 'forcedestroylocalstorage', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force destroy local storage on this host. All VMs created on this local storage will be destroyed'}, {'name': 'forced', 'required': False, 'related': [], 'length': 255, 'type': 'boolean', 'description': 'Force delete the host. All HA enabled vms running on the host will be put to HA; HA disabled ones will be stopped'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a host.'}, 'user': {'name': 'deleteUser', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['disableUser', 'getUser', 'lockUser', 'updateUser', 'listUsers'], 'length': 255, 'type': 'uuid', 'description': 'id of the user to be deleted'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a user for an account'}, 'vpc': {'name': 'deleteVPC', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateVPC', 'listVPCs', 'createVPC', 'createVPC', 'listVPCs', 'restartVPC'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the VPC'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a VPC'}, 'bigswitchbcfdevice': {'name': 'deleteBigSwitchBcfDevice', 'related': [], 'isasync': True, 'params': [{'name': 'bcfdeviceid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'BigSwitch device ID'}], 'requiredparams': ['bcfdeviceid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': ' delete a BigSwitch BCF Controller device'}, 'srxfirewall': {'name': 'deleteSrxFirewall', 'related': [], 'isasync': True, 'params': [{'name': 'fwdeviceid', 'required': True, 'related': ['listSrxFirewalls', 'configureSrxFirewall'], 'length': 255, 'type': 'uuid', 'description': 'srx firewall device ID'}], 'requiredparams': ['fwdeviceid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': ' delete a SRX firewall device'}, 'externalfirewall': {'name': 'deleteExternalFirewall', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listHosts'], 'length': 255, 'type': 'uuid', 'description': 'Id of the external firewall appliance.'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes an external firewall appliance.'}, 'tags': {'name': 'deleteTags', 'related': [], 'isasync': True, 'params': [{'name': 'resourcetype', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Delete tag by resource type'}, {'name': 'tags', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'Delete tags matching key/value pairs'}, {'name': 'resourceids', 'required': True, 'related': [], 'length': 255, 'type': 'list', 'description': 'Delete tags for resource id(s)'}], 'requiredparams': ['resourcetype', 'resourceids'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deleting resource tag(s)'}, 'autoscalevmprofile': {'name': 'deleteAutoScaleVmProfile', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listAutoScaleVmProfiles'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the autoscale profile'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a autoscale vm profile.'}, 'affinitygroup': {'name': 'deleteAffinityGroup', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': False, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'The ID of the affinity group. Mutually exclusive with name parameter'}, {'name': 'name', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'The name of the affinity group. Mutually exclusive with ID parameter'}, {'name': 'domainid', 'required': False, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID of account owning the affinity group'}, {'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account of the affinity group. Must be specified with domain ID'}], 'requiredparams': [], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes affinity group'}, 'volume': {'name': 'deleteVolume', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['createVolume', 'createVolume', 'attachVolume', 'listVolumes', 'detachVolume', 'uploadVolume', 'resizeVolume', 'migrateVolume', 'uploadVolume', 'updateVolume'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the disk volume'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a detached disk volume.'}, 'account': {'name': 'deleteAccount', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['disableAccount', 'listAccounts', 'listAccounts', 'markDefaultZoneForAccount'], 'length': 255, 'type': 'uuid', 'description': 'Account id'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a account, and all users associated with this account'}, 'netscalerloadbalancer': {'name': 'deleteNetscalerLoadBalancer', 'related': [], 'isasync': True, 'params': [{'name': 'lbdeviceid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'netscaler load balancer device ID'}], 'requiredparams': ['lbdeviceid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': ' delete a netscaler load balancer device'}, 'firewallrule': {'name': 'deleteFirewallRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the firewall rule'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a firewall rule'}, 'networkoffering': {'name': 'deleteNetworkOffering', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['createNetworkOffering', 'updateNetworkOffering'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network offering'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a network offering.'}, 'vpncustomergateway': {'name': 'deleteVpnCustomerGateway', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateVpnCustomerGateway', 'listVpnCustomerGateways'], 'length': 255, 'type': 'uuid', 'description': 'id of customer gateway'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Delete site to site vpn customer gateway'}, 'counter': {'name': 'deleteCounter', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createCounter'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the counter'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a counter'}, 'lbhealthcheckpolicy': {'name': 'deleteLBHealthCheckPolicy', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateLBHealthCheckPolicy', 'createLBHealthCheckPolicy', 'listLBHealthCheckPolicies'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer health check policy'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a load balancer health check policy.'}, 'sshkeypair': {'name': 'deleteSSHKeyPair', 'related': [], 'isasync': False, 'params': [{'name': 'account', 'required': False, 'related': [], 'length': 255, 'type': 'string', 'description': 'the account associated with the keypair. Must be used with the domainId parameter.'}, {'name': 'domainid', 'required': False, 'related': ['updateDomain', 'listDomains', 'listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'the domain ID associated with the keypair'}, {'name': 'projectid', 'required': False, 'related': ['updateProject', 'createProject'], 'length': 255, 'type': 'uuid', 'description': 'the project associated with keypair'}, {'name': 'name', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'Name of the keypair'}], 'requiredparams': ['name'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a keypair by name'}, 'vmsnapshot': {'name': 'deleteVMSnapshot', 'related': [], 'isasync': True, 'params': [{'name': 'vmsnapshotid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'The ID of the VM snapshot'}], 'requiredparams': ['vmsnapshotid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a vmsnapshot.'}, 'vlaniprange': {'name': 'deleteVlanIpRange', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listVlanIpRanges', 'dedicatePublicIpRange'], 'length': 255, 'type': 'uuid', 'description': 'the id of the VLAN IP range'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Creates a VLAN IP range.'}, 'f5loadbalancer': {'name': 'deleteF5LoadBalancer', 'related': [], 'isasync': True, 'params': [{'name': 'lbdeviceid', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'netscaler load balancer device ID'}], 'requiredparams': ['lbdeviceid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': ' delete a F5 load balancer device'}, 'snapshot': {'name': 'deleteSnapshot', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['revertSnapshot', 'createSnapshot'], 'length': 255, 'type': 'uuid', 'description': 'The ID of the snapshot'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a snapshot of a disk volume.'}, 'loadbalancer': {'name': 'deleteLoadBalancer', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Load Balancer'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a load balancer'}, 'instancegroup': {'name': 'deleteInstanceGroup', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the instance group'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a vm group'}, 'imagestore': {'name': 'deleteImageStore', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'The image store ID or Secondary Storage ID.'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes an image store or Secondary Storage.'}, 'egressfirewallrule': {'name': 'deleteEgressFirewallRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updatePortForwardingRule', 'listIpForwardingRules', 'createPortForwardingRule', 'createIpForwardingRule', 'listPortForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the firewall rule'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes an egress firewall rule'}, 'networkserviceprovider': {'name': 'deleteNetworkServiceProvider', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['addNetworkServiceProvider', 'listTrafficTypes', 'updateNetworkServiceProvider'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the network service provider'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a Network Service Provider.'}, 'physicalnetwork': {'name': 'deletePhysicalNetwork', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': [], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Physical network'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Deletes a Physical Network.'}, 'paloaltofirewall': {'name': 'deletePaloAltoFirewall', 'related': [], 'isasync': True, 'params': [{'name': 'fwdeviceid', 'required': True, 'related': ['addPaloAltoFirewall', 'configurePaloAltoFirewall', 'listPaloAltoFirewalls'], 'length': 255, 'type': 'uuid', 'description': 'Palo Alto firewall device ID'}], 'requiredparams': ['fwdeviceid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': ' delete a Palo Alto firewall device'}, 'privategateway': {'name': 'deletePrivateGateway', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['createPrivateGateway'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the private gateway'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Deletes a Private gateway'}}, 'assign': {'togloballoadbalancerrule': {'name': 'assignToGlobalLoadBalancerRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['updateGlobalLoadBalancerRule', 'listGlobalLoadBalancerRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the global load balancer rule'}, {'name': 'gslblbruleweightsmap', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': "Map of LB rule id's and corresponding weights (between 1-100) in the GSLB rule, if not specified weight of a LB rule is defaulted to 1. Specified as 'gslblbruleweightsmap[0].loadbalancerid=UUID&gslblbruleweightsmap[0].weight=10'"}, {'name': 'loadbalancerrulelist', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'list', 'description': 'the list load balancer rules that will be assigned to global load balancer rule'}], 'requiredparams': ['id', 'loadbalancerrulelist'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Assign load balancer rule or list of load balancer rules to a global load balancer rules.'}, 'certtoloadbalancer': {'name': 'assignCertToLoadBalancer', 'related': [], 'isasync': True, 'params': [{'name': 'certid', 'required': True, 'related': ['listSslCerts'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the certificate'}, {'name': 'lbruleid', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}], 'requiredparams': ['certid', 'lbruleid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Assigns a certificate to a load balancer rule'}, 'virtualmachine': {'name': 'assignVirtualMachine', 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'isasync': False, 'params': [{'name': 'securitygroupids', 'required': False, 'related': [], 'length': 255, 'type': 'list', 'description': 'list of security group ids to be applied on the virtual machine. In case no security groups are provided the VM is part of the default security group.'}, {'name': 'account', 'required': True, 'related': [], 'length': 255, 'type': 'string', 'description': 'account name of the new VM owner.'}, {'name': 'domainid', 'required': True, 'related': ['listDomains', 'listDomainChildren'], 'length': 255, 'type': 'uuid', 'description': 'domain id of the new VM owner.'}, {'name': 'networkids', 'required': False, 'related': ['listNetscalerLoadBalancerNetworks', 'createNetwork', 'updateNetwork', 'updateNetwork', 'listNetworks'], 'length': 255, 'type': 'list', 'description': 'list of new network ids in which the moved VM will participate. In case no network ids are provided the VM will be part of the default network for that zone. In case there is no network yet created for the new account the default network will be created.'}, {'name': 'virtualmachineid', 'required': True, 'related': ['restoreVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'uuid', 'description': 'id of the VM to be moved'}], 'requiredparams': ['account', 'domainid', 'virtualmachineid'], 'response': [{'type': 'string', 'name': 'templatename', 'description': 'the name of the template for the virtual machine'}, {'type': 'string', 'name': 'userid', 'description': "the user's ID who deployed the virtual machine"}, {'type': 'string', 'name': 'templatedisplaytext', 'description': ' an alternate display text of the template for the virtual machine'}, {'type': 'string', 'name': 'displayname', 'description': 'user generated name. The name of the virtual machine is returned if no displayname exists.'}, {}, {'type': 'long', 'name': 'diskkbswrite', 'description': 'the write (bytes) of disk on the vm'}, {'type': 'string', 'name': 'diskofferingid', 'description': 'the ID of the disk offering of the virtual machine'}, {'type': 'boolean', 'name': 'passwordenabled', 'description': 'true if the password rest feature is enabled, false otherwise'}, {'description': 'the list of resource tags associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'date', 'name': 'created', 'description': 'the date when this virtual machine was created'}, {'type': 'boolean', 'name': 'forvirtualnetwork', 'description': 'the virtual network for the service offering'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the vm'}, {'type': 'string', 'name': 'groupid', 'description': 'the group ID of the virtual machine'}, {'type': 'string', 'name': 'isoname', 'description': 'the name of the ISO attached to the virtual machine'}, {'description': 'list of security groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'set', 'name': 'virtualmachineids', 'description': 'the list of virtualmachine ids associated with this securitygroup'}, {'type': 'string', 'name': 'name', 'description': 'the name of the security group'}, {'type': 'string', 'name': 'project', 'description': 'the project name of the group'}, {'description': 'the list of egress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}], 'name': 'tags'}, {'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}], 'name': 'egressrule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}], 'name': 'tags'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the security group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the security group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the security group'}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the security group'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the group'}, {'type': 'integer', 'name': 'virtualmachinecount', 'description': 'the number of virtualmachines associated with this securitygroup'}, {'type': 'string', 'name': 'description', 'description': 'the description of the security group'}, {'description': 'the list of ingress rules associated with the security group', 'type': 'set', 'response': [{'type': 'string', 'name': 'ruleid', 'description': 'the id of the security group rule'}, {'type': 'integer', 'name': 'endport', 'description': 'the ending IP of the security group rule '}, {'type': 'integer', 'name': 'startport', 'description': 'the starting IP of the security group rule'}, {'type': 'integer', 'name': 'icmptype', 'description': 'the type of the ICMP message response'}, {'type': 'string', 'name': 'account', 'description': 'account owning the security group rule'}, {'type': 'string', 'name': 'cidr', 'description': 'the CIDR notation for the base IP address of the security group rule'}, {'description': 'the list of resource tags associated with the rule', 'type': 'set', 'response': [{'type': 'string', 'name': 'projectid', 'description': 'the project id the tag belongs to'}, {'type': 'string', 'name': 'resourceid', 'description': 'id of the resource'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the tag'}, {'type': 'string', 'name': 'key', 'description': 'tag key name'}, {'type': 'string', 'name': 'domain', 'description': 'the domain associated with the tag'}, {'type': 'string', 'name': 'project', 'description': 'the project name where tag belongs to'}, {'type': 'string', 'name': 'value', 'description': 'tag value'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain associated with the tag'}, {'type': 'string', 'name': 'resourcetype', 'description': 'resource type'}, {'type': 'string', 'name': 'customer', 'description': 'customer associated with the tag'}], 'name': 'tags'}, {'type': 'integer', 'name': 'icmpcode', 'description': 'the code for the ICMP message response'}, {'type': 'string', 'name': 'protocol', 'description': 'the protocol of the security group rule'}, {'type': 'string', 'name': 'securitygroupname', 'description': 'security group name'}], 'name': 'ingressrule'}], 'name': 'securitygroup'}, {'type': 'string', 'name': 'username', 'description': "the user's name who deployed the virtual machine"}, {'type': 'string', 'name': 'serviceofferingname', 'description': 'the name of the service offering of the virtual machine'}, {'type': 'string', 'name': 'vgpu', 'description': 'the vgpu type used by the virtual machine'}, {'type': 'boolean', 'name': 'displayvm', 'description': 'an optional field whether to the display the vm to the end user or not.'}, {'type': 'string', 'name': 'zonename', 'description': 'the name of the availability zone for the virtual machine'}, {'type': 'long', 'name': 'ostypeid', 'description': 'OS type id of the vm'}, {'type': 'map', 'name': 'details', 'description': 'Vm details in key/value pairs.'}, {'type': 'string', 'name': 'keypair', 'description': 'ssh key-pair'}, {'type': 'string', 'name': 'hostid', 'description': 'the ID of the host for the virtual machine'}, {'type': 'string', 'name': 'domainid', 'description': 'the ID of the domain in which the virtual machine exists'}, {'description': 'the list of nics associated with vm', 'type': 'set', 'response': [{'type': 'string', 'name': 'ip6gateway', 'description': 'the gateway of IPv6 network'}, {'type': 'string', 'name': 'networkname', 'description': 'the name of the corresponding network'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the nic'}, {'type': 'string', 'name': 'broadcasturi', 'description': 'the broadcast uri of the nic'}, {'type': 'string', 'name': 'networkid', 'description': 'the ID of the corresponding network'}, {'type': 'string', 'name': 'macaddress', 'description': 'true if nic is default, false otherwise'}, {'type': 'list', 'name': 'secondaryip', 'description': 'the Secondary ipv4 addr of nic'}, {'type': 'string', 'name': 'virtualmachineid', 'description': 'Id of the vm to which the nic belongs'}, {'type': 'string', 'name': 'deviceid', 'description': 'device id for the network when plugged into the virtual machine'}, {'type': 'string', 'name': 'ipaddress', 'description': 'the ip address of the nic'}, {'type': 'string', 'name': 'netmask', 'description': 'the netmask of the nic'}, {'type': 'string', 'name': 'isolationuri', 'description': 'the isolation uri of the nic'}, {'type': 'string', 'name': 'traffictype', 'description': 'the traffic type of the nic'}, {'type': 'string', 'name': 'ip6address', 'description': 'the IPv6 address of network'}, {'type': 'string', 'name': 'ip6cidr', 'description': 'the cidr of IPv6 network'}, {'type': 'string', 'name': 'gateway', 'description': 'the gateway of the nic'}, {'type': 'string', 'name': 'type', 'description': 'the type of the nic'}, {'type': 'boolean', 'name': 'isdefault', 'description': 'true if nic is default, false otherwise'}], 'name': 'nic'}, {'type': 'string', 'name': 'hostname', 'description': 'the name of the host for the virtual machine'}, {'type': 'long', 'name': 'networkkbsread', 'description': 'the incoming network traffic on the vm'}, {'type': 'string', 'name': 'password', 'description': 'the password (if exists) of the virtual machine'}, {'type': 'string', 'name': 'zoneid', 'description': 'the ID of the availablility zone for the virtual machine'}, {'type': 'string', 'name': 'serviceofferingid', 'description': 'the ID of the service offering of the virtual machine'}, {'type': 'string', 'name': 'isoid', 'description': 'the ID of the ISO attached to the virtual machine'}, {'type': 'string', 'name': 'isodisplaytext', 'description': 'an alternate display text of the ISO attached to the virtual machine'}, {'type': 'integer', 'name': 'cpuspeed', 'description': 'the speed of each cpu'}, {'type': 'long', 'name': 'networkkbswrite', 'description': 'the outgoing network traffic on the host'}, {'type': 'string', 'name': 'publicip', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'name', 'description': 'the name of the virtual machine'}, {'type': 'string', 'name': 'projectid', 'description': 'the project id of the vm'}, {'type': 'long', 'name': 'diskiowrite', 'description': 'the write (io) of disk on the vm'}, {'type': 'string', 'name': 'cpuused', 'description': "the amount of the vm's CPU currently used"}, {'type': 'string', 'name': 'group', 'description': 'the group name of the virtual machine'}, {'type': 'string', 'name': 'rootdevicetype', 'description': 'device type of the root volume'}, {'type': 'boolean', 'name': 'haenable', 'description': 'true if high-availability is enabled, false otherwise'}, {'type': 'string', 'name': 'diskofferingname', 'description': 'the name of the disk offering of the virtual machine'}, {'type': 'string', 'name': 'domain', 'description': 'the name of the domain in which the virtual machine exists'}, {'type': 'string', 'name': 'templateid', 'description': 'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'}, {'type': 'string', 'name': 'state', 'description': 'the state of the virtual machine'}, {'type': 'long', 'name': 'rootdeviceid', 'description': 'device ID of the root volume'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the virtual machine'}, {'description': 'list of affinity groups associated with the virtual machine', 'type': 'set', 'response': [{'type': 'list', 'name': 'virtualmachineIds', 'description': 'virtual machine Ids associated with this affinity group '}, {'type': 'string', 'name': 'domain', 'description': 'the domain name of the affinity group'}, {'type': 'string', 'name': 'account', 'description': 'the account owning the affinity group'}, {'type': 'string', 'name': 'description', 'description': 'the description of the affinity group'}, {'type': 'string', 'name': 'name', 'description': 'the name of the affinity group'}, {'type': 'string', 'name': 'domainid', 'description': 'the domain ID of the affinity group'}, {'type': 'string', 'name': 'type', 'description': 'the type of the affinity group'}, {'type': 'string', 'name': 'id', 'description': 'the ID of the affinity group'}], 'name': 'affinitygroup'}, {'type': 'string', 'name': 'guestosid', 'description': 'Os type ID of the virtual machine'}, {'type': 'boolean', 'name': 'isdynamicallyscalable', 'description': 'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'}, {'type': 'integer', 'name': 'memory', 'description': 'the memory allocated for the virtual machine'}, {'type': 'string', 'name': 'servicestate', 'description': 'State of the Service from LB rule'}, {'type': 'string', 'name': 'publicipid', 'description': 'public IP address id associated with vm via Static nat rule'}, {'type': 'string', 'name': 'account', 'description': 'the account associated with the virtual machine'}, {'type': 'string', 'name': 'hypervisor', 'description': 'the hypervisor on which the template runs'}, {'type': 'integer', 'name': 'cpunumber', 'description': 'the number of cpu this virtual machine is running with'}, {'type': 'long', 'name': 'diskkbsread', 'description': 'the read (bytes) of disk on the vm'}, {'type': 'string', 'name': 'instancename', 'description': 'instance name of the user vm; this parameter is returned to the ROOT admin only'}, {'type': 'long', 'name': 'diskioread', 'description': 'the read (io) of disk on the vm'}], 'description': 'Change ownership of a VM from one account to another. This API is available for Basic zones with security groups and Advanced zones with guest networks. A root administrator can reassign a VM from any account to any other account in any domain. A domain administrator can reassign a VM to any account in the same domain.'}, 'toloadbalancerrule': {'name': 'assignToLoadBalancerRule', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listIpForwardingRules'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the load balancer rule'}, {'name': 'vmidipmap', 'required': False, 'related': [], 'length': 255, 'type': 'map', 'description': 'VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75'}, {'name': 'virtualmachineids', 'required': False, 'related': ['detachIso', 'restoreVirtualMachine', 'changeServiceForVirtualMachine', 'startVirtualMachine', 'migrateVirtualMachine', 'revertToVMSnapshot', 'updateVirtualMachine', 'listVirtualMachines', 'updateVirtualMachine', 'revertToVMSnapshot', 'stopVirtualMachine', 'attachIso', 'resetSSHKeyForVirtualMachine', 'rebootVirtualMachine', 'removeNicFromVirtualMachine', 'assignVirtualMachine', 'changeServiceForVirtualMachine', 'detachIso', 'stopVirtualMachine', 'updateDefaultNicForVirtualMachine', 'migrateVirtualMachineWithVolume', 'resetPasswordForVirtualMachine', 'startVirtualMachine', 'deployVirtualMachine', 'restoreVirtualMachine', 'destroyVirtualMachine', 'listVirtualMachines', 'destroyVirtualMachine', 'updateVMAffinityGroup', 'addNicToVirtualMachine'], 'length': 255, 'type': 'list', 'description': 'the list of IDs of the virtual machine that are being assigned to the load balancer rule(i.e. virtualMachineIds=1,2,3)'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Assigns virtual machine or a list of virtual machines to a load balancer rule.'}}, 'release': {'publiciprange': {'name': 'releasePublicIpRange', 'related': [], 'isasync': False, 'params': [{'name': 'id', 'required': True, 'related': ['listVlanIpRanges', 'dedicatePublicIpRange'], 'length': 255, 'type': 'uuid', 'description': 'the id of the Public IP range'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Releases a Public IP range back to the system pool'}, 'hostreservation': {'name': 'releaseHostReservation', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the host ID'}], 'requiredparams': ['id'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Releases host reservation.'}, 'dedicatedcluster': {'name': 'releaseDedicatedCluster', 'related': [], 'isasync': True, 'params': [{'name': 'clusterid', 'required': True, 'related': ['updateCluster'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Cluster'}], 'requiredparams': ['clusterid'], 'response': [{'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}, {'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}], 'description': 'Release the dedication for cluster'}, 'dedicatedzone': {'name': 'releaseDedicatedZone', 'related': [], 'isasync': True, 'params': [{'name': 'zoneid', 'required': True, 'related': ['listZones', 'createZone', 'listZones', 'updateZone'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Zone'}], 'requiredparams': ['zoneid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Release dedication of zone'}, 'dedicatedhost': {'name': 'releaseDedicatedHost', 'related': [], 'isasync': True, 'params': [{'name': 'hostid', 'required': True, 'related': ['addBaremetalHost', 'listHosts', 'listExternalLoadBalancers', 'updateHost', 'addHost', 'prepareHostForMaintenance'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the host'}], 'requiredparams': ['hostid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Release the dedication for host'}, 'dedicatedpod': {'name': 'releaseDedicatedPod', 'related': [], 'isasync': True, 'params': [{'name': 'podid', 'required': True, 'related': ['createPod', 'updatePod'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the Pod'}], 'requiredparams': ['podid'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Release the dedication for the pod'}, 'dedicatedguestvlanrange': {'name': 'releaseDedicatedGuestVlanRange', 'related': [], 'isasync': True, 'params': [{'name': 'id', 'required': True, 'related': ['listDedicatedGuestVlanRanges', 'dedicateGuestVlanRange'], 'length': 255, 'type': 'uuid', 'description': 'the ID of the dedicated guest vlan range'}], 'requiredparams': ['id'], 'response': [{'type': 'boolean', 'name': 'success', 'description': 'true if operation is executed successfully'}, {'type': 'string', 'name': 'displaytext', 'description': 'any text associated with the success or failure'}], 'description': 'Releases a dedicated guest vlan range to the system'}}}